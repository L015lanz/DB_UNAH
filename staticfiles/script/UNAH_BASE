--------------------------------------------------------
--  File created - Saturday-April-27-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence ESTUDIANTES
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."ESTUDIANTES"  MINVALUE 1 MAXVALUE 1049999 INCREMENT BY 1 START WITH 1001180 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_CAMBIO_CAR
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_CAMBIO_CAR"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_CAMBIO_CENTRO
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_CAMBIO_CENTRO"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_CANCEL_EX
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_CANCEL_EX"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_CANCEL_EXC_SEC
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_CANCEL_EXC_SEC"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_DOCENTES
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_DOCENTES"  MINVALUE 1 MAXVALUE 6029999 INCREMENT BY 1 START WITH 6001200 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_EVALUACIONES
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_EVALUACIONES"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_EXAM_ADMISION
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_EXAM_ADMISION"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 360 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_REPO
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_REPO"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SQ_SECCIONES
--------------------------------------------------------

   CREATE SEQUENCE  "C##DBAUNAH"."SQ_SECCIONES"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 262 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table ADMIN
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."ADMIN" 
   (	"USUARIO" VARCHAR2(30 CHAR), 
	"CONTRASEÑA" VARCHAR2(200 CHAR), 
	"PERSONA_DNI" VARCHAR2(15 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ASIGNATURA
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."ASIGNATURA" 
   (	"COD" VARCHAR2(12 CHAR), 
	"NOMBRE" VARCHAR2(80 CHAR), 
	"UV" NUMBER, 
	"DEPTO_ID" VARCHAR2(20 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ASPIRANTE
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."ASPIRANTE" 
   (	"PERSONA_DNI" VARCHAR2(15 CHAR), 
	"FOTOCERTIFICADO" VARCHAR2(200 CHAR), 
	"CENTRO_ID" VARCHAR2(8 CHAR), 
	"CAR_DISPONIBLE_ID" VARCHAR2(8 CHAR), 
	"PRIORIDAD" VARCHAR2(5 BYTE), 
	"EVALUADO" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table AULA
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."AULA" 
   (	"ID" VARCHAR2(8 BYTE), 
	"NOMBRE" VARCHAR2(50 CHAR), 
	"EDIFICIO_ID" VARCHAR2(8 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table AULA_ASIG
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."AULA_ASIG" 
   (	"DEPT_CENTRO_ID" VARCHAR2(8 CHAR), 
	"AULA_ID" VARCHAR2(8 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CANCELACIONES_SECCION_EXC
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."CANCELACIONES_SECCION_EXC" 
   (	"ID" NUMBER, 
	"ID_SECCION" VARCHAR2(15 CHAR), 
	"ID_S_CAN_EXC" VARCHAR2(12 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CARRERA
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."CARRERA" 
   (	"ID" VARCHAR2(8 CHAR), 
	"NOM_CARRERA" VARCHAR2(80 CHAR), 
	"GRADO_ID" VARCHAR2(5 CHAR), 
	"FACULTAD_ID" VARCHAR2(8 CHAR), 
	"EX_EXTRA" VARCHAR2(5 CHAR), 
	"DURACION_ID" VARCHAR2(5 CHAR), 
	"NOTA_APR" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CARRERAS_DEPTO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."CARRERAS_DEPTO" 
   (	"ID" NUMBER, 
	"CARRERA_ID" VARCHAR2(8 CHAR), 
	"DEPTO_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CAR_DISPONIBLE
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."CAR_DISPONIBLE" 
   (	"ID" VARCHAR2(8 CHAR), 
	"CENTRO_ID" VARCHAR2(8 CHAR), 
	"CARRERA_ID" VARCHAR2(8 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CENTRO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."CENTRO" 
   (	"ID" VARCHAR2(8 CHAR), 
	"NOMBRE" VARCHAR2(80 CHAR), 
	"ACRONIMO" VARCHAR2(10 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CONFIG_PERIOD
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."CONFIG_PERIOD" 
   (	"FEC_INI_PLAN" DATE, 
	"FEC_FINAL_PLAN" DATE, 
	"FEC_NOTA_INI" DATE, 
	"FEC_NOTA_FIN" DATE, 
	"PERIODO_PERIODO" NUMBER, 
	"PERIODO_AÑO" VARCHAR2(8 CHAR), 
	"PERIODO_DURACION_ID" VARCHAR2(5 CHAR), 
	"FEC_CAN_EXP_INI" DATE, 
	"FEC_CAN_EXP_FIN" DATE, 
	"FEC_PERIODO_INI" DATE, 
	"FEC_PERIODO_FIN" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CONF_MATRICULA
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."CONF_MATRICULA" 
   (	"INDICE_INICIO" NUMBER, 
	"INDICE_FINAL" NUMBER, 
	"FECHA_INICIO" TIMESTAMP (6), 
	"FECHA_FINAL" TIMESTAMP (6), 
	"NOMBRE" VARCHAR2(50 CHAR), 
	"PERIODO_PERIODO" NUMBER, 
	"PERIODO_AÑO" VARCHAR2(8 CHAR), 
	"PERIODO_DURACION_ID" VARCHAR2(5 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEPTO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."DEPTO" 
   (	"ID" VARCHAR2(20 BYTE), 
	"NOMBRE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEPTO_CENTRO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."DEPTO_CENTRO" 
   (	"ID" VARCHAR2(8 BYTE), 
	"DEPTO_ID" VARCHAR2(20 BYTE), 
	"CENTRO_ID" VARCHAR2(8 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DOCENTE
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."DOCENTE" 
   (	"N_EMPLEADO" VARCHAR2(11 CHAR), 
	"CONTRASEÑA" VARCHAR2(200 CHAR), 
	"FOTOEMPLEADO" VARCHAR2(500 CHAR), 
	"PERSONA_DNI" VARCHAR2(15 CHAR), 
	"ROL_ID" VARCHAR2(5 CHAR), 
	"CAR_DISPONIBLE_ID" VARCHAR2(8 CHAR), 
	"DEPT_CENTRO_ID" VARCHAR2(8 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DURACION
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."DURACION" 
   (	"ID" VARCHAR2(5 CHAR), 
	"DESCRIPCION" VARCHAR2(20 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EDIFICIO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."EDIFICIO" 
   (	"ID" VARCHAR2(8 CHAR), 
	"NOMBRE" VARCHAR2(20 CHAR), 
	"CENTRO_ID" VARCHAR2(8 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ESTADO_MAT
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."ESTADO_MAT" 
   (	"ID" VARCHAR2(5 CHAR), 
	"NOMBRE" VARCHAR2(20 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ESTUDIANTE
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."ESTUDIANTE" 
   (	"N_CUENTA" VARCHAR2(11 BYTE), 
	"CONTRASEÑA" VARCHAR2(200 CHAR), 
	"DESCRIPCION" VARCHAR2(200 BYTE), 
	"PERSONA_DNI" VARCHAR2(15 CHAR), 
	"CAR_DISPONIBLE_ID" VARCHAR2(8 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EVALUACION
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."EVALUACION" 
   (	"ID_EVALUACION" NUMBER, 
	"FK_SECCION_ID" VARCHAR2(15 CHAR), 
	"N_CUENTA" VARCHAR2(11 BYTE), 
	"OBSERVACIONES" VARCHAR2(200 CHAR), 
	"EVALUADA" NUMBER(1,0), 
	"AREA_PERSONAL" NUMBER(1,0), 
	"AREA_PROFESIONAL" NUMBER(1,0), 
	"AREA_ACADEMICA" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EXAMEN_ADMISION
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."EXAMEN_ADMISION" 
   (	"ID_EXAM" VARCHAR2(12 CHAR), 
	"TIPO_EXAM_ID" VARCHAR2(5 CHAR), 
	"PUNTUACION" NUMBER, 
	"ASPIRANTE_PERSONA_DNI" VARCHAR2(15 CHAR), 
	"ASPIRANTE_CAR_DISPONIBLE_ID" VARCHAR2(8 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FACULTAD
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."FACULTAD" 
   (	"ID" VARCHAR2(8 CHAR), 
	"NOM_FACULTAD" VARCHAR2(80 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FOTOS
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."FOTOS" 
   (	"ID" VARCHAR2(10 CHAR), 
	"URL" VARCHAR2(200 CHAR), 
	"ESTUDIANTE_N_CUENTA" VARCHAR2(11 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FOTO_PERFIL
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."FOTO_PERFIL" 
   (	"N_CUENTA" VARCHAR2(11 BYTE), 
	"FOTO" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table GRADO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."GRADO" 
   (	"ID" VARCHAR2(5 CHAR), 
	"TIPO" VARCHAR2(20 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MATRICULA
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."MATRICULA" 
   (	"CALIFICACION" NUMBER, 
	"ESTUDIANTE_N_CUENTA" VARCHAR2(11 BYTE), 
	"SECCION_ID" VARCHAR2(15 CHAR), 
	"FECHA" DATE, 
	"ESTADO_MAT_ID" VARCHAR2(5 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PENSUM
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."PENSUM" 
   (	"CARRERA_ID" VARCHAR2(8 CHAR), 
	"ASIGNATURA_COD" VARCHAR2(12 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PERIODO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."PERIODO" 
   (	"PERIODO" NUMBER, 
	"AÑO" VARCHAR2(8 CHAR), 
	"ACTIVO" NUMBER, 
	"DURACION_ID" VARCHAR2(5 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PERSONA
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."PERSONA" 
   (	"DNI" VARCHAR2(15 CHAR), 
	"PRIMERNOMBRE" VARCHAR2(20 CHAR), 
	"SEGUNDONOMBRE" VARCHAR2(20 CHAR), 
	"PRIMERAPELLIDO" VARCHAR2(20 CHAR), 
	"SEGUNDOAPELLIDO" VARCHAR2(20 BYTE), 
	"DIRECCION" VARCHAR2(200 CHAR), 
	"CORREOELECTRONICO" VARCHAR2(60 CHAR), 
	"TELEFONO" VARCHAR2(15 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table REQUISITOS
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."REQUISITOS" 
   (	"ID_ASIGNATURA" VARCHAR2(12 BYTE), 
	"ID_REQUISITO" VARCHAR2(12 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ROL
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."ROL" 
   (	"ID" VARCHAR2(5 CHAR), 
	"ROL" VARCHAR2(20 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SECCION
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."SECCION" 
   (	"ID" VARCHAR2(15 CHAR), 
	"NOMBRE" VARCHAR2(10 CHAR), 
	"HORAINCIO" INTERVAL DAY (2) TO SECOND (6), 
	"HORAFINAL" INTERVAL DAY (2) TO SECOND (6), 
	"CUPOS" NUMBER, 
	"ASIGNATURA_COD" VARCHAR2(12 CHAR), 
	"AULA_ID" VARCHAR2(8 BYTE), 
	"DOCENTE_N_EMPLEADO" VARCHAR2(11 CHAR), 
	"ESTADO" NUMBER, 
	"JUSTIFICACION" VARCHAR2(200 CHAR), 
	"LUNES" NUMBER(1,0), 
	"MARTES" NUMBER(1,0), 
	"MIERCOLES" NUMBER(1,0), 
	"JUEVES" NUMBER(1,0), 
	"VIERNES" NUMBER(1,0), 
	"SABADO" NUMBER(1,0), 
	"DOMINGO" NUMBER(1,0), 
	"DURACION_ID" VARCHAR2(5 BYTE), 
	"AÑO_ID" VARCHAR2(8 BYTE), 
	"PERIODO_ID" NUMBER, 
	"VIDEO" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table S_CAMBIO_CAR
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."S_CAMBIO_CAR" 
   (	"ID" VARCHAR2(12 CHAR), 
	"ESTUDIANTE_N_CUENTA" VARCHAR2(11 BYTE), 
	"CAR_DISPONIBLE_ID" VARCHAR2(8 CHAR), 
	"ESTADO" NUMBER(1,0), 
	"ANTIGUA_CAR" VARCHAR2(10 BYTE), 
	"FECHA_SOLICITUD" DATE, 
	"JUSTIFICACION" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table S_CAMBIO_CENTRO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."S_CAMBIO_CENTRO" 
   (	"ID" VARCHAR2(12 CHAR), 
	"JUSTIFICACION" VARCHAR2(200 CHAR), 
	"ESTUDIANTE_N_CUENTA" VARCHAR2(11 BYTE), 
	"CENTRO_ID" VARCHAR2(8 CHAR), 
	"ESTADO" NUMBER(1,0), 
	"FECHA_SOLICITUD" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table S_CANCEL_EXC
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."S_CANCEL_EXC" 
   (	"ID" VARCHAR2(12 CHAR), 
	"DOCUMENTO" VARCHAR2(200 CHAR), 
	"JUSTIFICACION" VARCHAR2(200 CHAR), 
	"ESTUDIANTE_N_CUENTA" VARCHAR2(11 BYTE), 
	"ESTADO" NUMBER(1,0), 
	"FECHA_SOLICITUD" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table S_REPO
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."S_REPO" 
   (	"ID" VARCHAR2(12 CHAR), 
	"ES_PAGADP" NUMBER, 
	"ESTUDIANTE_N_CUENTA" VARCHAR2(11 BYTE), 
	"FECHA_SOLICITUD" DATE, 
	"JUSTIFICACION" VARCHAR2(200 BYTE), 
	"PERIODO" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TIPO_EXAM
--------------------------------------------------------

  CREATE TABLE "C##DBAUNAH"."TIPO_EXAM" 
   (	"ID" VARCHAR2(5 CHAR), 
	"NOMBRE" VARCHAR2(10 CHAR), 
	"DESCRIPCION" VARCHAR2(80 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into C##DBAUNAH.ADMIN
SET DEFINE OFF;
Insert into C##DBAUNAH.ADMIN (USUARIO,"CONTRASEÑA",PERSONA_DNI) values ('AdminUnah?123','$2b$10$WI22CAS6iW3i0Z4iqF0a8eI73DvqmdA6Dq75fg9HSG9mTrAiX4.ba','0801200110655');
REM INSERTING into C##DBAUNAH.ASIGNATURA
SET DEFINE OFF;
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-110','INTRODUCCION A LA INGENIERIA EN SISTEMAS',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-210','PROGRAMACION II',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-311','CIRCUITOS ELECTRICOS',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-310','ALGORITMOS Y ESTRUCTURA DE DATOS',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-411','ELECTRONICA PARA INGENIERIA EN SISTEMAS',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-412','SISTEMAS OPERATIVOS I',5,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-410','PROGRAMACION ORIENTADA A OBJETOS',5,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-501','BASE DE DATOS I',5,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-510','INSTALACIONES ELECTRICAS',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-511','REDES DE DATOS I',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-512','SISTEMAS OPERATIVOS II',5,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-601','BASE DE DATOS II',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-603','ARQUITECTURA DE COMPUTADORAS',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-513','LENGUAJES DE PROGRAMACION',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-611','REDES DE DATOS II',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-711','DISENO DIGITAL',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-602','SISTEMA DE INFORMACION',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-811','SEGURIDAD INFORMATICA',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-720','ADMINISTRACION I',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-702','ANALISIS Y DISENO DE SISTEMAS',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-721','CONTABILIDAD I',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-903','AUDITORIA INFORMATICA',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-701','INTELIGENCIA ARTIFICIAL',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-802','INGENIERIA DEL SOFTWARE',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-820','FINANZAS ADMINISTRATIVAS',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-902','INDUSTRIA DEL SOFTWARE',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-904','GERENCIA INFORMATICA',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-906','TOPICOS ESPECIALES Y AVANZADOS',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-905','ECONOMIA DIGITAL',5,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-115','SEMINARIO DE INVESTIGACION',4,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-910','TEORIA DE LA SIMULACION',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-911','MICROPROCESADORES',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-914','LIDERAZGO PARA EL CAMBIO',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-912','SISTEMAS EXPERTOS',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IS-913','DISENO DE COMPILADORES',3,'1');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-210','INTRODUCCION A LA ING ELECTRICA',2,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-221','CIRCUITOS ELECTRICOS I',5,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-311','CIRCUITOS ELECTRICOS II',5,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-423','T DE LA PROBABILIDAD',3,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-313','METODOS MATEMATICOS PARA INGENIERIA',3,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-314','ELECTRONICA I ',4,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-414','ELECTRONICA II ',4,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-415','TEORIA DE LA ESTABILIDAD',3,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-416','ELECTROMAGNETISMO I',4,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('IE-421','MAQUINAS ELECTRICAS I ',4,'2');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('CE-020','PRINCIPIOS DE ECONOMIA',4,'3');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('CE-023','HISTORIA Y PENSAMIENTO ECONOMICO',4,'3');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('CE-040','MICROECONOMIA I',4,'3');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('CE-053','CUANTAS NACIONALES',4,'3');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('CE-065','ESTADISTICA ECONOMICA',4,'3');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('AGE-102','ADMINISTRACION',4,'4');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('AGE-113','DESARROLLO GERENCIAL',4,'4');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('AGE-133','METODOLOGIA DE LA INVESTIGACION APLICADA A LA ADMINISTRACION',4,'4');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('AGE-164','COMPORTAMIENTO INDIVIDUAL Y ORGANIZACIONAL',4,'4');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('AGE-174','CONTABILIDAD ADMINISTRATIVA I',4,'4');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('EN-011','ENFERMERIA PREVENTIVA Y FUTURO I',3,'5');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('EN-022','ENFERMERIA PREVENTIVA Y FUTURO II',3,'5');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('EN-223','ADMINISTRACION EN SALUD',4,'5');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('FH-031','FISIOPATOLOGIA I',3,'5');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('EN-122','INVESTIGACION Y SALUD II',4,'5');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('FS-111','FISICA MEDICA',4,'6');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('QQ-112','QUIMICA MEDICA II',5,'6');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('MM-241','BIOESTADISTICA',5,'6');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('PS-112','PSICOPATOLOGIA',3,'6');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('MI-134','EDUCACION AMBIENTAL',5,'6');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('NUT-102','DESARROLLO HUMANO Y COMUNICACION',4,'7');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('NUT-011','METODOLOGIA DE LA INVESTIGACION',3,'7');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('NUT-103','ANTROPOLOGIA ALIMENTARIA',3,'7');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('NUT-012','MORFOFISIOLOGIA APLICADA A LA NUTRICION',4,'7');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('NUT-104','NUTRICION BASICA',5,'7');
Insert into C##DBAUNAH.ASIGNATURA (COD,NOMBRE,UV,DEPTO_ID) values ('NULL','NULL',0,'1');
REM INSERTING into C##DBAUNAH.ASPIRANTE
SET DEFINE OFF;
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0102200110600','/public/foto_certificado-1700438442800-974301695.png','1','2','2',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0202200110601','/public/foto_certificado-1700438564686-110884465.png','1','1','1',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0102200110600','/public/foto_certificado-1700438442800-974301695.png','1','1','1',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0202200110601','/public/foto_certificado-1700438564686-110884465.png','1','2','2',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0202200110602','/public/foto_certificado-1700438697887-421464614.png','1','1','1',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0202200110602','/public/foto_certificado-1700438697887-421464614.png','1','5','2',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0202200110607','/public/foto_certificado-1700438847212-889679925.png','1','5','1',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0202200110607','/public/foto_certificado-1700438847212-889679925.png','1','3','2',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0508200078543','/public/foto_certificado-1700452155814-916295333.png','1','1','1',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0508200078543','/public/foto_certificado-1700452155814-916295333.png','1','2','2',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0303200003033','/public/foto_certificado-1700491577137-967569830.png','1','1','1',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0303200003033','/public/foto_certificado-1700491577137-967569830.png','1','4','2',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0505200010655','/public/foto_certificado-1700497839249-753187807.png','1','3','2',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0101199910101','/public/foto_certificado-1700845229761-713658232.png','1','2','2',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0505200010655','/public/foto_certificado-1700497839249-753187807.png','1','1','1',1);
Insert into C##DBAUNAH.ASPIRANTE (PERSONA_DNI,FOTOCERTIFICADO,CENTRO_ID,CAR_DISPONIBLE_ID,PRIORIDAD,EVALUADO) values ('0101199910101','/public/foto_certificado-1700845229761-713658232.png','1','1','1',1);
REM INSERTING into C##DBAUNAH.AULA
SET DEFINE OFF;
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('1','101','1');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('2','102','1');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('3','103','1');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('4','104','1');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('5','105','1');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('6','106','2');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('7','107','2');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('8','108','2');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('9','101','2');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('10','102','2');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('11','103','3');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('12','104','3');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('13','105','3');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('14','106','3');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('15','107','3');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('16','108','4');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('17','101','4');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('18','102','4');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('19','103','4');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('20','104','5');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('21','105','5');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('22','106','5');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('23','107','5');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('24','108','6');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('25','101','6');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('26','102','6');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('27','103','6');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('28','104','7');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('29','105','7');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('30','106','7');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('31','107','7');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('32','108','7');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('33','101','8');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('34','102','8');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('35','103','8');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('36','104','8');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('37','105','8');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('38','106','9');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('39','107','9');
Insert into C##DBAUNAH.AULA (ID,NOMBRE,EDIFICIO_ID) values ('40','108','9');
REM INSERTING into C##DBAUNAH.AULA_ASIG
SET DEFINE OFF;
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('1','1');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('1','2');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('1','3');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('1','4');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('1','5');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('1','6');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('2','10');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('2','7');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('2','8');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('2','9');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('7','28');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('7','29');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('7','30');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('7','31');
Insert into C##DBAUNAH.AULA_ASIG (DEPT_CENTRO_ID,AULA_ID) values ('7','32');
REM INSERTING into C##DBAUNAH.CANCELACIONES_SECCION_EXC
SET DEFINE OFF;
Insert into C##DBAUNAH.CANCELACIONES_SECCION_EXC (ID,ID_SECCION,ID_S_CAN_EXC) values (1,'77','3');
Insert into C##DBAUNAH.CANCELACIONES_SECCION_EXC (ID,ID_SECCION,ID_S_CAN_EXC) values (21,'222','21');
REM INSERTING into C##DBAUNAH.CARRERA
SET DEFINE OFF;
Insert into C##DBAUNAH.CARRERA (ID,NOM_CARRERA,GRADO_ID,FACULTAD_ID,EX_EXTRA,DURACION_ID,NOTA_APR) values ('1','Ingenieria en Sistemas','1','1','2','1',1100);
Insert into C##DBAUNAH.CARRERA (ID,NOM_CARRERA,GRADO_ID,FACULTAD_ID,EX_EXTRA,DURACION_ID,NOTA_APR) values ('2','Ingenieria Electrica','1','1','2','1',1100);
Insert into C##DBAUNAH.CARRERA (ID,NOM_CARRERA,GRADO_ID,FACULTAD_ID,EX_EXTRA,DURACION_ID,NOTA_APR) values ('3','Licenciatura en Economia','1','4',null,'1',700);
Insert into C##DBAUNAH.CARRERA (ID,NOM_CARRERA,GRADO_ID,FACULTAD_ID,EX_EXTRA,DURACION_ID,NOTA_APR) values ('4','Licenciatura en Administracion de Empresas','1','2',null,'1',700);
Insert into C##DBAUNAH.CARRERA (ID,NOM_CARRERA,GRADO_ID,FACULTAD_ID,EX_EXTRA,DURACION_ID,NOTA_APR) values ('5','Licenciatura en Enfermeria','3','2','3','2',1300);
Insert into C##DBAUNAH.CARRERA (ID,NOM_CARRERA,GRADO_ID,FACULTAD_ID,EX_EXTRA,DURACION_ID,NOTA_APR) values ('6','Doctor en medicina y cirugia','3','2','3','2',1300);
Insert into C##DBAUNAH.CARRERA (ID,NOM_CARRERA,GRADO_ID,FACULTAD_ID,EX_EXTRA,DURACION_ID,NOTA_APR) values ('7','Licenciatura en Nutricion','3','2','3','2',1000);
REM INSERTING into C##DBAUNAH.CARRERAS_DEPTO
SET DEFINE OFF;
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (1,'1','1');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (2,'2','2');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (3,'3','3');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (4,'4','4');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (5,'5','5');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (6,'6','6');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (7,'7','7');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (8,'8','8');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (9,'9','9');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (10,'10','10');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (11,'11','11');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (12,'12','12');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (13,'13','13');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (14,'14','14');
Insert into C##DBAUNAH.CARRERAS_DEPTO (ID,CARRERA_ID,DEPTO_ID) values (15,'15','15');
REM INSERTING into C##DBAUNAH.CAR_DISPONIBLE
SET DEFINE OFF;
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('1','1','1');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('2','1','2');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('3','1','3');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('4','1','4');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('5','1','6');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('6','1','7');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('7','2','1');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('8','2','2');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('9','2','3');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('10','2','5');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('11','2','6');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('12','3','3');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('13','3','4');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('14','4','3');
Insert into C##DBAUNAH.CAR_DISPONIBLE (ID,CENTRO_ID,CARRERA_ID) values ('15','4','4');
REM INSERTING into C##DBAUNAH.CENTRO
SET DEFINE OFF;
Insert into C##DBAUNAH.CENTRO (ID,NOMBRE,ACRONIMO) values ('1','Ciudad Universitaria','UNAH CU');
Insert into C##DBAUNAH.CENTRO (ID,NOMBRE,ACRONIMO) values ('2','Valle de Sula','UNAH VS');
Insert into C##DBAUNAH.CENTRO (ID,NOMBRE,ACRONIMO) values ('3','Regional del Litoral Atlantico','UNAH CURLA');
Insert into C##DBAUNAH.CENTRO (ID,NOMBRE,ACRONIMO) values ('4','Regional del Litoral Pacifico','UNAH CURLP');
REM INSERTING into C##DBAUNAH.CONFIG_PERIOD
SET DEFINE OFF;
Insert into C##DBAUNAH.CONFIG_PERIOD (FEC_INI_PLAN,FEC_FINAL_PLAN,FEC_NOTA_INI,FEC_NOTA_FIN,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID,FEC_CAN_EXP_INI,FEC_CAN_EXP_FIN,FEC_PERIODO_INI,FEC_PERIODO_FIN) values (to_date('01-NOV-23','DD-MON-RR'),to_date('30-DEC-23','DD-MON-RR'),to_date('18-NOV-23','DD-MON-RR'),to_date('30-DEC-23','DD-MON-RR'),3,'2023','1',to_date('06-NOV-23','DD-MON-RR'),to_date('07-DEC-23','DD-MON-RR'),to_date('01-NOV-23','DD-MON-RR'),to_date('30-DEC-23','DD-MON-RR'));
Insert into C##DBAUNAH.CONFIG_PERIOD (FEC_INI_PLAN,FEC_FINAL_PLAN,FEC_NOTA_INI,FEC_NOTA_FIN,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID,FEC_CAN_EXP_INI,FEC_CAN_EXP_FIN,FEC_PERIODO_INI,FEC_PERIODO_FIN) values (to_date('01-NOV-26','DD-MON-RR'),to_date('30-NOV-26','DD-MON-RR'),to_date('18-NOV-26','DD-MON-RR'),to_date('30-NOV-26','DD-MON-RR'),1,'2023','1',to_date('06-NOV-26','DD-MON-RR'),to_date('07-NOV-26','DD-MON-RR'),to_date('01-NOV-26','DD-MON-RR'),to_date('30-NOV-26','DD-MON-RR'));
Insert into C##DBAUNAH.CONFIG_PERIOD (FEC_INI_PLAN,FEC_FINAL_PLAN,FEC_NOTA_INI,FEC_NOTA_FIN,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID,FEC_CAN_EXP_INI,FEC_CAN_EXP_FIN,FEC_PERIODO_INI,FEC_PERIODO_FIN) values (to_date('28-NOV-26','DD-MON-RR'),to_date('09-DEC-27','DD-MON-RR'),to_date('15-MAR-27','DD-MON-RR'),to_date('26-MAR-27','DD-MON-RR'),3,'2024','1',to_date('20-MAR-27','DD-MON-RR'),to_date('22-MAR-27','DD-MON-RR'),to_date('02-DEC-26','DD-MON-RR'),to_date('02-APR-27','DD-MON-RR'));
Insert into C##DBAUNAH.CONFIG_PERIOD (FEC_INI_PLAN,FEC_FINAL_PLAN,FEC_NOTA_INI,FEC_NOTA_FIN,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID,FEC_CAN_EXP_INI,FEC_CAN_EXP_FIN,FEC_PERIODO_INI,FEC_PERIODO_FIN) values (to_date('01-NOV-26','DD-MON-RR'),to_date('30-NOV-26','DD-MON-RR'),to_date('18-NOV-26','DD-MON-RR'),to_date('30-NOV-26','DD-MON-RR'),2,'2023','1',to_date('06-NOV-26','DD-MON-RR'),to_date('07-NOV-26','DD-MON-RR'),to_date('01-NOV-26','DD-MON-RR'),to_date('30-NOV-26','DD-MON-RR'));
Insert into C##DBAUNAH.CONFIG_PERIOD (FEC_INI_PLAN,FEC_FINAL_PLAN,FEC_NOTA_INI,FEC_NOTA_FIN,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID,FEC_CAN_EXP_INI,FEC_CAN_EXP_FIN,FEC_PERIODO_INI,FEC_PERIODO_FIN) values (to_date('28-NOV-26','DD-MON-RR'),to_date('28-NOV-26','DD-MON-RR'),to_date('05-MAY-27','DD-MON-RR'),to_date('10-MAY-27','DD-MON-RR'),1,'2024','1',to_date('04-APR-27','DD-MON-RR'),to_date('14-APR-26','DD-MON-RR'),to_date('03-FEB-27','DD-MON-RR'),to_date('11-MAY-27','DD-MON-RR'));
Insert into C##DBAUNAH.CONFIG_PERIOD (FEC_INI_PLAN,FEC_FINAL_PLAN,FEC_NOTA_INI,FEC_NOTA_FIN,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID,FEC_CAN_EXP_INI,FEC_CAN_EXP_FIN,FEC_PERIODO_INI,FEC_PERIODO_FIN) values (to_date('02-APR-24','DD-MON-RR'),to_date('15-APR-24','DD-MON-RR'),to_date('01-SEP-24','DD-MON-RR'),to_date('07-SEP-23','DD-MON-RR'),2,'2024','1',to_date('10-MAY-24','DD-MON-RR'),to_date('10-AUG-24','DD-MON-RR'),to_date('01-MAY-24','DD-MON-RR'),to_date('08-SEP-24','DD-MON-RR'));
REM INSERTING into C##DBAUNAH.CONF_MATRICULA
SET DEFINE OFF;
Insert into C##DBAUNAH.CONF_MATRICULA (INDICE_INICIO,INDICE_FINAL,FECHA_INICIO,FECHA_FINAL,NOMBRE,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID) values (70,79,to_timestamp('05-DEC-23 09.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('09-DEC-23 11.59.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),'C',3,'2023','1');
Insert into C##DBAUNAH.CONF_MATRICULA (INDICE_INICIO,INDICE_FINAL,FECHA_INICIO,FECHA_FINAL,NOMBRE,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID) values (82,100,to_timestamp('04-DEC-23 09.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-DEC-23 11.59.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),'A',3,'2023','1');
Insert into C##DBAUNAH.CONF_MATRICULA (INDICE_INICIO,INDICE_FINAL,FECHA_INICIO,FECHA_FINAL,NOMBRE,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID) values (80,81,to_timestamp('26-NOV-23 09.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('07-DEC-23 11.59.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),'B y Primer Ingreso',3,'2023','1');
Insert into C##DBAUNAH.CONF_MATRICULA (INDICE_INICIO,INDICE_FINAL,FECHA_INICIO,FECHA_FINAL,NOMBRE,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID) values (0,69,to_timestamp('06-DEC-23 09.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('09-DEC-23 11.59.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),'D',3,'2023','1');
Insert into C##DBAUNAH.CONF_MATRICULA (INDICE_INICIO,INDICE_FINAL,FECHA_INICIO,FECHA_FINAL,NOMBRE,PERIODO_PERIODO,"PERIODO_AÑO",PERIODO_DURACION_ID) values (0,100,to_timestamp('26-NOV-23 09.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-DEC-23 11.59.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),'Adiciones y Cancelaciones',3,'2023','1');
REM INSERTING into C##DBAUNAH.DEPTO
SET DEFINE OFF;
Insert into C##DBAUNAH.DEPTO (ID,NOMBRE) values ('1','Ingenieria en Sistemas');
Insert into C##DBAUNAH.DEPTO (ID,NOMBRE) values ('2','Ingenieria Electrica');
Insert into C##DBAUNAH.DEPTO (ID,NOMBRE) values ('3','Economia');
Insert into C##DBAUNAH.DEPTO (ID,NOMBRE) values ('4','Administracion de Empresas');
Insert into C##DBAUNAH.DEPTO (ID,NOMBRE) values ('5','Enfermeria');
Insert into C##DBAUNAH.DEPTO (ID,NOMBRE) values ('6','Medicina');
Insert into C##DBAUNAH.DEPTO (ID,NOMBRE) values ('7','Nutricion');
REM INSERTING into C##DBAUNAH.DEPTO_CENTRO
SET DEFINE OFF;
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('1','1','1');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('2','2','1');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('3','3','1');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('4','4','1');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('5','6','1');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('6','7','1');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('7','1','2');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('8','2','2');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('9','3','2');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('10','5','2');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('11','6','2');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('12','3','3');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('13','4','3');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('14','3','4');
Insert into C##DBAUNAH.DEPTO_CENTRO (ID,DEPTO_ID,CENTRO_ID) values ('15','4','4');
REM INSERTING into C##DBAUNAH.DOCENTE
SET DEFINE OFF;
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001123','$2b$10$OWRgizly0J4SWHKFS12fyeLTVq6GIG86pjHPjTZMyks087glIiHgS','/public/foto_perfil-1701762995570-622556833.jpg','0101197010223','2','1','1');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001124','$2b$10$TMJZeE3N95qjPUTLRUfJYuiiJ1TAOub8w2QEGjCzAk0HHM1ewIUee','/public/foto_perfil-1701762995570-622556833.jpg','0101197010224','1','1','1');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001125','$2b$10$2OFXsgygOWO7HyfFIEaHwO0ZfYQv5ftuMMTBsSAkaJxgp0XNTxjEu','/public/foto_perfil-1701762995570-622556833.jpg','0101197010225','1','1','1');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001126','$2b$10$I.5GqI6.oo34yP37zfzYHO1TrigZMP0c/GPtgFDGbhLDLxSeCzVyG','/public/foto_perfil-1701762995570-622556833.jpg','0101197010227','1','1','1');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001164','mi_password','ruta/foto.jpg','0801200110659','3','3','3');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001127','$2b$10$CkMwdiug5Fq/Gld7X.mH6OG7Mrl6.aQLWbO6L4k30s2rpQU3ixYXy','/public/foto_empleado-1700437905598-525396942.png','0101197010228','1','1','1');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001128','$2b$10$whmxYNRy4oz/nHD2xWz26.oVtv0dgCwxt8rECkYPc2MXpXDqS5RwC','/public/foto_empleado-1700439948330-969524707.png','0702197712345','1','1','1');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001130','$2b$10$cjE8K0KOvRp28jeNCTKYHuPGzgJ.rUQs6DQMUEHwA8Y5WkZ6M/jNW','/public/foto_empleado-1700447361017-47934401.png','0101197010101','1','1','1');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001140','$2b$10$CiJ836NCkE.Pkn.NagDP6.0Ply1zSkrMjyAAMxjcMErn7Ydww1GMa','/public/foto_empleado-1700496328184-527351882.png','0404200010101','1','2','2');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001162','mi_password','ruta/foto.jpg','0801200110657','2','2','2');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001163','mi_password','ruta/foto.jpg','0801200110658','2','3','3');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001180','$2b$10$zjEsEklp33qYWukOHmXx1eMOtkv70E/rY8VLae/9NbG4JELaDfRcC','/public/foto_empleado-1701570926491-500669134.png','0101200120655','3','1','1');
Insert into C##DBAUNAH.DOCENTE (N_EMPLEADO,"CONTRASEÑA",FOTOEMPLEADO,PERSONA_DNI,ROL_ID,CAR_DISPONIBLE_ID,DEPT_CENTRO_ID) values ('20246001165','$2b$10$nUdnkJFEtClgy36bM1wllutCoQmOQKxxyhvqlAQVti4W6HoFbD9yS','/public/foto_empleado-1700806211566-53309118.png','0801200008080','1','2','2');
REM INSERTING into C##DBAUNAH.DURACION
SET DEFINE OFF;
Insert into C##DBAUNAH.DURACION (ID,DESCRIPCION) values ('1','Trimestral');
Insert into C##DBAUNAH.DURACION (ID,DESCRIPCION) values ('2','Semestral');
REM INSERTING into C##DBAUNAH.EDIFICIO
SET DEFINE OFF;
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('1','B2','1');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('2','B1','1');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('3','A2','1');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('4','A1','2');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('5','D1','1');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('6','F1','3');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('7','H1','2');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('8','F1','2');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('9','D1','3');
Insert into C##DBAUNAH.EDIFICIO (ID,NOMBRE,CENTRO_ID) values ('10','C2','4');
REM INSERTING into C##DBAUNAH.ESTADO_MAT
SET DEFINE OFF;
Insert into C##DBAUNAH.ESTADO_MAT (ID,NOMBRE) values ('1','EN CURSO');
Insert into C##DBAUNAH.ESTADO_MAT (ID,NOMBRE) values ('2','CANCELADA');
Insert into C##DBAUNAH.ESTADO_MAT (ID,NOMBRE) values ('3','LISTA DE ESPERA');
Insert into C##DBAUNAH.ESTADO_MAT (ID,NOMBRE) values ('4','CURSADA');
REM INSERTING into C##DBAUNAH.ESTUDIANTE
SET DEFINE OFF;
Insert into C##DBAUNAH.ESTUDIANTE (N_CUENTA,"CONTRASEÑA",DESCRIPCION,PERSONA_DNI,CAR_DISPONIBLE_ID) values ('20241001146','$2b$10$8LYDmjheYPts1jx4X/vMs.YZd1pIOZr2foDcFu0gSEmp.KiayouEW',null,'0202200110601','1');
Insert into C##DBAUNAH.ESTUDIANTE (N_CUENTA,"CONTRASEÑA",DESCRIPCION,PERSONA_DNI,CAR_DISPONIBLE_ID) values ('20241001147','$2b$10$8LYDmjheYPts1jx4X/vMs.YZd1pIOZr2foDcFu0gSEmp.KiayouEW',null,'0202200110607','3');
Insert into C##DBAUNAH.ESTUDIANTE (N_CUENTA,"CONTRASEÑA",DESCRIPCION,PERSONA_DNI,CAR_DISPONIBLE_ID) values ('20241001148','$2b$10$8LYDmjheYPts1jx4X/vMs.YZd1pIOZr2foDcFu0gSEmp.KiayouEW',null,'0508200078543','1');
Insert into C##DBAUNAH.ESTUDIANTE (N_CUENTA,"CONTRASEÑA",DESCRIPCION,PERSONA_DNI,CAR_DISPONIBLE_ID) values ('20241001144','$2b$10$8LYDmjheYPts1jx4X/vMs.YZd1pIOZr2foDcFu0gSEmp.KiayouEW',null,'0202200110602','1');
Insert into C##DBAUNAH.ESTUDIANTE (N_CUENTA,"CONTRASEÑA",DESCRIPCION,PERSONA_DNI,CAR_DISPONIBLE_ID) values ('20241001145','$2b$10$8LYDmjheYPts1jx4X/vMs.YZd1pIOZr2foDcFu0gSEmp.KiayouEW',null,'0102200110600','1');
Insert into C##DBAUNAH.ESTUDIANTE (N_CUENTA,"CONTRASEÑA",DESCRIPCION,PERSONA_DNI,CAR_DISPONIBLE_ID) values ('20241001160','$2b$10$8LYDmjheYPts1jx4X/vMs.YZd1pIOZr2foDcFu0gSEmp.KiayouEW',null,'0101199910101','1');
Insert into C##DBAUNAH.ESTUDIANTE (N_CUENTA,"CONTRASEÑA",DESCRIPCION,PERSONA_DNI,CAR_DISPONIBLE_ID) values ('20241001149','$2b$10$8LYDmjheYPts1jx4X/vMs.YZd1pIOZr2foDcFu0gSEmp.KiayouEW',null,'0303200003033','1');
REM INSERTING into C##DBAUNAH.EVALUACION
SET DEFINE OFF;
Insert into C##DBAUNAH.EVALUACION (ID_EVALUACION,FK_SECCION_ID,N_CUENTA,OBSERVACIONES,EVALUADA,AREA_PERSONAL,AREA_PROFESIONAL,AREA_ACADEMICA) values (48,'204','20241001145','b',1,2,3,2);
Insert into C##DBAUNAH.EVALUACION (ID_EVALUACION,FK_SECCION_ID,N_CUENTA,OBSERVACIONES,EVALUADA,AREA_PERSONAL,AREA_PROFESIONAL,AREA_ACADEMICA) values (50,'208','20241001145','a',1,3,2,3);
Insert into C##DBAUNAH.EVALUACION (ID_EVALUACION,FK_SECCION_ID,N_CUENTA,OBSERVACIONES,EVALUADA,AREA_PERSONAL,AREA_PROFESIONAL,AREA_ACADEMICA) values (60,'80','20241001144','v',1,3,3,4);
Insert into C##DBAUNAH.EVALUACION (ID_EVALUACION,FK_SECCION_ID,N_CUENTA,OBSERVACIONES,EVALUADA,AREA_PERSONAL,AREA_PROFESIONAL,AREA_ACADEMICA) values (47,'202','20241001144','c',1,4,4,4);
Insert into C##DBAUNAH.EVALUACION (ID_EVALUACION,FK_SECCION_ID,N_CUENTA,OBSERVACIONES,EVALUADA,AREA_PERSONAL,AREA_PROFESIONAL,AREA_ACADEMICA) values (53,'208','20241001144','d',1,2,2,5);
Insert into C##DBAUNAH.EVALUACION (ID_EVALUACION,FK_SECCION_ID,N_CUENTA,OBSERVACIONES,EVALUADA,AREA_PERSONAL,AREA_PROFESIONAL,AREA_ACADEMICA) values (104,'75','20241001146',null,0,null,null,null);
REM INSERTING into C##DBAUNAH.EXAMEN_ADMISION
SET DEFINE OFF;
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('323','2',1300,'0202200110601','1');
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('324','1',1200,'0202200110602',null);
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('320','1',1233,'0102200110600',null);
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('321','2',1110,'0102200110600','1');
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('322','1',1200,'0202200110601',null);
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('325','2',1200,'0202200110602','1');
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('326','3',1180,'0202200110602','1');
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('327','1',800,'0202200110607',null);
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('328','3',700,'0202200110607','5');
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('329','1',1233,'0508200078543',null);
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('330','2',1100,'0508200078543','1');
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('331','1',1233,'0303200003033',null);
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('332','2',1100,'0303200003033','1');
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('343','2',1555,'0101199910101','1');
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('342','1',1200,'0101199910101',null);
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('335','1',null,'0505200010655',null);
Insert into C##DBAUNAH.EXAMEN_ADMISION (ID_EXAM,TIPO_EXAM_ID,PUNTUACION,ASPIRANTE_PERSONA_DNI,ASPIRANTE_CAR_DISPONIBLE_ID) values ('336','2',null,'0505200010655','1');
REM INSERTING into C##DBAUNAH.FACULTAD
SET DEFINE OFF;
Insert into C##DBAUNAH.FACULTAD (ID,NOM_FACULTAD) values ('1','Ingenieria');
Insert into C##DBAUNAH.FACULTAD (ID,NOM_FACULTAD) values ('2','Ciencias Medicas');
Insert into C##DBAUNAH.FACULTAD (ID,NOM_FACULTAD) values ('3','Ciencias Juridicas');
Insert into C##DBAUNAH.FACULTAD (ID,NOM_FACULTAD) values ('4','Ciencias Economicas, Administrativas y Contables');
REM INSERTING into C##DBAUNAH.FOTOS
SET DEFINE OFF;
REM INSERTING into C##DBAUNAH.FOTO_PERFIL
SET DEFINE OFF;
Insert into C##DBAUNAH.FOTO_PERFIL (N_CUENTA,FOTO) values ('20241001144','/public/foto_perfil-1701737829030-583631230.jpg');
Insert into C##DBAUNAH.FOTO_PERFIL (N_CUENTA,FOTO) values ('20241001145','/public/foto_perfil-1701738268547-445349290.png');
Insert into C##DBAUNAH.FOTO_PERFIL (N_CUENTA,FOTO) values ('20241001145','/public/foto_perfil-1701738503230-120132788.png');
Insert into C##DBAUNAH.FOTO_PERFIL (N_CUENTA,FOTO) values ('20241001144','/public/foto_perfil-1701740103604-489045845.jpg');
Insert into C##DBAUNAH.FOTO_PERFIL (N_CUENTA,FOTO) values ('20241001144','/public/foto_perfil-1701740183302-271978255.jpg');
Insert into C##DBAUNAH.FOTO_PERFIL (N_CUENTA,FOTO) values ('20241001145','/public/foto_perfil-1701762995570-622556833.jpg');
REM INSERTING into C##DBAUNAH.GRADO
SET DEFINE OFF;
Insert into C##DBAUNAH.GRADO (ID,TIPO) values ('1','Licenciatura');
Insert into C##DBAUNAH.GRADO (ID,TIPO) values ('2','Tecnico');
Insert into C##DBAUNAH.GRADO (ID,TIPO) values ('3','Postgrado');
REM INSERTING into C##DBAUNAH.MATRICULA
SET DEFINE OFF;
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (92,'20241001145','204',null,'4');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (78,'20241001145','208',null,'4');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (90,'20241001144','80',null,'1');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (100,'20241001144','81',null,'2');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (null,'20241001144','77',null,'2');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (null,'20241001145','222',null,'2');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (83,'20241001144','202',null,'4');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (null,'20241001145','77',null,'2');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (96,'20241001144','208',null,'4');
Insert into C##DBAUNAH.MATRICULA (CALIFICACION,ESTUDIANTE_N_CUENTA,SECCION_ID,FECHA,ESTADO_MAT_ID) values (null,'20241001146','75',null,'1');
REM INSERTING into C##DBAUNAH.PENSUM
SET DEFINE OFF;
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-110');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-115');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-210');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-310');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-311');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-410');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-411');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-412');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-501');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-510');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-511');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-512');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-513');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-601');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-602');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-603');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-611');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-701');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-702');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-711');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-720');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-721');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-802');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-811');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-820');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-902');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-903');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-904');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-905');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-906');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-910');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-911');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-912');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-913');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','IS-914');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('1','NULL');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-210');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-221');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-311');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-313');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-314');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-414');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-415');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-416');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-421');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('2','IE-423');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('3','CE-020');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('3','CE-023');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('3','CE-040');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('3','CE-053');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('3','CE-065');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('4','AGE-102');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('4','AGE-113');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('4','AGE-133');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('4','AGE-164');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('4','AGE-174');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('5','EN-011');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('5','EN-022');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('5','EN-122');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('5','EN-223');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('5','FH-031');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('6','FS-111');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('6','MI-134');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('6','MM-241');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('6','PS-112');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('6','QQ-112');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('7','NUT-011');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('7','NUT-012');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('7','NUT-102');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('7','NUT-103');
Insert into C##DBAUNAH.PENSUM (CARRERA_ID,ASIGNATURA_COD) values ('7','NUT-104');
REM INSERTING into C##DBAUNAH.PERIODO
SET DEFINE OFF;
Insert into C##DBAUNAH.PERIODO (PERIODO,"AÑO",ACTIVO,DURACION_ID) values (3,'2024',1,'1');
Insert into C##DBAUNAH.PERIODO (PERIODO,"AÑO",ACTIVO,DURACION_ID) values (3,'2023',1,'1');
Insert into C##DBAUNAH.PERIODO (PERIODO,"AÑO",ACTIVO,DURACION_ID) values (2,'2023',1,'1');
Insert into C##DBAUNAH.PERIODO (PERIODO,"AÑO",ACTIVO,DURACION_ID) values (1,'2023',1,'1');
Insert into C##DBAUNAH.PERIODO (PERIODO,"AÑO",ACTIVO,DURACION_ID) values (1,'2025',1,'1');
Insert into C##DBAUNAH.PERIODO (PERIODO,"AÑO",ACTIVO,DURACION_ID) values (1,'2024',1,'1');
Insert into C##DBAUNAH.PERIODO (PERIODO,"AÑO",ACTIVO,DURACION_ID) values (2,'2024',1,'1');
REM INSERTING into C##DBAUNAH.PERSONA
SET DEFINE OFF;
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0101197010225','Juan','Anibal','Zuniga','Cortes','EL Ato','sasas@gmail.com','98989898');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0101197010227','Jose','Jose','Zuniga','Cortes','EL Ato','sasaa@gmail.com','98989898');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0101197010228','Yuri','Susana','Zuniga','Cortes','EL Ato','sasa@gmail.com','98989898');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0101197010223','Alex','Eduardo','Hernan','Cortes','EL Ato','luisglainezw001+11@gmail.com','98989898');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0101197010224','Edgardo','Pedro','Flores','Cortes','EL Ato','joelrenerodriguez2002+23@gmail.com','98989898');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0202200110601','Alex','Edgardo','Espinoza','Paz','EL Ato','alexepam11+1@gmail.com','78787878');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0202200110602','Mario','Eduardo','Zelaya','Cortes','EL ATO','joelrenerodriguez2002+13@gmail.com','78787878');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0202200110607','Andres','Samuel','Cajon','Manzano','SUYAPA','alexepam11@gmail.com','12121212');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('12345678A','Juan','Carlos','Gómez','Pérez','Calle 123, Ciudad','juan+1@gmail.com','555-1234');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0508200078543','Joel','ElMeroQueso','Rodriguez','Guzman','Col. Flor del campo','joelrenerodriguez2002@gmail.com','98979695');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0102200110600','Luis','Gerardo','Lainez','Zeron','EL Ato','luisglainezw001@gmail.com','89898989');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0303200003033','Luis','Samuel','Espinoza','Manzano','boulevard Suyapa','luisglainezw001+2@gmail.com','99999999');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0801200110659','Juan','Guarnizo','Gómez','Pérez','Calle 123, Ciudad','joelrenerodriguez2002+10@gmail.com','555-1234');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0801200110657','Juan','Carlos','Gómez','Pérez','Calle 123, Ciudad','juan+3@gmail.com','555-1234');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0801200110658','Juan','Carlos','Gómez','Pérez','Calle 123, Ciudad','juan+4@gmail.com','555-1234');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0101200120655','Mario','Andrade','Dos Santos','Cuccitini','Suyapa','luisglainezw001+13@gmail.com','89898989');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0801200110655','Luis','Gerardo','Lainez ','Zeron','La sosa, Tegucigalpa','luisglainezw001+10@gmail.com','98989898');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0702197712345','Estuardo','Carabiglio','Fetuccini','Fernandez','Col. Roma','carabaggio1234567@gmail.com','22334455');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0404200010101','Luis','Eduardo','Smith','Manzano','SUYAPA','sas@gmail.com','89898989');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0505200010655','Alex','Eduardo','Suarez','Cortes','aalfre','luisglainezw001+3@gmail.com','99999999');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0101197010101','Luis','Alebrt','Suarez','Espinoza','SUYAPA','sa6s@gmail.com','68686868');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0801200008080','Jorge ','Luis','Zepeda','Castro','Centro','JorgeZ@gmail.com','22222222');
Insert into C##DBAUNAH.PERSONA (DNI,PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,DIRECCION,CORREOELECTRONICO,TELEFONO) values ('0101199910101','Luis','Eduardo','Suarez','Castilla','SUYAPA','luisglainezw001+5@gmail.com','12121212');
REM INSERTING into C##DBAUNAH.REQUISITOS
SET DEFINE OFF;
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-110','NULL');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-210','IS-110');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-311','IS-210');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-310','IS-210');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-411','IS-310');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-412','IS-311');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-410','IS-310');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-501','IS-410');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-510','IS-311');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-511','IS-411');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-512','IS-412');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-601','IS-501');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-603','IS-511');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-513','IS-410');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-611','IS-511');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-711','IS-603');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-602','IS-513');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-811','IS-711');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-720','IS-602');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-702','IS-720');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-721','IS-720');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-903','IS-811');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-701','IS-602');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-802','IS-702');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-820','IS-721');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-902','IS-802');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-904','IS-811');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-906','IS-904');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-905','IS-820');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-115','NULL');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-910','IS-904');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-911','IS-603');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-914','IS-820');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-912','IS-701');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IS-913','IS-603');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-210','NULL');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-221','IE-210');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-311','IE-221');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-423','IE-311');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-313','IE-423');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-314','IE-313');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-414','IE-314');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-415','IE-414');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-416','IE-415');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('IE-421','IE-416');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('CE-020','NULL');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('CE-023','CE-020');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('CE-040','CE-023');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('CE-053','CE-040');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('CE-065','CE-053');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('AGE-102','NULL');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('AGE-113','AGE-102');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('AGE-133','AGE-113');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('AGE-164','AGE-133');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('AGE-174','AGE-164');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('EN-011','NULL');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('EN-022','EN-011');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('EN-223','EN-022');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('FH-031','EN-223');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('EN-122','FH-031');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('FS-111','NULL');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('QQ-112','FS-111');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('MM-241','QQ-112');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('PS-112','MM-241');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('MI-134','PS-112');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('NUT-102','NULL');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('NUT-011','NUT-102');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('NUT-103','NUT-011');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('NUT-012','NUT-103');
Insert into C##DBAUNAH.REQUISITOS (ID_ASIGNATURA,ID_REQUISITO) values ('NUT-104','NUT-012');
REM INSERTING into C##DBAUNAH.ROL
SET DEFINE OFF;
Insert into C##DBAUNAH.ROL (ID,ROL) values ('1','docente');
Insert into C##DBAUNAH.ROL (ID,ROL) values ('2','jefe');
Insert into C##DBAUNAH.ROL (ID,ROL) values ('3','coordinador');
REM INSERTING into C##DBAUNAH.SECCION
SET DEFINE OFF;
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('211','1800','+00 18:00:00.000000','+00 19:00:00.000000',30,'IS-601','4','20246001128',1,null,1,1,1,1,0,0,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('242','700','+00 07:00:00.000000','+00 08:00:00.000000',34,'IS-410','3','20246001180',1,null,1,1,1,1,1,0,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('243','700','+00 07:00:00.000000','+00 10:00:00.000000',4,'IS-110','5','20246001180',1,null,0,0,0,0,0,1,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('206','800','+00 08:00:00.000000','+00 09:00:00.000000',34,'IS-110','1','20246001125',1,null,1,1,1,0,0,0,0,'1','2023',2,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('76','900','+00 09:00:00.000000','+00 10:00:00.000000',29,'IS-210','9','20246001124',1,null,1,1,1,1,0,0,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('207','1300','+00 13:00:00.000000','+00 14:00:00.000000',23,'IS-110','2','20246001126',1,null,1,1,1,0,0,0,0,'1','2023',2,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('77','800','+00 08:00:00.000000','+00 11:00:00.000000',40,'IS-311','3','20246001125',1,null,0,0,0,0,0,1,0,'1','2023',3,'/public/video-1701739654881-450573634.mp4');
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('80','1600','+00 16:00:00.000000','+00 17:00:00.000000',15,'IS-311','3','20246001123',1,null,1,1,1,0,0,0,0,'1','2023',3,'/public/video-1701856104106-733092581.mp4');
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('79','700','+00 07:00:00.000000','+00 08:00:00.000000',45,'IS-210','2','20246001128',1,null,1,1,1,1,0,0,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('208','1000','+00 10:00:00.000000','+00 11:00:00.000000',23,'IS-210','3','20246001127',1,null,1,1,1,1,0,0,0,'1','2023',2,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('75','900','+00 09:00:00.000000','+00 10:00:00.000000',25,'IS-110','3','20246001123',1,null,1,1,1,0,0,0,0,'1','2023',3,'/public/video-1701878094921-402226592.mp4');
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('81','1300','+00 13:00:00.000000','+00 14:00:00.000000',15,'IS-310','3','20246001128',1,null,1,1,1,1,0,0,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('182','901','+00 09:00:00.000000','+00 12:00:00.000000',34,'IS-110','1','20246001125',1,null,1,0,0,0,0,0,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('6','1300','+00 13:00:00.000000','+00 14:00:00.000000',34,'IS-510','1','20246001125',1,null,0,0,0,1,1,1,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('222','900','+00 09:00:00.000000','+00 11:00:00.000000',23,'IS-310','4','20246001123',1,null,0,0,0,1,1,0,0,'1','2023',3,'/public/video-1701759019288-295044495.mp4');
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('209','800','+00 08:00:00.000000','+00 12:00:00.000000',32,'IS-310','6','20246001126',1,null,0,0,0,0,1,0,0,'1','2023',3,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('202','900','+00 09:00:00.000000','+00 10:00:00.000000',23,'IS-110','1','20246001125',1,null,1,1,1,0,0,0,0,'1','2023',1,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('203','1700','+00 17:00:00.000000','+00 18:00:00.000000',30,'IS-411','4','20246001126',1,null,1,1,1,0,0,0,0,'1','2023',1,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('204','1500','+00 15:00:00.000000','+00 16:00:00.000000',34,'IS-110','3','20246001126',1,null,0,1,1,1,0,0,0,'1','2023',1,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('205','1500','+00 15:00:00.000000','+00 16:00:00.000000',20,'IS-310','4','20246001128',1,null,1,1,1,1,0,0,0,'1','2023',1,null);
Insert into C##DBAUNAH.SECCION (ID,NOMBRE,HORAINCIO,HORAFINAL,CUPOS,ASIGNATURA_COD,AULA_ID,DOCENTE_N_EMPLEADO,ESTADO,JUSTIFICACION,LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO,DURACION_ID,"AÑO_ID",PERIODO_ID,VIDEO) values ('210','1600','+00 16:00:00.000000','+00 17:00:00.000000',12,'IS-310','4','20246001130',1,null,1,1,1,1,0,0,0,'1','2023',3,null);
REM INSERTING into C##DBAUNAH.S_CAMBIO_CAR
SET DEFINE OFF;
Insert into C##DBAUNAH.S_CAMBIO_CAR (ID,ESTUDIANTE_N_CUENTA,CAR_DISPONIBLE_ID,ESTADO,ANTIGUA_CAR,FECHA_SOLICITUD,JUSTIFICACION) values ('131','20241001145','1',null,'2',to_date('02-DEC-23','DD-MON-RR'),null);
REM INSERTING into C##DBAUNAH.S_CAMBIO_CENTRO
SET DEFINE OFF;
Insert into C##DBAUNAH.S_CAMBIO_CENTRO (ID,JUSTIFICACION,ESTUDIANTE_N_CUENTA,CENTRO_ID,ESTADO,FECHA_SOLICITUD) values ('22','ya me voi','20241001145','2',null,to_date('03-DEC-23','DD-MON-RR'));
Insert into C##DBAUNAH.S_CAMBIO_CENTRO (ID,JUSTIFICACION,ESTUDIANTE_N_CUENTA,CENTRO_ID,ESTADO,FECHA_SOLICITUD) values ('41','no nada','20241001145','2',0,to_date('05-DEC-23','DD-MON-RR'));
Insert into C##DBAUNAH.S_CAMBIO_CENTRO (ID,JUSTIFICACION,ESTUDIANTE_N_CUENTA,CENTRO_ID,ESTADO,FECHA_SOLICITUD) values ('21','Estoy cansado jefe','20241001145','3',null,to_date('03-DEC-23','DD-MON-RR'));
Insert into C##DBAUNAH.S_CAMBIO_CENTRO (ID,JUSTIFICACION,ESTUDIANTE_N_CUENTA,CENTRO_ID,ESTADO,FECHA_SOLICITUD) values ('42','QUiero cambiar','20241001145','3',null,to_date('06-DEC-23','DD-MON-RR'));
Insert into C##DBAUNAH.S_CAMBIO_CENTRO (ID,JUSTIFICACION,ESTUDIANTE_N_CUENTA,CENTRO_ID,ESTADO,FECHA_SOLICITUD) values ('4','abc','20241001145','3',null,to_date('02-DEC-23','DD-MON-RR'));
REM INSERTING into C##DBAUNAH.S_CANCEL_EXC
SET DEFINE OFF;
Insert into C##DBAUNAH.S_CANCEL_EXC (ID,DOCUMENTO,JUSTIFICACION,ESTUDIANTE_N_CUENTA,ESTADO,FECHA_SOLICITUD) values ('3','/public/foto_cancelacion-1701582987613-349030726.png','enfermedad','20241001145',1,to_date('02-DEC-23','DD-MON-RR'));
Insert into C##DBAUNAH.S_CANCEL_EXC (ID,DOCUMENTO,JUSTIFICACION,ESTUDIANTE_N_CUENTA,ESTADO,FECHA_SOLICITUD) values ('21','/public/foto_cancelacion-1701750654810-265345702.png','Estoy cansado jefe','20241001145',null,to_date('04-DEC-23','DD-MON-RR'));
REM INSERTING into C##DBAUNAH.S_REPO
SET DEFINE OFF;
Insert into C##DBAUNAH.S_REPO (ID,ES_PAGADP,ESTUDIANTE_N_CUENTA,FECHA_SOLICITUD,JUSTIFICACION,PERIODO) values ('24',0,'20241001145',to_date('03-DEC-23','DD-MON-RR'),'quiero hacer repo','3 2023');
REM INSERTING into C##DBAUNAH.TIPO_EXAM
SET DEFINE OFF;
Insert into C##DBAUNAH.TIPO_EXAM (ID,NOMBRE,DESCRIPCION) values ('1','PAA','Examen de Admision');
Insert into C##DBAUNAH.TIPO_EXAM (ID,NOMBRE,DESCRIPCION) values ('2','PAM','Examen de Aprovechamiento Matematico');
Insert into C##DBAUNAH.TIPO_EXAM (ID,NOMBRE,DESCRIPCION) values ('3','PCCNS','Examen de Conocimientos Cientifico');
--------------------------------------------------------
--  DDL for Index ADMIN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."ADMIN_PK" ON "C##DBAUNAH"."ADMIN" ("USUARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ASIGNATURA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."ASIGNATURA_PK" ON "C##DBAUNAH"."ASIGNATURA" ("COD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ASPIRANTE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."ASPIRANTE_PK" ON "C##DBAUNAH"."ASPIRANTE" ("PERSONA_DNI", "CAR_DISPONIBLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AULA_ASIG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."AULA_ASIG_PK" ON "C##DBAUNAH"."AULA_ASIG" ("DEPT_CENTRO_ID", "AULA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AULA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."AULA_PK" ON "C##DBAUNAH"."AULA" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CARRERA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."CARRERA_PK" ON "C##DBAUNAH"."CARRERA" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CAR_DISPONIBLE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."CAR_DISPONIBLE_PK" ON "C##DBAUNAH"."CAR_DISPONIBLE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CENTRO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."CENTRO_PK" ON "C##DBAUNAH"."CENTRO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CONFIG_PERIOD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."CONFIG_PERIOD_PK" ON "C##DBAUNAH"."CONFIG_PERIOD" ("PERIODO_PERIODO", "PERIODO_AÑO", "PERIODO_DURACION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CORREO_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."CORREO_UK" ON "C##DBAUNAH"."PERSONA" ("CORREOELECTRONICO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEPTO_CENTRO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."DEPTO_CENTRO_PK" ON "C##DBAUNAH"."DEPTO_CENTRO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEPTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."DEPTO_PK" ON "C##DBAUNAH"."DEPTO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DOCENTE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."DOCENTE_PK" ON "C##DBAUNAH"."DOCENTE" ("N_EMPLEADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DURACION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."DURACION_PK" ON "C##DBAUNAH"."DURACION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EDIFICIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."EDIFICIO_PK" ON "C##DBAUNAH"."EDIFICIO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ESTADO_MAT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."ESTADO_MAT_PK" ON "C##DBAUNAH"."ESTADO_MAT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ESTUDIANTE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."ESTUDIANTE_PK" ON "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ESTUDIANTE_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."ESTUDIANTE_UK" ON "C##DBAUNAH"."ESTUDIANTE" ("PERSONA_DNI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EXAMEN_ADMISION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."EXAMEN_ADMISION_PK" ON "C##DBAUNAH"."EXAMEN_ADMISION" ("ID_EXAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index FACULTAD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."FACULTAD_PK" ON "C##DBAUNAH"."FACULTAD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index FOTOS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."FOTOS_PK" ON "C##DBAUNAH"."FOTOS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index GRADO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."GRADO_PK" ON "C##DBAUNAH"."GRADO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MATRICULA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."MATRICULA_PK" ON "C##DBAUNAH"."MATRICULA" ("ESTUDIANTE_N_CUENTA", "SECCION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PENSUM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."PENSUM_PK" ON "C##DBAUNAH"."PENSUM" ("CARRERA_ID", "ASIGNATURA_COD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PERIODO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."PERIODO_PK" ON "C##DBAUNAH"."PERIODO" ("PERIODO", "AÑO", "DURACION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PERSONA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."PERSONA_PK" ON "C##DBAUNAH"."PERSONA" ("DNI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ROL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."ROL_PK" ON "C##DBAUNAH"."ROL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index R_PERIODO
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."R_PERIODO" ON "C##DBAUNAH"."S_REPO" ("PERIODO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SECCION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."SECCION_PK" ON "C##DBAUNAH"."SECCION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index S_CAMBIO_CAR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."S_CAMBIO_CAR_PK" ON "C##DBAUNAH"."S_CAMBIO_CAR" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index S_CAMBIO_CENTRO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."S_CAMBIO_CENTRO_PK" ON "C##DBAUNAH"."S_CAMBIO_CENTRO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index S_CANCEL_EXC_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."S_CANCEL_EXC_PK" ON "C##DBAUNAH"."S_CANCEL_EXC" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index S_REPO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."S_REPO_PK" ON "C##DBAUNAH"."S_REPO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIPO_EXAM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##DBAUNAH"."TIPO_EXAM_PK" ON "C##DBAUNAH"."TIPO_EXAM" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Procedure ADICIONAR_ASIGNATURA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."ADICIONAR_ASIGNATURA" (resultado OUT VARCHAR2,PN_CUENTA VARCHAR2 ,PSECCION VARCHAR2)
IS 
p_REQUISITO VARCHAR2(20);
CONTADOR NUMBER;
contador2 Number;
--Nuevos

 NHORAI INTERVAL DAY TO SECOND;
 NHORAF INTERVAL DAY TO SECOND;
 p_carrera_jefe  VARCHAR2(10);
 vlu number;
 vma number;
 vmi number;  
 vju number;
 vvi number;
 vsa number;
 vdo number; 
  nlu number;
 nma number;
 nmi number; 
 nju number;
 nvi number;
 nsa number;
 ndo number; 
 vnombreSECCION varchar2(50);
 VNHORAI INTERVAL DAY TO SECOND;
 VNHORAF INTERVAL DAY TO SECOND;
 CONTADOR3 VARCHAR(5);
 vduracion  varchar2(5);
 vaño varchar2(8); 
 vperiodo number; 
 vnomseccion varchar2(10);
 vcontador4 number;
 vunidades number;
 vdias number;
 bunidades number;
 fechaActual date;
 contador5 number;


BEGIN

select distinct id_requisito into p_REQUISITO from requisitos 
inner join seccion  on requisitos.id_asignatura = seccion.asignatura_cod
where seccion.id = PSECCION;


select count(*) INTO CONTADOR from matricula 
inner join seccion on matricula.seccion_id = seccion.id
inner join asignatura on seccion.asignatura_cod = asignatura.cod
inner join requisitos on asignatura.cod = requisitos.id_asignatura
where matricula.estudiante_n_cuenta = PN_CUENTA and requisitos.id_ASIGNATURA = p_REQUISITO and matricula.estado_mat_id = 4 and round(matricula.calificacion)>65;


select count(*) INTO CONTADOR2 from seccion
inner join matricula on matricula.seccion_id=seccion.id
where matricula.estudiante_n_cuenta=PN_CUENTA and seccion.id=PSECCION;

select HORAINCIO,HORAFINAL,lunes,martes,miercoles,jueves,viernes,sabado,domingo INTO NHORAI,NHORAF,nlu,nma,nmi,nju,nvi,nsa,ndo from seccion
where seccion.id=pseccion;

--UNAH4 SI HAY TRASLAPE

IF(CONTADOR2!=0) THEN
resultado:='UNAH2';
ELSIF (CONTADOR!=0) THEN
resultado:='UNAH1';
ELSIF p_REQUISITO='NULL' THEN
resultado:='UNAH1';
ELSE
 resultado:= 'UNAH3';
END IF;


DECLARE
 cursor seccion is select SECCION.HORAINCIO,SECCION.HORAFINAL,seccion.NOMBRE || '-' || asignatura.nombre as clase,
 seccion.lunes,seccion.martes,seccion.miercoles,seccion.jueves,seccion.viernes,seccion.sabado,seccion.domingo 
from seccion 
inner join matricula on seccion.id=matricula.seccion_id
inner join asignatura on asignatura.cod=seccion.asignatura_cod
where matricula.estudiante_n_cuenta=pn_cuenta and matricula.estado_mat_id='1';

BEGIN


open seccion;

loop
fetch seccion INTO 
 VNHORAI,
 VNHORAF ,
  vnombreSECCION,
  vlu,
   vma,
   vmi,
   vju,
   vvi,
   vsa,
   vdo
 ;
exit when seccion%notfound;

--'UNAH1' HORAS MAL SELECCIONADAS
--'UNAH2' TRASLAPE DOCENTE
--'UNAH3' TRASLAPE AULA
--'UNAH4' CREACION CORRECTA

   IF((nlu=vlu and nlu!=0) or (nma=vma and nma!=0) or (nmi=vmi and nmi!=0) or (nju=vju and nju!=0) or (nvi=vvi and nvi!=0) or (nsa=vsa and nsa!=0) or (ndo=vdo and ndo!=0)) then 
   IF ((NHORAI>=VNHORAI and NHORAI<VNHORAF) OR (NHORAF>VNHORAI and NHORAF<=VNHORAF) OR (VNHORAI>=NHORAI and VNHORAI<NHORAF) OR (VNHORAF>NHORAI and VNHORAF<=NHORAF)) then
        RESULTADO:='UNAH4';
        exit;
   end if;
   end if;   

end loop;

close seccion;



END;




IF(RESULTADO='UNAH4') THEN
   RESULTADO:='TRASLAPE CON: '||vnombreSECCION;
ELSIF (RESULTADO='UNAH2') THEN
    UPDATE matricula
set estado_mat_id='1'
where matricula.estudiante_n_cuenta=PN_CUENTA and matricula.seccion_id=PSECCION;
INSERT INTO "C##DBAUNAH"."EVALUACION" (ID_EVALUACION, FK_SECCION_ID, N_CUENTA, EVALUADA) VALUES (SQ_EVALUACIONES.NEXTVAL, PSECCION, PN_CUENTA, '0');
RESULTADO:='ASIGNATURA ADICIONADA CORRECTAMENTE';
commit;

ELSIF(RESULTADO='UNAH3') THEN
     RESULTADO:='LE HACE FALTA EL REQUISITO';
ELSIF(RESULTADO='UNAH1') THEN
 INSERT INTO "C##DBAUNAH"."MATRICULA" (ESTUDIANTE_N_CUENTA, SECCION_ID, ESTADO_MAT_ID) VALUES (PN_CUENTA, PSECCION, '1');
INSERT INTO "C##DBAUNAH"."EVALUACION" (ID_EVALUACION, FK_SECCION_ID, N_CUENTA, EVALUADA) VALUES (SQ_EVALUACIONES.NEXTVAL, PSECCION, PN_CUENTA, '0');
COMMIT;
RESULTADO:='ASIGNATURA ADICIONADA CORRECTAMENTE';
ELSE
    RESULTADO:=NULL;

END IF;



EXCEPTION
WHEN OTHERS THEN
   DBMS_OUTPUT.PUT_LINE(SQLERRM);
RESULTADO:='HUBO UN ERROR AL MATRICULAR LA SECCION';
END;

/
--------------------------------------------------------
--  DDL for Procedure AGRANDAR_CUPOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."AGRANDAR_CUPOS" (MENSAJE OUT VARCHAR2, p_CUPOS NUMBER, p_ID_SECCION VARCHAR2) IS
  nuevos_cupos_disponibles NUMBER;
  cupos_disponibles number;
BEGIN
  BEGIN
    -- Iniciar una transacción
    BEGIN
      
     SELECT cupos INTO cupos_disponibles FROM seccion WHERE id = p_ID_SECCION; 
        
      -- Incrementar los cupos en la tabla seccion
      UPDATE seccion SET cupos = p_CUPOS WHERE id = p_ID_SECCION;

      -- Calcular la cantidad de nuevos cupos disponibles
     nuevos_cupos_disponibles:= p_CUPOS - cupos_disponibles;
 
      COMMIT;
    EXCEPTION
      WHEN OTHERS THEN

        MENSAJE := null;
        DBMS_OUTPUT.PUT_LINE(MENSAJE);
        ROLLBACK;
        RETURN;
    END;
    

    -- Actualizar los estados de los estudiantes en lista de espera a matriculados
    BEGIN
      UPDATE matricula
      SET estado_mat_id = '1' 
      WHERE seccion_id = p_ID_SECCION
        AND estado_mat_id = '3' 
        AND ROWNUM <= nuevos_cupos_disponibles;

      COMMIT;
    EXCEPTION
      WHEN OTHERS THEN

        MENSAJE := null;
        DBMS_OUTPUT.PUT_LINE(MENSAJE);
        ROLLBACK;
        RETURN;
    END;

    MENSAJE := 'Cupos actualizados exitosamente';
  END;
END AGRANDAR_CUPOS;

/
--------------------------------------------------------
--  DDL for Procedure AGREGAR_FOTO_PERFIL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."AGREGAR_FOTO_PERFIL" (mensaje out varchar2, PCUENTA VARCHAR2,PFOTO VARCHAR2)
IS
CONTADOR NUMBER;
BEGIN

SELECT COUNT(*) INTO CONTADOR FROM FOTO_PERFIL
WHERE N_CUENTA=PCUENTA;

IF CONTADOR<3 then

INSERT INTO "C##DBAUNAH"."FOTO_PERFIL" (N_CUENTA, FOTO) VALUES (PCUENTA, PFOTO);
commit;
MENSAJE:='FOTO AGREGADA CON EXITO';
else
MENSAJE:='YA CUENTA CON 3 FOTOS DE PERFIL';
end if;

exception
when others then
mensaje:=null;

END;

/
--------------------------------------------------------
--  DDL for Procedure AGREGAR_VIDEO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."AGREGAR_VIDEO" (mensaje OUT VARCHAR2, VSeccion VARCHAR2, VVIDEO VARCHAR2)
IS
BEGIN
  UPDATE SECCION
  SET VIDEO = VVIDEO
  WHERE ID = VSeccion;

  mensaje := 'Video agregado correctamente.';
  COMMIT;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    mensaje := 'La sección especificada no fue encontrada.';
  WHEN OTHERS THEN
    mensaje := 'Ocurrió un error al agregar el video.';
END AGREGAR_VIDEO;

/
--------------------------------------------------------
--  DDL for Procedure ASIGNATURAS_CARRERA_JEFE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."ASIGNATURAS_CARRERA_JEFE" (c_ASIGNATURAS OUT SYS_REFCURSOR, p_N_EMPLEADO VARCHAR2)IS
p_carrera_jefe VARCHAR2(8 CHAR);
BEGIN 

  
   SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente
  WHERE n_empleado = p_N_EMPLEADO;

  OPEN c_ASIGNATURAS FOR SELECT COD,NOMBRE FROM ASIGNATURA WHERE DEPTO_ID = p_carrera_jefe AND  NOMBRE <> 'NULL';


    EXCEPTION
  WHEN OTHERS THEN 

    DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure CANCELAR_ASIGNATURA_ESTUDIANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."CANCELAR_ASIGNATURA_ESTUDIANTE" (resultado OUT VARCHAR2,PN_CUENTA VARCHAR2 ,PSECCION VARCHAR2)
IS 

BEGIN
  -- Obtener Duracion del periodo


UPDATE MATRICULA
  SET ESTADO_MAT_ID =  '2'
  WHERE ESTUDIANTE_N_CUENTA=PN_CUENTA AND SECCION_ID=PSECCION; -- Cambia esto por la condición que determine qué filas actualizar


delete from evaluacion where N_CUENTA = PN_CUENTA and FK_SECCION_ID = PSECCION;


  COMMIT; 
resultado:='ASIGNATURA CANCELADA EXITOSAMENTE';

END;

/
--------------------------------------------------------
--  DDL for Procedure CANCELAR_SECCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."CANCELAR_SECCION" (MENSAJE OUT VARCHAR2, p_ID_SECCION VARCHAR2, p_JUSTIFICACION VARCHAR2)IS
BEGIN 
    UPDATE SECCION SET ESTADO = 0, 
    JUSTIFICACION = p_JUSTIFICACION
    WHERE ID = p_ID_SECCION;
    
    DELETE FROM MATRICULA
    WHERE SECCION_ID = p_ID_SECCION;

    MENSAJE:= 'SE CANCELO LA SECCION';
 
 
    COMMIT;
 

EXCEPTION
  WHEN OTHERS THEN
    MENSAJE:= null;
    DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure CARGA_ACADEMICA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."CARGA_ACADEMICA" (c_CARGA OUT SYS_REFCURSOR, p_N_EMPLEADO VARCHAR2)IS 
 p_carrera_jefe  VARCHAR2(20);
BEGIN 

   SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente 
  WHERE n_empleado = p_N_EMPLEADO;
 
OPEN c_CARGA FOR SELECT DISTINCT SECCION.ID,seccion.nombre,ASIGNATURA.COD,ASIGNATURA.NOMBRE,DOCENTE.N_EMPLEADO,persona.primernombre|| ' ' || persona.primerapellido as Nombre_DOCENTE,SECCION.CUPOS,EDIFICIO.NOMBRE,AULA.NOMBRE,
SUBSTR(TO_CHAR(seccion.horaincio, 'HH:MI'), 5, 5) AS hora_inicio,SUBSTR(TO_CHAR(seccion.horafinal, 'HH:MI'), 5, 5) AS hora_final
FROM seccion
INNER JOIN asignatura ON seccion.asignatura_cod = asignatura.cod
INNER JOIN DOCENTE ON DOCENTE.N_EMPLEADO = seccion.DOCENTE_N_EMPLEADO
INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI=PERSONA.DNI
INNER JOIN AULA ON AULA.ID = seccion.AULA_ID
INNER JOIN EDIFICIO ON EDIFICIO.ID = EDIFICIO_ID  
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (SYSDATE BETWEEN FEC_INI_PLAN AND FEC_FINAL_PLAN) AND DOCENTE.DEPT_CENTRO_ID= p_carrera_jefe and seccion.ESTADO!=0
ORDER BY ASIGNATURA.COD ASC, hora_inicio ASC;

END;

/
--------------------------------------------------------
--  DDL for Procedure CARRERAS_CENTRO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."CARRERAS_CENTRO" (CARRERAS OUT SYS_REFCURSOR,rcentro_ID varchar2)IS
BEGIN

OPEN CARRERAS for select car_disponible.id, carrera.nom_carrera  FROM
    CENTRO
INNER JOIN
    CAR_DISPONIBLE ON CAR_DISPONIBLE.CENTRO_ID = CENTRO.ID
INNER JOIN
    CARRERA ON CAR_DISPONIBLE.CARRERA_ID = CARRERA.ID where centro.id=rcentro_id;


    EXCEPTION
     WHEN OTHERS THEN
    ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_ASPIRANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."CREAR_ASPIRANTE" (CONFIRMACION OUT VARCHAR2, DNI VARCHAR2,PRIMER_NOMBRE VARCHAR2,SEGUNDO_NOMBRE VARCHAR2, PRIMER_APELLIDO VARCHAR2,SEGUNDO_APELLIDO VARCHAR2, DIRECCION VARCHAR2,
CORREO_ELECTRONICO VARCHAR2,FOTOCERTIFICADO VARCHAR2,CENTRO_ID VARCHAR2,CAR_DISPONIBLE_ID VARCHAR2, CAR_DISPONIBLE_ID2 VARCHAR2,TELEFONO VARCHAR2) IS

BEGIN
DECLARE
cod_tipo1 varchar2(10);
cod_tipo2 varchar2(10);
BEGIN

 INSERT INTO PERSONA VALUES (DNI ,PRIMER_NOMBRE ,SEGUNDO_NOMBRE , PRIMER_APELLIDO ,SEGUNDO_APELLIDO , DIRECCION ,CORREO_ELECTRONICO ,TELEFONO);


 INSERT INTO ASPIRANTE VALUES (DNI, FOTOCERTIFICADO ,CENTRO_ID ,CAR_DISPONIBLE_ID,'1',0);

 INSERT INTO EXAMEN_ADMISION(id_exam,tipo_exam_id,aspirante_persona_dni) VALUES(sq_exam_admision.nextval, '1', DNI);

 SELECT c.ex_extra INTO cod_tipo1
  FROM car_disponible cd
  INNER JOIN carrera c ON c.id = cd.carrera_id
  WHERE cd.id = CAR_DISPONIBLE_ID;
  if cod_tipo1 is not null then
  INSERT INTO EXAMEN_ADMISION(id_exam,tipo_exam_id,aspirante_persona_dni,aspirante_car_disponible_id) VALUES(sq_exam_admision.nextval, cod_tipo1, DNI, CAR_DISPONIBLE_ID);
 end if;
 INSERT INTO ASPIRANTE VALUES (DNI, FOTOCERTIFICADO ,CENTRO_ID ,CAR_DISPONIBLE_ID2,'2',0);

  SELECT c.ex_extra INTO cod_tipo2
  FROM car_disponible cd
  INNER JOIN carrera c ON c.id = cd.carrera_id
  WHERE cd.id = CAR_DISPONIBLE_ID2;

  if cod_tipo1 is null and cod_tipo2 is not null then
  INSERT INTO EXAMEN_ADMISION(id_exam,tipo_exam_id,aspirante_persona_dni,aspirante_car_disponible_id) VALUES(sq_exam_admision.nextval, cod_tipo2, DNI, CAR_DISPONIBLE_ID);
  end if;
  if cod_tipo1<>cod_tipo2 and cod_tipo2 is not null then
   INSERT INTO EXAMEN_ADMISION(id_exam,tipo_exam_id,aspirante_persona_dni,aspirante_car_disponible_id) VALUES(sq_exam_admision.nextval, cod_tipo2, DNI, CAR_DISPONIBLE_ID);
  end if;

 COMMIT;

 CONFIRMACION := 'SE HA AGREGADO EL ASPIRANTE';

EXCEPTION
   WHEN DUP_VAL_ON_INDEX THEN
        -- Maneja la excepción de clave primaria duplicada
    CONFIRMACION:='YA EXISTE UNA PERSONA REGISTRADA CON ESE DNI Y/O CORREO ELECTRONICO';
  WHEN OTHERS THEN
    -- Manejo de excepciones
    CONFIRMACION:= null;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;
END;

END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_DOCENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."CREAR_DOCENTE" (CONFIRMACION OUT VARCHAR2, DNI VARCHAR2,PRIMER_NOMBRE VARCHAR2,SEGUNDO_NOMBRE VARCHAR2, PRIMER_APELLIDO VARCHAR2,SEGUNDO_APELLIDO VARCHAR2, DIRECCION VARCHAR2,
CORREO_ELECTRONICO VARCHAR2, CONTRASEÑA VARCHAR2, FOTOEMPLEADO VARCHAR2, PROL_ID VARCHAR2, PDEPT_DISPONIBLE_ID VARCHAR2,TELEFONO VARCHAR2 ) IS
ANIO number;
CONTADOR1 NUMBER;
CONTADOR2 NUMBER;
VVerificacion varchar2(10);
BEGIN

select count(*) into contador1 from Docente WHERE DEPT_CENTRO_ID=PDEPT_DISPONIBLE_ID and rol_id='2';
select count(*) into contador2 from Docente WHERE DEPT_CENTRO_ID=PDEPT_DISPONIBLE_ID and rol_id='3';

vverificacion:='UNAH0';
if((contador1!=0) AND PROL_ID='2') then
    vverificacion:='UNAH1'; 
elsif((contador2!=0) AND PROL_ID='3') then
    vverificacion:='UNAH2';
end if;


    
    if(vverificacion='UNAH0') then
        INSERT INTO PERSONA VALUES (DNI ,PRIMER_NOMBRE ,SEGUNDO_NOMBRE , PRIMER_APELLIDO ,SEGUNDO_APELLIDO , DIRECCION ,
        CORREO_ELECTRONICO,TELEFONO );        
        SELECT EXTRACT(YEAR FROM sysdate)+ 1 into ANIO FROM dual;        
        INSERT INTO DOCENTE VALUES (ANIO || SQ_DOCENTES.NEXTVAL,CONTRASEÑA,FOTOEMPLEADO,DNI,pROL_ID,PDEPT_DISPONIBLE_ID,PDEPT_DISPONIBLE_ID);        
        COMMIT;
        
        CONFIRMACION := 'SE HA AGREGADO EL DOCENTE';
        elsif (vverificacion='UNAH1') then
        CONFIRMACION:= 'YA EXISTE UN JEFE DE DEPARTAMENTO';
        elsif (vverificacion='UNAH2') then
        CONFIRMACION:= 'YA EXISTE UN COORDINADOR DE DEPARTAMENTO';
  end if;

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        -- Maneja la excepción de clave primaria duplicada
    CONFIRMACION:='YA EXISTE UNA PERSONA REGISTRADA CON ESE DNI Y/O CORREO ELECTRONICO';

  WHEN OTHERS THEN
  
  
    -- Manejo de excepciones
    CONFIRMACION:= null;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_SECCIONES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."CREAR_SECCIONES" (CONFIRMACION OUT VARCHAR2,p_N_EMPLEADO varchar2,PASIGNATURA VARCHAR2,PDOCENTE VARCHAR2,LU NUMBER, MA NUMBER, MI NUMBER, JU NUMBER, VI NUMBER,SA NUMBER,
DO NUMBER,PHORA_INI VARCHAR2, PHORA_FIN VARCHAR2, PAULA VARCHAR2, PCUPOS NUMBER,pDURACION VARCHAR2) 
IS 
 NHORAI INTERVAL DAY TO SECOND;
 NHORAF INTERVAL DAY TO SECOND;
 p_carrera_jefe  VARCHAR2(10);
 vlu number;
 vma number;
 vmi number; 
 vju number;
 vvi number;
 vsa number;
 vdo number; 
 vnombreDOCENTE varchar2(50);
  vnombreAULA varchar2(50);
 VNHORAI INTERVAL DAY TO SECOND;
 VNHORAF INTERVAL DAY TO SECOND;
 CONTADOR VARCHAR(5);
 vduracion  varchar2(5);
 vaño varchar2(8); 
 vperiodo number; 
 vnomseccion varchar2(10);
 vcontador2 number;
 vunidades number;
 vdias number;
 bunidades number;
 fechaActual date;
 contador3 number;
  

BEGIN



SELECT SYSDATE into  fechaActual FROM dual;

 


select PERIODO_PERIODO,PERIODO_AÑO INTO vperiodo,vaño 
from config_period 
where  (fechaActual BETWEEN FEC_INI_PLAN AND FEC_FINAL_PLAN) and PERIODO_DURACION_ID=PDURACION;

  
   SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente
  WHERE n_empleado = p_N_EMPLEADO;
 


NHORAI := TO_DSINTERVAL('0 ' || PHORA_INI || ':00:00');
NHORAF := TO_DSINTERVAL('0 ' || PHORA_FIN || ':00:00');


select count(*) into contador3 from seccion 
inner join docente on seccion.docente_n_empleado=docente.n_empleado INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI=PERSONA.DNI
where docente.DEPT_CENTRO_ID=p_carrera_jefe
and duracion_id=pduracion and año_id=vaño and periodo_id=vperiodo;

DBMS_OUTPUT.PUT_LINE(contador3);
IF contador3!=0 then

declare

 cursor docentes is select SECCION.HORAINCIO,SECCION.HORAFINAL,PERSONA.PRIMERNOMBRE || ' ' || PERSONA.PRIMERAPELLIDO,
 seccion.lunes,seccion.martes,seccion.miercoles,seccion.jueves,seccion.viernes,seccion.sabado,seccion.domingo from seccion 
inner join docente on seccion.docente_n_empleado=docente.n_empleado INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI=PERSONA.DNI
where docente.DEPT_CENTRO_ID=p_carrera_jefe and docente.n_empleado=pdocente 
and duracion_id=pduracion and año_id=vaño and periodo_id=vperiodo;

cursor aulas is select seccion.horaincio,seccion.horafinal,aula.nombre,
seccion.lunes,seccion.martes,seccion.miercoles,seccion.jueves,seccion.viernes,seccion.sabado,seccion.domingo
from seccion inner join aula on seccion.aula_id=aula.id
inner join aula_asig on aula.id=aula_asig.aula_id
where aula_asig.dept_centro_id=p_carrera_jefe AND AULA.ID=PAULA
and duracion_id=pduracion and año_id=vaño and periodo_id=vperiodo;

begin

open docentes;
CONFIRMACION:='UNAH4';

loop
fetch docentes INTO 
 VNHORAI,
 VNHORAF ,
  vnombreDOCENTE,
  vlu,
   vma,
   vmi,
   vju,
   vvi,
   vsa,
   vdo
 ;
exit when docentes%notfound;

--'UNAH1' HORAS MAL SELECCIONADAS
--'UNAH2' TRASLAPE DOCENTE
--'UNAH3' TRASLAPE AULA
--'UNAH4' CREACION CORRECTA


IF(NHORAI<NHORAF) THEN

   IF((lu=vlu and lu!=0) or (ma=vma and ma!=0) or (mi=vmi and mi!=0) or (ju=vju and ju!=0) or (vi=vvi and vi!=0) or (sa=vsa and sa!=0) or (do=vdo and do!=0)) then 
   IF ((NHORAI>=VNHORAI and NHORAI<VNHORAF) OR (NHORAF>VNHORAI and NHORAF<=VNHORAF) OR (VNHORAI>=NHORAI and VNHORAI<NHORAF) OR (VNHORAF>NHORAI and VNHORAF<=NHORAF)) then
        CONFIRMACION:='UNAH2';
        exit;
   end if;
   end if;   
ELSE
   CONFIRMACION:='UNAH1';   
END IF  ; 

end loop;

close docentes;



open aulas;

loop
fetch aulas INTO 
 VNHORAI,
 VNHORAF ,
  vnombreAULA,
  vlu,
   vma,
   vmi,
   vju,
   vvi,
   vsa,
   vdo
  
 ;
exit when aulas%notfound;

--'UNAH1'
--'UNAH2'
--'UNAH3'




IF(NHORAI<NHORAF) THEN

   IF((lu=vlu and lu!=0) or (ma=vma and ma!=0) or (mi=vmi and mi!=0) or (ju=vju and ju!=0) or (vi=vvi and vi!=0) or (sa=vsa and sa!=0) or (do=vdo and do!=0)) then 
   IF ((NHORAI>=VNHORAI and NHORAI<VNHORAF) OR (NHORAF>VNHORAI and NHORAF<=VNHORAF) OR (VNHORAI>=NHORAI and VNHORAI<NHORAF) OR (VNHORAF>NHORAI and VNHORAF<=NHORAF)) then
        CONFIRMACION:='UNAH3'; 
        exit;
   end if;
   end if;   
ELSE
   CONFIRMACION:='UNAH1';   
END IF  ; 

end loop;

close aulas;


select uv into vunidades from asignatura where cod = PASIGNATURA;
vdias := lu + ma +  mi +    ju  +   vi +   sa +   do;
bunidades:=vdias * (TO_NUMBER(SUBSTR(NHORAF, 5, 2)) - TO_NUMBER(SUBSTR(NHORAI, 5, 2)));
if( bunidades!= vunidades) then 
confirmacion :='UNAH0';
END IF;





IF(CONFIRMACION='UNAH1') THEN
    CONFIRMACION:='HORARIO INVALIDO';
ELSIF (CONFIRMACION='UNAH0') THEN
    CONFIRMACION:='NO CORRESPONDE EL HORARIO SELECCIONADO CON LAS UNIDADES VALORATIVAS DE LA ASIGNTURA';
ELSIF(CONFIRMACION='UNAH2') THEN
    CONFIRMACION:='EXISTE UN TRASLAPE DEL DOCENTE: ' || VNOMBREDOCENTE;
ELSIF(CONFIRMACION='UNAH3') THEN
    CONFIRMACION:='EXISTE UN TRASLAPE DE AULA: ' || VNOMBREAULA;
ELSIF(CONFIRMACION='UNAH4') THEN
     vnomseccion:=TO_CHAR(EXTRACT(HOUR FROM NHORAI));
    select count(*) into vcontador2 from seccion where seccion.nombre like vnomseccion||'%' and asignatura_cod=PASIGNATURA
    and duracion_id=pduracion and año_id=vaño and periodo_id=vperiodo;
    vnomseccion:=vnomseccion||TO_CHAR(vcontador2, 'FM00');
    
   
    INSERT INTO SECCION VALUES (SQ_SECCIONES.NEXTVAL,VNOMSECCION,NHORAI, NHORAF,PCUPOS,PASIGNATURA ,PAULA,PDOCENTE, 1, NULL ,LU , MA , MI , JU, VI ,SA,DO,pduracion,vaño,vperiodo,NULL);
    
    COMMIT;
    CONFIRMACION:='SECCION CREADA CORRECTAMENTE';
ELSE
    CONFIRMACION:=NULL;

END IF;

exception
    
 when others then

      CONFIRMACION:=NULL;

    ROLLBACK;

end;
else

vnomseccion:=TO_CHAR(EXTRACT(HOUR FROM NHORAI));  
 
    INSERT INTO SECCION VALUES (SQ_SECCIONES.NEXTVAL,VNOMSECCION,NHORAI, NHORAF,PCUPOS,PASIGNATURA ,PAULA,PDOCENTE, 1, NULL ,LU , MA , MI , JU, VI ,SA,DO,pduracion,vaño,vperiodo,NULL);
    
    COMMIT;
    CONFIRMACION:='SECCION CREADA CORRECTAMENTE';
    

end if;

    
END;

/
--------------------------------------------------------
--  DDL for Procedure DEPARTAMENTO_COORDINADOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."DEPARTAMENTO_COORDINADOR" (c_DEPARTAMENTO OUT SYS_REFCURSOR, p_N_EMPLEADO VARCHAR2)IS 
BEGIN 

    OPEN c_DEPARTAMENTO FOR SELECT DEPTO.NOMBRE FROM DEPTO 
    INNER JOIN DEPTO_CENTRO ON DEPTO.ID = depto_centro.depto_id
     INNER JOIN DOCENTE ON docente.dept_centro_iD = DEPTO_CENTRO.ID
    WHERE docente.n_empleado = p_N_EMPLEADO;

END;    

/
--------------------------------------------------------
--  DDL for Procedure DEPTOS_CENTRO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."DEPTOS_CENTRO" (DEPTOS OUT SYS_REFCURSOR,rcentro_ID varchar2)IS
BEGIN

OPEN DEPTOS for  select DEPTO.id, DEPTO.NOMBRE  FROM
    DEPTO
INNER JOIN
    DEPTO_CENTRO ON DEPTO_CENTRO.DEPTO_ID = DEPTO.ID
    WHERE depto_centro.centro_id = rcentro_ID;


    EXCEPTION
     WHEN OTHERS THEN
    ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure DESCRIPCION_ESTUDIANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."DESCRIPCION_ESTUDIANTE" (CONFIRMACION OUT VARCHAR2, p_N_CUENTA VARCHAR2, p_DESCRIPCION VARCHAR2)IS
BEGIN

UPDATE ESTUDIANTE
SET DESCRIPCION = p_DESCRIPCION
WHERE n_cuenta = p_N_CUENTA;
commit;
CONFIRMACION:='DESCRIPCION AGREGADA CORRECTAMENTE';


    EXCEPTION
  WHEN OTHERS THEN 
    CONFIRMACION:=NULL;
    DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure ENVIAR_CONTRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."ENVIAR_CONTRA" ( MENSAJE OUT VARCHAR2,p_N_CUENTA VARCHAR2,p_CONTRASEÑA	VARCHAR2)IS
contador1 number;
contador2 number;
BEGIN 

select count(*) into contador1 from estudiante where N_CUENTA=p_N_CUENTA;
select count(*) into contador2 from docente where N_EMPLEADO=p_N_CUENTA;

if contador1!=0 then

    UPDATE ESTUDIANTE SET contraseña = p_CONTRASEÑA WHERE n_cuenta = p_N_CUENTA;
    MENSAJE:= 'CONTRASEÑA RESTABLECIDA CORRECTAMENTE';

    COMMIT;
end if;

if contador2!=0 then

    UPDATE DOCENTE SET contraseña = p_CONTRASEÑA WHERE n_empleado = p_N_CUENTA;
    MENSAJE:= 'CONTRASEÑA RESTABLECIDA CORRECTAMENTE';

    COMMIT;
end if;

    EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones

    MENSAJE:= NULL;
    ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure ESTUDIANTES_SECCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."ESTUDIANTES_SECCION" (C_ESTUDIANTES OUT SYS_REFCURSOR, p_SECCION VARCHAR2)IS
fechaActual date;


BEGIN
 
select SYSDATE into fechaActual from dual;

OPEN C_ESTUDIANTES FOR SELECT ESTUDIANTE.N_CUENTA, (PERSONA.PRIMERNOMBRE ||' ' || PERSONA.SEGUNDONOMBRE||' ' ||PERSONA.PRIMERAPELLIDO||' ' ||PERSONA.SEGUNDOAPELLIDO) AS NOMBRE_COMPLETO, PERSONA.CORREOELECTRONICO, matricula.calificacion  FROM ESTUDIANTE 
INNER JOIN PERSONA ON estudiante.persona_dni = PERSONA.DNI 
INNER JOIN MATRICULA ON matricula.estudiante_n_cuenta =  estudiante.N_CUENTA
INNER JOIN SECCION ON MATRICULA.SECCION_ID=SECCION.ID
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (fechaActual BETWEEN FEC_NOTA_INI AND FEC_NOTA_FIN) and matricula.seccion_id = p_SECCION;

EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones

      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure EVALUACION_DOCENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."EVALUACION_DOCENTE" (
MENSAJE OUT VARCHAR2,

p_FK_SECCION_ID	VARCHAR2,
p_N_CUENTA	VARCHAR2,
p_OBSERVACIONES	VARCHAR2,
p_AREA_PERSONAL number,
p_AREA_PROFESIONAL number,
p_AREA_ACADEMICA number)IS 
BEGIN 

    update EVALUACION set 
    OBSERVACIONES=p_OBSERVACIONES,
    EVALUADA = 1,
    AREA_PERSONAL=p_AREA_PERSONAL,
    AREA_PROFESIONAL =  p_AREA_PROFESIONAL,
    AREA_ACADEMICA = p_AREA_ACADEMICA
    where FK_SECCION_ID = p_FK_SECCION_ID and N_CUENTA=p_N_CUENTA;

    COMMIT;
    MENSAJE:= 'DOCENTE EVALUADO CON EXITO';

    EXCEPTION

    WHEN OTHERS THEN 
    MENSAJE:= NULL;
    ROLLBACK;


END;

/
--------------------------------------------------------
--  DDL for Procedure HISTORIAL_ACADEMICO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."HISTORIAL_ACADEMICO" (c_HISTORIAL OUT SYS_REFCURSOR, v_CUENTA VARCHAR2)IS
BEGIN 

OPEN c_HISTORIAL FOR SELECT PERSONA.PRIMERNOMBRE ||' '||PERSONA.SEGUNDONOMBRE|| ' ' || PERSONA.PRIMERAPELLIDO || ' ' || PERSONA.SEGUNDOAPELLIDO AS NOMBRE_ALUMNO,ESTUDIANTE.N_CUENTA,ASIGNATURA.NOMBRE AS NOMBRE_ASIGNATURA, matricula.calificacion,
ASIGNATURA.COD,ASIGNATURA.UV,seccion.periodo_id,seccion.año_id
FROM MATRICULA 
INNER JOIN SECCION ON matricula.seccion_id = SECCION.ID
INNER JOIN ASIGNATURA ON seccion.asignatura_cod =  asignatura.cod
INNER JOIN ESTUDIANTE ON MATRICULA.ESTUDIANTE_N_CUENTA = ESTUDIANTE.N_CUENTA
INNER JOIN PERSONA ON ESTUDIANTE.PERSONA_DNI = PERSONA.DNI
WHERE estudiante.n_cuenta = v_CUENTA and matricula.estado_mat_id='4' and seccion.estado!=0;
 

END;

/
--------------------------------------------------------
--  DDL for Procedure INGRESAR_ESTUDIANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."INGRESAR_ESTUDIANTE" (MENSAJE OUT VARCHAR2,p_PERSONA_DNI	VARCHAR2,
p_prioridad	varchar2, p_CONTRASEÑA VARCHAR2)IS
p_CAR_DISPONIBLE_ID varchar2(10);
p_correo varchar2(60);
p_cuenta varchar2(20);
BEGIN   
     
     
     select car_disponible_id,persona.correoelectronico INTO P_CAR_DISPONIBLE_ID,p_Correo from aspirante inner join persona on persona.dni=aspirante.persona_dni where prioridad=p_prioridad and persona_dni=p_PERSONA_DNI;
  

p_cuenta:=TO_CHAR(ADD_MONTHS(SYSDATE, 12), 'YYYY')||ESTUDIANTES.NEXTVAl;

    INSERT INTO ESTUDIANTE (N_CUENTA,PERSONA_DNI,CAR_DISPONIBLE_ID, CONTRASEÑA ) 
    VALUES(p_cuenta, p_PERSONA_DNI	,p_CAR_DISPONIBLE_ID, p_CONTRASEÑA);
    
    
UPDATE aspirante
SET evaluado=1
WHERE evaluado=0;

    MENSAJE:= p_CUENTA || ' ' || p_correo;
    COMMIT;

    EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        -- Maneja la excepción de clave primaria duplicada
    MENSAJE:='UNAH1';
     WHEN OTHERS THEN
         MENSAJE := null;
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
        ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure INGRESAR_NOTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."INGRESAR_NOTA" (MENSAJE OUT VARCHAR2, p_NOTA NUMBER, p_N_CUENTA  VARCHAR2, p_SECCION VARCHAR2)IS

BEGIN
    IF ((P_NOTA>=0) AND (P_NOTA<=100)) THEN
    UPDATE  MATRICULA  SET CALIFICACION  = p_NOTA WHERE ESTUDIANTE_N_CUENTA =  p_N_CUENTA AND SECCION_ID = p_SECCION;

    COMMIT;
    MENSAJE:= 'NOTA INGRESADA CORRECTAMENTE';
    END IF;
    EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones
    MENSAJE:= NULL;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure INGRESAR_NOTA_ASPIRANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."INGRESAR_NOTA_ASPIRANTE" (Rconfirm out varchar2,RDNI VARCHAR2,RPUNTUACION NUMBER,TIPO number)
is 
vpuntuacion number;
pcorreo varchar2(100);
begin



select count(*) into vpuntuacion from examen_admision where aspirante_persona_dni=Rdni and tipo_exam_id=tipo and puntuacion is null;
select  correoelectronico into pcorreo from persona where dni=rdni;


if (vpuntuacion=1 and rpuntuacion is not null) then
UPDATE examen_admision
SET puntuacion=rpuntuacion
WHERE aspirante_persona_dni=rdni and tipo_exam_id=tipo;
rconfirm:=rdni || ' ' || pcorreo;
commit;
else
rconfirm:='UNAH22';
end if;


EXCEPTION
   WHEN NO_DATA_FOUND THEN
   rconfirm:='UNAH22';
  WHEN OTHERS THEN
    -- Manejo de excepciones
    rconfirm:= sqlerrm;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

end;

/
--------------------------------------------------------
--  DDL for Procedure INGRESAR_PERIODO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."INGRESAR_PERIODO" (
 MENSAJE OUT VARCHAR2,
    p_FEC_NOTA_INI VARCHAR2,
    p_FEC_NOTA_FIN VARCHAR2,
    p_PERIODO_PERIODO NUMBER,
    p_PERIODO_AÑO VARCHAR2,
    p_PERIODO_DURACION_ID VARCHAR2,
    p_FEC_INI_PLAN	VARCHAR2,
    p_FEC_FINAL_PLAN	VARCHAR2,
    p_FEC_CAN_EXP_INI	VARCHAR2,
    p_FEC_CAN_EXP_FIN	VARCHAR2,
    p_FEC_PERIODO_INI	VARCHAR2,
    p_FEC_PERIODO_FIN	VARCHAR2
) AS
BEGIN


    INSERT INTO PERIODO (PERIODO, AÑO, ACTIVO, DURACION_ID)
    VALUES (p_PERIODO_PERIODO, p_PERIODO_AÑO, '1', p_PERIODO_DURACION_ID);

    INSERT INTO CONFIG_PERIOD (FEC_INI_PLAN, FEC_FINAL_PLAN, FEC_NOTA_INI, FEC_NOTA_FIN, PERIODO_PERIODO, PERIODO_AÑO, PERIODO_DURACION_ID,
                               FEC_CAN_EXP_INI, FEC_CAN_EXP_FIN, FEC_PERIODO_INI, FEC_PERIODO_FIN)
    VALUES (TO_DATE(p_FEC_INI_PLAN, 'MM/DD/YYYY'), TO_DATE(p_FEC_FINAL_PLAN, 'MM/DD/YYYY'), TO_DATE(p_FEC_NOTA_INI, 'MM/DD/YYYY'), TO_DATE(p_FEC_NOTA_FIN, 'MM/DD/YYYY'),
            p_PERIODO_PERIODO, p_PERIODO_AÑO, p_PERIODO_DURACION_ID,
            TO_DATE(p_FEC_CAN_EXP_INI, 'MM/DD/YYYY'), TO_DATE(p_FEC_CAN_EXP_FIN, 'MM/DD/YYYY'), TO_DATE(p_FEC_PERIODO_INI, 'MM/DD/YYYY'), TO_DATE(p_FEC_PERIODO_FIN, 'MM/DD/YYYY'));
    MENSAJE := 'Periodo ingresado correctamente';


    COMMIT;
EXCEPTION
   WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(p_FEC_INI_PLAN);
     DBMS_OUTPUT.PUT_LINE(p_FEC_PERIODO_FIN);
         MENSAJE := sqlerrm;

        ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure INICIO_JEFEDEPARTAMENTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."INICIO_JEFEDEPARTAMENTO" (RResultado out sys_refcursor, N_CUENTA VARCHAR2)
is
begin
    OPEN RRESULTADO FOR select primernombre || ' ' || PRIMERAPELLIDO as nombre ,facultad.nom_facultad as facultad , centro.nombre as centro,DEPTO.nombre as carrera from docente 
inner join DEPTO_CENTRO ON DEPT_CENTRO_id = DEPTO_CENTRO.id 
inner join DEPTO on DEPTO.id = DEPTO_id
    inner join persona on persona.dni=persona_dni
    inner join centro on centro_id=centro.id
    inner join carreras_depto on carreras_depto.depto_id = depto_centro.depto_id
    inner join carrera on carrera.id =  carreras_depto.carrera_id
    inner join facultad on facultad.id = carrera.facultad_id
     where docente.n_empleado=N_CUENTA;
     
     --inner join facultad on facultad.id=facultad_id
     -- Falta agregarlo
end;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_EN_CONF_MATRICULA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."INSERTAR_EN_CONF_MATRICULA" (
    MENSAJE out VARCHAR2,
    p_INDICE_INICIO NUMBER,
    p_INDICE_FINAL NUMBER,
    p_FECHA_INICIO VARCHAR2,
    p_FECHA_FINAL VARCHAR2,
    p_NOMBRE VARCHAR2,
    p_PERIODO_PERIODO NUMBER,
    p_PERIODO_AÑO VARCHAR2,
    p_PERIODO_DURACION_ID VARCHAR2
) AS
BEGIN

    INSERT INTO CONF_MATRICULA (INDICE_INICIO, INDICE_FINAL, FECHA_INICIO, FECHA_FINAL, NOMBRE, PERIODO_PERIODO, PERIODO_AÑO, PERIODO_DURACION_ID)
    VALUES (p_INDICE_INICIO, p_INDICE_FINAL, TO_TIMESTAMP(p_FECHA_INICIO, 'MM/DD/YYYY HH24:MI:SS'), TO_TIMESTAMP(p_FECHA_FINAL, 'MM/DD/YYYY HH24:MI:SS'), p_NOMBRE, p_PERIODO_PERIODO, p_PERIODO_AÑO, p_PERIODO_DURACION_ID);
    MENSAJE:='INGRESADO CORRECTAMENTE';
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        MENSAJE:=NULL;
        DBMS_OUTPUT.PUT_LINE('Error al insertar en CONF_MATRICULA: ' || SQLERRM);
        ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure LOGIN_SP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."LOGIN_SP" (RROL OUT VARCHAR2, RUSUARIO VARCHAR2) IS

BEGIN  
    DECLARE
    CONTADOR1 NUMBER;
    CONTADOR2 NUMBER; 
    Contra varchar2(200);
    VROL VARCHAR2(30);
    begin

   SELECT COUNT(*) INTO CONTADOR1
   FROM ADMIN
   WHERE Usuario = RUSUARIO;

   SELECT COUNT(*) INTO CONTADOR2
   FROM ESTUDIANTE
   WHERE n_cuenta = RUSUARIO;
 
    IF CONTADOR1 = 1 THEN
        SELECT contraseña INTO Contra
        FROM ADMIN
        WHERe Usuario = RUSUARIO;
        RROL := 'administrador ' || Contra;

    ELSIF CONTADOR2 = 1 THEN
        SELECT contraseña INTO Contra
        FROM ESTUDIANTE
        WHERE n_cuenta = RUSUARIO;
        RROL := 'estudiante '||contra;  

    ELSE

        SELECT r.rol, d.CONTRASEÑA  INTO VROL, Contra
        FROM docente d
        INNER JOIN rol r ON d.rol_id = r.id
        WHERE d.N_Empleado = RUSUARIO;
        RROL:= VROL || ' ' || Contra;

    END IF;

    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RROL := null; -- Puedes asignar un valor por defecto o manejar la excepción de alguna otra manera
    WHEN OTHERS THEN
        -- Aquí puedes manejar otras excepciones si es necesario
        RROL := null;
    end;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENERAULAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENERAULAS" (RRESULTADO out SYS_REFCURSOR, RN_empleado varchar2,Redificio_ID VARCHAR2)
IS
RCarrera varchar(10);
BEGIN
select  DEPT_CENTRO_ID  into Rcarrera from docente where n_empleado=RN_empleado ;
open rresultado for select AULA.ID,AULA.NOMBRE from edificio inner join aula on aula.edificio_id=edificio.id inner join aula_asig on aula_asig.aula_id=aula.id
where  DEPT_CENTRO_ID=Rcarrera
and edificio.id=Redificio_ID;


 

END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENERCORREO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENERCORREO" (RESULTADO out SYS_REFCURSOR,RDNI VARCHAR2)
IS
CONTADOR1 NUMBER;
CONTADOR2 NUMBER;
BEGIN

SELECT COUNT(*) INTO CONTADOR1 FROM PERSONA
INNER JOIN DOCENTE ON PERSONA.DNI=PERSONA_DNI
where persona.dni=rdni;


SELECT COUNT(*) INTO CONTADOR2 FROM PERSONA
INNER JOIN ESTUDIANTE ON PERSONA.DNI=PERSONA_DNI
where persona.dni=rdni;

IF(CONTADOR1!=0) then
OPEN  RESULTADO FOR SELECT N_EMPLEADO, PERSONA.PRIMERNOMBRE ||' ' ||PERSONA.PRIMERAPELLIDO AS NOMBRE, CORREOELECTRONICO FROM PERSONA
INNER JOIN DOCENTE ON PERSONA.DNI=PERSONA_DNI
where persona.dni=rdni;


end if;

IF(CONTADOR2!=0) then
OPEN RESULTADO FOR SELECT N_CUENTA, PERSONA.PRIMERNOMBRE ||' ' ||PERSONA.PRIMERAPELLIDO AS NOMBRE, CORREOELECTRONICO FROM PERSONA
INNER JOIN ESTUDIANTE ON PERSONA.DNI=PERSONA_DNI
where persona.dni=rdni;
end if;

END;



/
--------------------------------------------------------
--  DDL for Procedure OBTENEREDIFICIOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENEREDIFICIOS" (RRESULTADO out SYS_REFCURSOR, RN_empleado varchar2)
is 
RCarrera varchar(10);
begin

select dept_centro_id into Rcarrera from docente where n_empleado=RN_empleado;

open rresultado for select distinct edificio.id,edificio.nombre from edificio inner join aula on aula.edificio_id=edificio.id inner join aula_asig on aula_asig.aula_id=aula.id where dept_centro_id=RCarrera;

end;

/
--------------------------------------------------------
--  DDL for Procedure OBTENERESTADISTICAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENERESTADISTICAS" (resultado out  sys_refcursor,NJEFE VARCHAR2)

is
V1 NUMBER;
V2 NUMBER;
V3 NUMBER;
V4 VARCHAR2(200);
V5 VARCHAR2(20);
fechaActual date;
p_carrera_jefe varchar2(10);
begin
 
select SYSDATE INTO fechaActual FROM DUAL;

 SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente
  WHERE n_empleado = NJEFE;

open resultado for select docente.n_empleado AS CUENTA, PERSONA.PRIMERNOMBRE ||' '||PERSONA.PRIMERAPELLIDO AS NOMBRE ,AVG(AREA_PERSONAL)*20,AVG(AREA_PROFESIONAL)*20,AVG(AREA_ACADEMICA)*20
from evaluacion 
INNER JOIN SECCION ON FK_SECCION_ID=SECCION.ID
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
INNER JOIN DOCENTE ON SECCION.DOCENTE_N_EMPLEADO=DOCENTE.N_EMPLEADO  
INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI=PERSONA.DNI
INNER JOIN DEPTO_CENTRO ON DEPTO_CENTRO.ID=DOCENTE.DEPT_CENTRO_ID
WHERE (fechaActual BETWEEN FEC_NOTA_INI AND FEC_NOTA_FIN) AND DEPT_CENTRO_ID=p_carrera_jefe 
GROUP BY docente.n_empleado,PERSONA.PRIMERNOMBRE,PERSONA.PRIMERAPELLIDO ORDER BY CUENTA,NOMBRE ; 
end;

/
--------------------------------------------------------
--  DDL for Procedure OBTENERESTADISTICAS2
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENERESTADISTICAS2" (resultado out  sys_refcursor,NJEFE VARCHAR2)

is
V1 NUMBER;
V2 NUMBER;
V3 NUMBER;
V4 VARCHAR2(200);
V5 VARCHAR2(20);
fechaActual date;
p_carrera_jefe varchar2(10);
begin

select SYSDATE INTO fechaActual FROM DUAL;

 SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente
  WHERE n_empleado = NJEFE;

open resultado for select docente.n_empleado AS CUENTA, PERSONA.PRIMERNOMBRE ||' '||PERSONA.PRIMERAPELLIDO AS NOMBRE ,COUNT(*), PERIODO.PERIODO, PERIODO.AñO
from MATRICULA
INNER JOIN SECCION ON MATRICULA.SECCION_ID=SECCION.ID
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
INNER JOIN DOCENTE ON SECCION.DOCENTE_N_EMPLEADO=DOCENTE.N_EMPLEADO  
INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI=PERSONA.DNI
INNER JOIN DEPTO_CENTRO ON DEPTO_CENTRO.ID=DOCENTE.DEPT_CENTRO_ID
WHERE DEPT_CENTRO_ID=p_carrera_jefe AND matricula.estado_mat_id = '4'
GROUP BY docente.n_empleado,PERSONA.PRIMERNOMBRE,PERSONA.PRIMERAPELLIDO,PERIODO.PERIODO,
                       PERIODO.DURACION_ID,
                       PERIODO.AÑO  ORDER BY CUENTA,NOMBRE  ; 
end;

/
--------------------------------------------------------
--  DDL for Procedure OBTENEREVALUACIONDOCENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENEREVALUACIONDOCENTE" (resultado out  sys_refcursor,pseccionID varchar2)

is
V1 NUMBER;
V2 NUMBER;
V3 NUMBER;
V4 VARCHAR2(200);
fechaActual date;
begin

select SYSDATE INTO fechaActual FROM DUAL;
 
OPEN RESULTADO FOR select AREA_PERSONAL,AREA_PROFESIONAL,AREA_ACADEMICA, OBSERVACIONES INTO V1,V2,V3,V4 from evaluacion 
INNER JOIN SECCION ON FK_SECCION_ID=SECCION.ID
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (fechaActual BETWEEN FEC_NOTA_INI AND FEC_NOTA_FIN) AND FK_SECCION_ID=pseccionID; 

end;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_ASIGNATURAS_A_MATRICULAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_ASIGNATURAS_A_MATRICULAR" (RESULTADO OUT SYS_REFCURSOR, pN_CUENTA VARCHAR2, pN_DEPTO VARCHAR2)
IS
  vDURACION VARCHAR2(10);
  vCARRERA VARCHAR2(10);
  vPERIODO VARCHAR2(50);
  vAÑO VARCHAR2(10);

BEGIN

  OPEN RESULTADO FOR
  SELECT DISTINCT s.nombre, s.cod
    FROM ASIGNATURA S 
    INNER JOIN DEPTO ON depto.id = s.depto_id
    WHERE depto.id = pN_DEPTO and s.nombre != 'NULL';

END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CAMBIO_CAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CAMBIO_CAR" (c_SOLICITUDES OUT SYS_REFCURSOR, p_N_EMPLEADO VARCHAR2)IS

 p_carrera_jefe  VARCHAR2(10);
BEGIN 

   SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente 
  WHERE n_empleado = p_N_EMPLEADO;

OPEN c_SOLICITUDES FOR SELECT s_cambio_car.ID,PERSONA.PRIMERNOMBRE || ' ' || PERSONA.PRIMERAPELLIDO AS NOMBRE,s_cambio_car.ESTUDIANTE_N_CUENTA,CARRERA.NOM_CARRERA AS NUEVA_CARRERA, s_cambio_car.fecha_solicitud,s_cambio_car.estado,s_cambio_car.justificacion   
FROM s_cambio_car 
INNER JOIN CAR_DISPONIBLE ON s_cambio_car.car_disponible_id = CAR_DISPONIBLE.ID
INNER JOIN CARRERA ON CARRERA.ID = car_disponible.carrera_iD 
INNER JOIN ESTUDIANTE ON ESTUDIANTE.N_CUENTA = s_cambio_car.ESTUDIANTE_N_CUENTA
INNER JOIN PERSONA ON PERSONA.DNI  = ESTUDIANTE.PERSONA_DNI
INNER JOIN CARRERAS_DEPTO ON s_cambio_car.CAR_DISPONIBLE_ID = CARRERAS_DEPTO.CARRERA_ID
WHERE carreras_depto.depto_id = p_carrera_jefe;


END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CAMBIO_CENTRO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CAMBIO_CENTRO" (c_SOLICITUDES OUT SYS_REFCURSOR, p_N_EMPLEADO VARCHAR2)IS

 p_carrera_jefe  VARCHAR2(10);
BEGIN 

   SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente 
  WHERE n_empleado = p_N_EMPLEADO;

OPEN c_SOLICITUDES FOR select distinct s_cambio_centro.id, persona.primernombre || ' ' || persona.primerapellido as Nombre, s_cambio_centro.estudiante_n_cuenta, centro.nombre AS NUEVO_CENTRO, s_cambio_centro.fecha_solicitud,
JUSTIFICACION,ESTADO
from s_cambio_centro
inner join estudiante on estudiante.n_cuenta= s_cambio_centro.estudiante_n_cuenta
inner join persona on persona.dni = estudiante.persona_dni
inner join centro on s_cambio_centro.centro_id= centro.id
INNER JOIN DEPTO_CENTRO ON DEPTO_CENTRO.CENTRO_ID=CENTRO.ID
WHERE depto_CENTRO.depto_id = p_carrera_jefe;

END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CANCELACION_EXC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CANCELACION_EXC" (c_SOLICITUDES OUT SYS_REFCURSOR, p_N_EMPLEADO VARCHAR2)IS
p_carrera_jefe  VARCHAR2(10);
BEGIN

   SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente 
  WHERE n_empleado = p_N_EMPLEADO;

OPEN c_SOLICITUDES FOR SELECT S_CANCEL_EXC.id, persona.primernombre || ' ' || persona.primerapellido as Nombre, S_CANCEL_EXC.estudiante_n_cuenta, S_CANCEL_EXC.fecha_solicitud,SECCION.NOMBRE,ASIGNATURA.NOMBRE,S_CANCEL_EXC.JUSTIFICACION,S_CANCEL_EXC.ESTADO,s_cancel_exc.documento 
FROM S_CANCEL_EXC
INNER JOIN ESTUDIANTE ON s_cancel_exc.estudiante_n_cuenta = ESTUDIANTE.N_CUENTA
INNER JOIN PERSONA ON estudiante.persona_dni = PERSONA.DNI
INNER JOIN CAR_DISPONIBLE ON estudiante.car_disponible_id = CAR_DISPONIBLE.ID
INNER JOIN CARRERA ON car_disponible.carrera_id = carrera.id
INNER JOIN CARRERAS_DEPTO ON carrera.id = carreras_depto.carrera_id
INNER JOIN DEPTO ON carreras_depto.depto_id = depto.id
INNER JOIN CANCELACIONES_SECCION_EXC ON cancelaciones_seccion_exc.id_s_can_exc = s_cancel_exc.id
INNER JOIN SECCION ON cancelaciones_seccion_exc.id_seccion = SECCION.ID
INNER JOIN ASIGNATURA ON SECCION.ASIGNATURA_COD = ASIGNATURA.COD
where depto.id = p_carrera_jefe;


END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CENTROS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CENTROS" (Resultado Out SYS_REFCURSOR)
iS
BEGIN
  OPEN resultado FOR 
SELECT ID, ACRONIMO || ', '|| NOMBRE AS CENTROS FROM CENTRO;



EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones
    
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CLASES_A_MATRICULAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CLASES_A_MATRICULAR" (RESULTADO OUT SYS_REFCURSOR, pN_CUENTA VARCHAR2)
IS
  vDURACION VARCHAR2(10);
  vCARRERA VARCHAR2(10);
    vCentro VARCHAR2(10);
  vPERIODO VARCHAR2(50);
  vAÑO VARCHAR2(10);
 
BEGIN
  -- Obtener Duracion del periodo
  SELECT DURACION_ID, CARRERA.ID,car_disponible.centro_id INTO vDURACION, vCARRERA,vcentro FROM car_disponible
  INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID = CARRERA.ID
  INNER JOIN ESTUDIANTE ON ESTUDIANTE.CAR_DISPONIBLE_ID = CAR_DISPONIBLE.ID
  WHERE ESTUDIANTE.N_CUENTA = pN_CUENTA;

  -- Obtener periodo
  SELECT PERIODO.PERIODO, PERIODO.AÑO INTO vPERIODO, vAÑO FROM periodo 
  INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                         AND PERIODO.AÑO = PERIODO_AÑO
                         AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
  WHERE (SYSDATE BETWEEN FEC_PERIODO_INI AND FEC_PERIODO_FIN) AND PERIODO.DURACION_ID = vDURACION;

  OPEN RESULTADO FOR
    SELECT seccion.id, seccion.nombre, s.nombre, r.nombre, s.cod, r.cod,
           SUBSTR(TO_CHAR(seccion.horaincio, 'HH:MI'), 5, 5) AS hora_inicio, SUBSTR(TO_CHAR(seccion.horafinal, 'HH:MI'), 5, 5) AS hora_final,
           persona.primernombre || ' ' || persona.primerapellido as docente,
           lunes, martes, miercoles, jueves, viernes, sabado, domingo
    FROM seccion
    LEFT JOIN MATRICULA ON SECCION.ID = MATRICULA.SECCION_ID
    INNER JOIN ASIGNATURA S ON SECCION.ASIGNATURA_COD = S.COD
    INNER JOIN REQUISITOS ON REQUISITOS.ID_ASIGNATURA = S.COD
    INNER JOIN ASIGNATURA R ON R.COD = ID_REQUISITO
    LEFT JOIN PENSUM P ON S.COD = P.ASIGNATURA_COD
    LEFT JOIN CARRERA ON CARRERA.ID = P.CARRERA_ID
    INNER JOIN DOCENTE ON seccion.Docente_n_empleado = docente.n_empleado
    INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI = PERSONA.DNI
    INNER JOIN DEPTO_CENTRO ON DOCENTE.DEPT_CENTRO_ID = DEPTO_CENTRO.ID
    WHERE SECCION.periodo_id = vPERIODO AND SECCION.año_id = vAÑO AND SECCION.duracion_id = vDURACION AND seccion.estado != 0 AND CARRERA.ID = VCARRERA
    AND  DEPTO_CENTRO.CENTRO_ID=VCENTRO;

END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CLASES_A_MATRICULAR2
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CLASES_A_MATRICULAR2" (RESULTADO OUT SYS_REFCURSOR, pN_CUENTA VARCHAR2, p_COD_ASIGNATURA VARCHAR2)
IS
  vDURACION VARCHAR2(10);
  vCARRERA VARCHAR2(10);
  vPERIODO VARCHAR2(50);
  VCENTRO VARCHAR2(20);
  vAÑO VARCHAR2(10);

BEGIN
  -- Obtener Duracion del periodo
  SELECT DURACION_ID, CARRERA.ID,car_disponible.centro_id INTO vDURACION, vCARRERA,vcentro FROM car_disponible
  INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID = CARRERA.ID
  INNER JOIN ESTUDIANTE ON ESTUDIANTE.CAR_DISPONIBLE_ID = CAR_DISPONIBLE.ID
  WHERE ESTUDIANTE.N_CUENTA = pN_CUENTA;

  -- Obtener periodo
  SELECT PERIODO.PERIODO, PERIODO.AÑO INTO vPERIODO, vAÑO FROM periodo 
  INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                         AND PERIODO.AÑO = PERIODO_AÑO
                         AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
  WHERE (SYSDATE BETWEEN FEC_PERIODO_INI AND FEC_PERIODO_FIN) AND PERIODO.DURACION_ID = vDURACION;

  OPEN RESULTADO FOR
    SELECT distinct seccion.id, seccion.nombre, s.nombre, r.nombre, s.cod, r.cod,
           SUBSTR(TO_CHAR(seccion.horaincio, 'HH:MI'), 5, 5) AS hora_inicio, SUBSTR(TO_CHAR(seccion.horafinal, 'HH:MI'), 5, 5) AS hora_final,
           persona.primernombre || ' ' || persona.primerapellido as docente,
           lunes, martes, miercoles, jueves, viernes, sabado, domingo
    FROM seccion
    LEFT JOIN MATRICULA ON SECCION.ID = MATRICULA.SECCION_ID
    INNER JOIN ASIGNATURA S ON SECCION.ASIGNATURA_COD = S.COD
    INNER JOIN REQUISITOS ON REQUISITOS.ID_ASIGNATURA = S.COD
    INNER JOIN ASIGNATURA R ON R.COD = ID_REQUISITO
    LEFT JOIN PENSUM P ON S.COD = P.ASIGNATURA_COD
    LEFT JOIN CARRERA ON CARRERA.ID = P.CARRERA_ID
    INNER JOIN DOCENTE ON seccion.Docente_n_empleado = docente.n_empleado
    INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI = PERSONA.DNI
     INNER JOIN DEPTO_CENTRO ON DOCENTE.DEPT_CENTRO_ID = DEPTO_CENTRO.ID
    WHERE SECCION.periodo_id = vPERIODO AND SECCION.año_id = vAÑO AND SECCION.duracion_id = vDURACION AND seccion.estado != 0 AND CARRERA.ID = VCARRERA AND s.cod = p_COD_ASIGNATURA
    AND  DEPTO_CENTRO.CENTRO_ID=VCENTRO;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CLASES_CURSADAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CLASES_CURSADAS" (RESULTADO OUT SYS_REFCURSOR, pN_CUENTA VARCHAR2)
IS
  vCARRERA VARCHAR2(10);
  
BEGIN
  -- Obtener Duracion del periodo
  SELECT  CARRERA.ID INTO vCARRERA FROM car_disponible
  INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID = CARRERA.ID
  INNER JOIN ESTUDIANTE ON ESTUDIANTE.CAR_DISPONIBLE_ID = CAR_DISPONIBLE.ID
  WHERE ESTUDIANTE.N_CUENTA = pN_CUENTA;

OPEN RESULTADO FOR
SELECT distinct S.COD
    FROM seccion
    LEFT JOIN MATRICULA ON SECCION.ID = MATRICULA.SECCION_ID
    INNER JOIN ASIGNATURA S ON SECCION.ASIGNATURA_COD = S.COD
    INNER JOIN REQUISITOS ON REQUISITOS.ID_ASIGNATURA = S.COD
    INNER JOIN ASIGNATURA R ON R.COD = ID_REQUISITO
    INNER JOIN PENSUM P ON S.COD = P.ASIGNATURA_COD
    LEFT JOIN CARRERA ON CARRERA.ID = P.CARRERA_ID
    INNER JOIN DOCENTE ON seccion.Docente_n_empleado = docente.n_empleado
    INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI = PERSONA.DNI
    WHERE CARRERA.ID = vCARRERA AND matricula.estado_mat_id='4' and matricula.ESTUDIANTE_N_Cuenta=pN_CUENTA and matricula.calificacion >= 65;


END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CLASES_MATRICULADAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CLASES_MATRICULADAS" (RESULTADO OUT SYS_REFCURSOR, pN_CUENTA VARCHAR2)
IS
 
vDURACION VARCHAR2(10);
vN_CUENTA VARChAR2(20);
vPERSONA VARCHAR2(200);
vPERIODO VARCHAR2(50);
vAÑO VARCHAR2(10);


BEGIN
--Obtener Duracion del periodo

select DURACION_ID into vDURACION from car_disponible
INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID=CARRERA.ID
INNER JOIN ESTUDIANTE ON ESTUDIANTE.CAR_DISPONIBLE_ID=CAR_DISPONIBLE.ID
WHERE ESTUDIANTE.N_CUENTA=pN_CUENTA;

--Obtener periodo
select PERIODO.PERIODO, PERIODO.AÑO INTO vPERIODO, vAÑO from periodo 
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID 
WHERE (SYSDATE BETWEEN FEC_PERIODO_INI AND FEC_PERIODO_FIN) AND PERIODO.DURACION_ID=vDURACION;


OPEN RESULTADO FOR select seccion.id,asignatura.cod,asignatura.nombre as asignatura,seccion.nombre as seccion,asignatura.uv,SUBSTR(TO_CHAR(seccion.horaincio, 'HH:MI'), 5, 5) AS hora_inicio,SUBSTR(TO_CHAR(seccion.horafinal, 'HH:MI'), 5, 5) AS hora_final,persona.primernombre || ' ' || persona.SEGUNDOnombre || ' ' ||persona.primerapellido || ' ' ||persona.segundoapellido AS docente
,lunes,martes,miercoles,jueves,viernes,sabado,domingo,seccion.video from seccion
INNER JOIN MATRICULA ON SECCION.ID=MATRICULA.SECCION_ID
INNER JOIN ASIGNATURA ON SECCION.ASIGNATURA_COD=ASIGNATURA.COD
INNER JOIN DOCENTE ON seccion.Docente_n_empleado=docente.n_empleado
INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI=PERSONA.DNI
where periodo_id=vPERIODO and año_id=vAÑO and duracion_id=vDURACION and MATRICULA.ESTUDIANTE_N_CUENTA=pN_CUENTA and matricula.estado_mat_id='1' and seccion.estado!=0;

END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CSV_ESTUDIANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_CSV_ESTUDIANTE" (
    RResultado OUT SYS_REFCURSOR    
)
IS
 BEGIN


OPEN RResultado FOR
  select Persona_DNI,min(prioridad) from(
select PERSONA_DNI,nota_apr,puntuacion,prioridad from aspirante inner join Examen_Admision on aspirante.persona_dni=aspirante_persona_dni 
    inner join car_disponible on aspirante.car_disponible_id=car_disponible.id inner join carrera on carrera.id= car_disponible.carrera_id 
    where tipo_exam_id='1' and puntuacion+1>nota_apr and aspirante.evaluado=0)
    group by persona_DNI;



commit;

EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones

dbms_Output.put_line(sqlerrm);
    ROLLBACK;


end;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_DATOS_ASPIRANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_DATOS_ASPIRANTE" (
    RResultado OUT SYS_REFCURSOR,
    RDNI VARCHAR2 
   
)
IS
    TYPE REGISTRO IS RECORD (
        DNI VARCHAR2(15),
        Centro VARCHAR2(100),
        Nombre VARCHAR2(100),
        Direccion VARCHAR2(100),
        Correo VARCHAR2(200),
        Telefono VARCHAR2(15),
        PRIMERA_CARRERA VARCHAR2(80),
        NOTA_APROBATORIA NUMBER,
        SEGUNDA_CARRERA VARCHAR2(80),
        NOTA_APROBATORIA2 NUMBER,
        PAA VARCHAR2(10),
        EXAMEN_EXTRA1 VARCHAR2(10),
        EXAMEN_EXTRA2 VARCHAR2(10)
    );

    resultado REGISTRO;

    cursor Carreras  is select carrera.Nom_carrera,carrera.nota_apr,aspirante.prioridad from carrera inner join car_disponible on car_disponible.carrera_id=carrera.id inner join aspirante
    on aspirante.car_disponible_id=car_disponible.id  where aspirante.persona_dni=RDNI;

    cursor extras is select tipo_exam.nombre from  examen_admision inner join tipo_exam on examen_admision.tipo_exam_id=tipo_exam.id inner join aspirante
    on aspirante.persona_dni=examen_admision.aspirante_persona_dni where aspirante.persona_dni=RDNI group by  tipo_exam.nombre; 

    vCarrera varchar2(80);
    vNota number;
    vExtra varchar2(10);
    vPrioridad varchar2(5);
    CONTADOR NUMBER;
BEGIN


    SELECT DISTINCT persona_DNI,
                    acronimo || ', ' || nombre AS Centro_aplicacion,
                    PrimerNombre || ' ' || Segundonombre || ' ' || pRIMERaPELLIDO || ' ' || sEGUNDOaPELLIDO AS nombre,
                    DIRECCION,
                    CORREOELECTRONICO,
                    Telefono
    INTO resultado.DNI,
         resultado.Centro,
         resultado.Nombre,
         resultado.Direccion,
         resultado.Correo,
         resultado.Telefono
    FROM aspirante
    INNER JOIN persona ON persona.dni = aspirante.persona_dni
    INNER JOIN centro ON centro.id = aspirante.centro_id
    WHERE aspirante.persona_dni = RDNI;


    open carreras;

    LOOP
    FETCH Carreras INTO vCarrera, vNota,vPrioridad;
     EXIT WHEN Carreras%NOTFOUND;

            if vPrioridad='1' then
             resultado.PRIMERA_CARRERA:=vCarrera;
                   resultado.NOTA_APROBATORIA:=vnota;
            end if;
            if vPrioridad='2' then

            resultado.SEGUNDA_CARRERA:=vCarrera;
                   resultado.NOTA_APROBATORIA2:=vnota;                   
            end if;

    -- Realiza las operaciones que desees con los valores obtenidos
    -- Puedes usar las variables "variable_nombre_carrera" y "variable_nota_apr" aquí

    -- Sal del bucle cuando no haya más filas
END LOOP;


    CLOSE Carreras;


    CONTADOR:=1;

    open extras;

    LOOP
    FETCH extras INTO vextra;
    EXIT WHEN EXTRAS%NOTFOUND;
    dbms_output.put_line(vextra);
            if contador=2 then
             resultado.EXAMEN_EXTRA1:=vextra;          
    elsif contador=3  then
    resultado.EXAMEN_EXTRA2:=vextra;   
    end if;

    contador:=contador + 1;
    -- Realiza las operaciones que desees con los valores obtenidos
    -- Puedes usar las variables "variable_nombre_carrera" y "variable_nota_apr" aquí

     -- Sal del bucle cuando no haya más filas
END LOOP;


    CLOSE EXTRAS;




    resultado.PAA:='PAA';
    OPEN RResultado FOR
    SELECT resultado.DNI,
           resultado.Centro,
           resultado.Nombre,
           resultado.Direccion,
           resultado.Correo,
           resultado.Telefono,
           resultado.PRIMERA_CARRERA,
           resultado.NOTA_APROBATORIA,
           resultado.SEGUNDA_CARRERA,
           resultado.NOTA_APROBATORIA2,
           resultado.PAA,
           resultado.EXAMEN_EXTRA1,
           resultado.EXAMEN_extra2
    FROM DUAL; -- Utiliza DUAL si no tienes una tabla RESULTADO

EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones


    ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_DEPARTAMENTOS_MATRICULA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_DEPARTAMENTOS_MATRICULA" (RESULTADO OUT SYS_REFCURSOR, pN_CUENTA VARCHAR2)
    IS
    vCARRERA VARCHAR2(10);
    BEGIN

     SELECT CARRERA.ID INTO vCARRERA FROM car_disponible
      INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID = CARRERA.ID
      INNER JOIN ESTUDIANTE ON ESTUDIANTE.CAR_DISPONIBLE_ID = CAR_DISPONIBLE.ID
      WHERE ESTUDIANTE.N_CUENTA = pN_CUENTA;

    open resultado for SELECT distinct D.ID ,D.Nombre FROM PENSUM P
    INNER JOIN ASIGNATURA A ON A.COD=P.ASIGNATURA_COD
    INNER JOIN DEPTO D ON D.ID=A.DEPTO_ID
    INNER JOIN CARRERA C ON C.ID=P.CARRERA_ID
    WHERE C.ID=vCarrera; 


    EXCEPTION 
    WHEN OTHERS THEN
    RESULTADO:=NULL;
    END;






/
--------------------------------------------------------
--  DDL for Procedure OBTENER_DNI_ASPIRANTES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_DNI_ASPIRANTES" (rresultado out sys_refcursor)
is 

begin

OPEN rresultado FOR select distinct persona_dni,correoelectronico from aspirante inner join persona on persona.dni=aspirante.persona_dni
where aspirante.evaluado=0
;



EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones

      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;


end;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_DOCENTES_JEFE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_DOCENTES_JEFE" (
  c_DOCENTES OUT SYS_REFCURSOR,
  p_N_EMPLEADO VARCHAR2
) IS
  p_carrera_jefe VARCHAR2(8 CHAR);
BEGIN 

  
   SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente
  WHERE n_empleado = p_N_EMPLEADO;


  OPEN c_DOCENTES FOR
     SELECT DOCENTE.n_empleado, 
           PrimerNombre || ' ' || Segundonombre || ' ' || pRIMERaPELLIDO || ' ' || sEGUNDOaPELLIDO AS Nombre_Completo, centro.nombre as Centro
    FROM DOCENTE 
    INNER JOIN PERSONA ON docente.persona_dni = persona.dni
    INNER JOIN DEPTO_CENTRO ON DEPTO_CENTRO.ID=DOCENTE.DEPT_CENTRO_ID
    INNER JOIN CENTRO ON DOCENTE.DEPT_CENTRO_ID=CENTRO.ID
    WHERE DOCENTE.dept_centro_id = p_carrera_jefe;

EXCEPTION
  WHEN OTHERS THEN 

    DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_ESTUDIANTES_MATRICULADOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_ESTUDIANTES_MATRICULADOS" (RESULTADO OUT SYS_REFCURSOR)
IS
fechaActual date;
BEGIN
 
SELECT SYSDATE into  fechaActual FROM dual;

open resultado for 
select DISTINCT MATRICULA.ESTUDIANTE_N_CUENTA, persona.primernombre ||' '|| PERSONA.SEGUNDONOMBRE ||' '||persona.primerapellido ||' '|| PERSONA.SEGUNDOAPELLIDO AS NOMBRE 
,CARRERA.NOM_CARRERA from
MATRICULA
INNER JOIN ESTUDIANTE ON MATRICULA.ESTUDIANTE_N_CUENTA =ESTUDIANTE.N_CUENTA
INNER JOIN PERSONA ON PERSONA.DNI=PERSONA_DNI
INNER JOIN CAR_DISPONIBLE ON ESTUDIANTE.CAR_DISPONIBLE_ID=CAR_DISPONIBLE.ID
INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID=CARRERA.ID
INNER JOIN Seccion ON MATRICULA.SECCION_ID=SECCION.ID
INNER JOIN asignatura ON seccion.asignatura_cod = asignatura.cod
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (fechaActual BETWEEN FEC_PERIODO_INI AND FEC_PERIODO_FIN) and estado_mat_id='1';
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_ESTUDIANTES_MATRICULADOS2
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_ESTUDIANTES_MATRICULADOS2" (RESULTADO OUT SYS_REFCURSOR, p_N_CUENTA VARCHAR2)
IS
fechaActual date;
BEGIN
 
SELECT SYSDATE into  fechaActual FROM dual;

open resultado for 
select DISTINCT MATRICULA.ESTUDIANTE_N_CUENTA, persona.primernombre ||' '|| PERSONA.SEGUNDONOMBRE ||' '||persona.primerapellido ||' '|| PERSONA.SEGUNDOAPELLIDO AS NOMBRE 
,CARRERA.NOM_CARRERA from
MATRICULA
INNER JOIN ESTUDIANTE ON MATRICULA.ESTUDIANTE_N_CUENTA =ESTUDIANTE.N_CUENTA
INNER JOIN PERSONA ON PERSONA.DNI=PERSONA_DNI
INNER JOIN CAR_DISPONIBLE ON ESTUDIANTE.CAR_DISPONIBLE_ID=CAR_DISPONIBLE.ID
INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID=CARRERA.ID
INNER JOIN Seccion ON MATRICULA.SECCION_ID=SECCION.ID
INNER JOIN asignatura ON seccion.asignatura_cod = asignatura.cod
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (fechaActual BETWEEN FEC_PERIODO_INI AND FEC_PERIODO_FIN) and estado_mat_id='1' AND ESTUDIANTE.N_CUENTA LIKE (p_N_CUENTA || '%') AND ROWNUM <= 11; 
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_FOTOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_FOTOS" (Resultado out sys_refcursor, pcuenta varchar2)
IS
BEGIN

OPEN RESULTADO FOR SELECT FOTO FROM FOTO_PERFIL
WHERE N_CUENTA=PCUENTA;

EXCEPTION 
WHEN OTHERS THEN
RESULTADO:=NULL;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_INDICE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_INDICE" (
    c_INDICE OUT SYS_REFCURSOR,
    p_N_CUENTA VARCHAR2
) IS
    v_PUNTOS NUMBER;
    v_UV NUMBER;
BEGIN 

    SELECT SUM(CALIFICACION*UV) INTO v_PUNTOS
    FROM MATRICULA
    INNER JOIN SECCION ON SECCION.ID = MATRICULA.SECCION_ID
    INNER JOIN ASIGNATURA ON SECCION.ASIGNATURA_COD = ASIGNATURA.COD
    WHERE MATRICULA.ESTUDIANTE_N_CUENTA = p_N_CUENTA AND MATRICULA.ESTADO_MAT_ID = 4;

    SELECT SUM(UV) INTO v_UV
    FROM MATRICULA
    INNER JOIN SECCION ON SECCION.ID = MATRICULA.SECCION_ID
    INNER JOIN ASIGNATURA ON SECCION.ASIGNATURA_COD = ASIGNATURA.COD
    WHERE MATRICULA.ESTUDIANTE_N_CUENTA = p_N_CUENTA AND MATRICULA.ESTADO_MAT_ID = 4;

    OPEN c_INDICE FOR SELECT ROUND(v_PUNTOS/v_UV) FROM DUAL;

EXCEPTION
    WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_LISTA_ESPERA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_LISTA_ESPERA" (RESULTADO OUT sys_refcursor,SECCION VARCHAR2)
IS
BEGIN

    open resultado for  SELECT  COUNT(*)
    FROM matricula
    WHERE matricula.estado_mat_id = '3' and seccion_id=seccion;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_LISTA_MATRICULADOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_LISTA_MATRICULADOS" (RESULTADO OUT sys_refcursor,SECCION VARCHAR2)
IS
BEGIN

    open resultado for  SELECT  COUNT(*)
    FROM matricula
    WHERE matricula.estado_mat_id = '1' and seccion_id=seccion;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_NOTAS_ESTUDIANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_NOTAS_ESTUDIANTE" (c_SECCIONES OUT SYS_REFCURSOR, v_N_CUENTA VARCHAR2)IS
fechaActual date;
BEGIN 
select SYSDATE INTO fechaActual FROM DUAL;

OPEN c_SECCIONES FOR select seccion.id as id_seccion,seccion.nombre as Seccion,asignatura.nombre as asignatura,matricula.CALIFICACION  from asignatura 
inner join seccion on asignatura.cod = seccion.asignatura_cod
inner join matricula on matricula.seccion_id = seccion.id
inner join estudiante on matricula.estudiante_n_cuenta = estudiante.n_cuenta
inner join docente on seccion.docente_n_empleado =docente.n_empleado
inner join persona on persona.dni = docente.persona_dni
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
    WHERE (fechaActual between FEC_NOTA_INI AND FEC_NOTA_FIN) ANd
 estudiante.n_cuenta = v_N_CUENTA AND matricula.estado_mat_id='1';
 
 
EXCEPTION
  WHEN OTHERS THEN

    DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_PERMISO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_PERMISO" (CONFIRMACION OUT VARCHAR2 , p_INDICE NUMBER)IS
CONTADOR NUMBER;
BEGIN 
CONTADOR :=0;  

if p_INDICE IS NULL THEN

SELECT COUNT(*) INTO CONTADOR FROM CONF_MATRICULA
INNER JOIN PERIODO ON CONF_MATRICULA.PERIODO_PERIODO = PERIODO.PERIODO
                        AND CONF_MATRICULA.PERIODO_DURACION_ID = PERIODO.DURACION_ID
                        AND CONF_MATRICULA.PERIODO_AÑO = PERIODO.AÑO
                       WHERE (SYSTIMESTAMP BETWEEN CONF_MATRICULA.FECHA_INICIO AND CONF_MATRICULA.FECHA_FINAL) AND conf_matricula.nombre = 'B y Primer Ingreso';



ELSE

SELECT COUNT(*) INTO CONTADOR FROM CONF_MATRICULA
INNER JOIN PERIODO ON CONF_MATRICULA.PERIODO_PERIODO = PERIODO.PERIODO
                        AND CONF_MATRICULA.PERIODO_DURACION_ID = PERIODO.DURACION_ID
                        AND CONF_MATRICULA.PERIODO_AÑO = PERIODO.AÑO
                       WHERE (SYSTIMESTAMP BETWEEN CONF_MATRICULA.FECHA_INICIO AND CONF_MATRICULA.FECHA_FINAL) AND (p_INDICE BETWEEN INDICE_INICIO AND INDICE_FINAL);


END IF;


   IF CONTADOR != 0 THEN
   CONFIRMACION:= 'ES SU DIA DE MATRICULA';
   ELSE
   CONFIRMACION:='NO ES SU DIA DE MATRICULA';
   END IF;



END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_PERMISO2
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_PERMISO2" (CONFIRMACION OUT VARCHAR2 , PN_CUENTA VARCHAR2)IS
CONTADOR NUMBER;
 vDURACION VARCHAR2(10);
  vCARRERA VARCHAR2(10);
  vPERIODO VARCHAR2(50);
  vAÑO VARCHAR2(10);

BEGIN 
CONTADOR :=0;


  -- Obtener Duracion del periodo
  SELECT DURACION_ID, CARRERA.ID INTO vDURACION, vCARRERA FROM car_disponible
  INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID = CARRERA.ID
  INNER JOIN ESTUDIANTE ON ESTUDIANTE.CAR_DISPONIBLE_ID = CAR_DISPONIBLE.ID
  WHERE ESTUDIANTE.N_CUENTA = pN_CUENTA;

  -- Obtener periodo
  SELECT PERIODO.PERIODO, PERIODO.AÑO INTO vPERIODO, vAÑO FROM periodo 
  INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                         AND PERIODO.AÑO = PERIODO_AÑO
                         AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
  WHERE (SYSDATE BETWEEN FEC_PERIODO_INI AND FEC_PERIODO_FIN) AND PERIODO.DURACION_ID = vDURACION;


SELECT COUNT(*) INTO CONTADOR FROM CONF_MATRICULA
INNER JOIN PERIODO ON CONF_MATRICULA.PERIODO_PERIODO = PERIODO.PERIODO
                        AND CONF_MATRICULA.PERIODO_DURACION_ID = PERIODO.DURACION_ID
                        AND CONF_MATRICULA.PERIODO_AÑO = PERIODO.AÑO
                       WHERE (SYSTIMESTAMP <= CONF_MATRICULA.FECHA_FINAL) and 
                       conf_matricula.nombre = 'Adiciones y Cancelaciones' AND PERIODO.PERIODO=3 AND PERIODO.AÑO='2023' AND PERIODO.DURACION_ID='1'
                       ;

   IF CONTADOR != 0 THEN
   CONFIRMACION:= 'TIENE PERMITIDO CANCELAR';
   ELSE
   CONFIRMACION:='EL PERIODO DE CANCELACION YA VENCIO';
   END IF;



END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_SECCIONES_ASIGNATURA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_SECCIONES_ASIGNATURA" (RESULTADO OUT SYS_REFCURSOR,  p_N_EMPLEADO VARCHAR2, p_Asignatura Varchar2)
IS
 p_carrera_jefe  VARCHAR2(10);
fechaActual date;
vperiodo number;
vaño varchar2(20);
BEGIN 


SELECT SYSDATE into  fechaActual FROM dual;

  
   SELECT dept_centro_id INTO p_carrera_jefe
  FROM docente 
  WHERE n_empleado = p_N_EMPLEADO;
 
  
    OPEN RESULTADO FOR  
SELECT DISTINCT seccion.id,seccion.nombre,persona.primernombre|| ' ' || persona.primerapellido as Nombre,edificio.nombre,aula.nombre,SUBSTR(TO_CHAR(seccion.horaincio, 'HH:MI'), 5, 5) AS hora_inicio,SUBSTR(TO_CHAR(seccion.horafinal, 'HH:MI'), 5, 5) AS hora_final,
    seccion.cupos,    seccion.Lunes, seccion.martes,seccion.miercoles,seccion.jueves,seccion.viernes,seccion.sabado,seccion.domingo
FROM seccion
INNER JOIN asignatura ON seccion.asignatura_cod = asignatura.cod
INNER JOIN DOCENTE ON DOCENTE.N_EMPLEADO = seccion.DOCENTE_N_EMPLEADO
INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI=PERSONA.DNI
INNER JOIN AULA ON AULA.ID = seccion.AULA_ID
INNER JOIN EDIFICIO ON EDIFICIO.ID = EDIFICIO_ID  
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (fechaActual BETWEEN FEC_INI_PLAN AND FEC_FINAL_PLAN) AND DOCENTE.DEPT_CENTRO_ID= p_carrera_jefe and ASIGNATURA.COD= p_Asignatura and seccion.ESTADO!=0;
    
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_SECCIONES_DOCENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_SECCIONES_DOCENTE" (RESULTADO OUT SYS_REFCURSOR, N_EMPLEADO VARCHAR2)
IS
fechaActual date;
BEGIN

SELECT SYSDATE into  fechaActual FROM dual;

open resultado for select seccion.id, seccion.nombre || ' - ' || asignatura.nombre  from Seccion 
INNER JOIN asignatura ON seccion.asignatura_cod = asignatura.cod
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (fechaActual BETWEEN FEC_INI_PLAN AND FEC_FINAL_PLAN) and docente_n_empleado=N_Empleado;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_SECCIONES_ESTUDIANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_SECCIONES_ESTUDIANTE" (c_SECCIONES OUT SYS_REFCURSOR, v_N_CUENTA VARCHAR2)IS
vperiodo number;
vaño varchar2(10);
vduracion varchar(5);
fechaActual varchar(50);

BEGIN 

SELECT SYSDATE into  fechaActual FROM dual;

 
select distinct periodo_periodo,periodo_año,periodo.duracion_id into vperiodo,vaño,vduracion from estudiante inner join car_disponible on car_disponible.id=car_disponible_id
inner join carrera on carrera.id=carrera_id
inner join periodo on periodo.duracion_id=carrera.duracion_id
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
               AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (fechaActual between FEC_PERIODO_INI AND FEC_PERIODO_FIN) AND estudiante.n_cuenta = v_N_CUENTA;


 

OPEN c_SECCIONES FOR select seccion.id as id_seccion,seccion.nombre as Seccion,asignatura.nombre as asignatura,(persona.primernombre||' '||persona.primerapellido) as nombre_docente, EVALUACION.EVALUADA
from asignatura 
inner join seccion on asignatura.cod = seccion.asignatura_cod
INNER JOIN EVALUACION ON SECCION.ID = evaluacion.fk_seccion_id
inner join estudiante on EVALUACION.n_cuenta = estudiante.n_cuenta
inner join docente on seccion.docente_n_empleado =docente.n_empleado
inner join persona on persona.dni = docente.persona_dni
where estudiante.n_cuenta = v_N_CUENTA and seccion.duracion_id=vduracion and seccion.periodo_id=vperiodo and seccion.año_id=vaño;




EXCEPTION
  WHEN OTHERS THEN

    DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_S_REPO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."OBTENER_S_REPO" (c_SOLICITUD OUT SYS_REFCURSOR, p_N_CUENTA VARCHAR2)IS
BEGIN


OPEN c_SOLICITUD FOR SELECT persona.primernombre || ' ' || persona.primerapellido as Nombre, S_REPO.estudiante_n_cuenta, S_REPO.fecha_solicitud ,'SOLICITUD DE REPOSICION' as tipo, es_pagadp
FROM S_REPO 
inner join estudiante on estudiante.n_cuenta= S_REPO.estudiante_n_cuenta
inner join persona on persona.dni = estudiante.persona_dni
WHERE ESTUDIANTE.N_CUENTA =  p_N_CUENTA

UNION

select persona.primernombre || ' ' || persona.primerapellido as Nombre,estudiante_n_cuenta,fecha_solicitud,'SOLICITUD DE CAMBIO CENTRO' AS tipo, estado from s_cambio_centro
INNER JOIN ESTUDIANTE ON ESTUDIANTE_N_CUENTA=ESTUDIANTE.N_CUENTA
INNER JOIN PERSONA ON PERSONA.DNI=PERSONA_DNI
WHERE ESTUDIANTE.N_CUENTA =  p_N_CUENTA

UNION

SELECT PERSONA.PRIMERNOMBRE || ' ' || PERSONA.PRIMERAPELLIDO AS NOMBRE,s_cambio_car.ESTUDIANTE_N_CUENTA, s_cambio_car.fecha_solicitud, 'SOLICITUD DE CAMBIO DE CARRERA ' AS TIPO ,s_cambio_car.estado  FROM s_cambio_car  
INNER JOIN CAR_DISPONIBLE ON s_cambio_car.car_disponible_id = CAR_DISPONIBLE.ID
INNER JOIN CARRERA ON CARRERA.ID = car_disponible.carrera_iD 
INNER JOIN ESTUDIANTE ON ESTUDIANTE.N_CUENTA = s_cambio_car.ESTUDIANTE_N_CUENTA
INNER JOIN PERSONA ON PERSONA.DNI  = ESTUDIANTE.PERSONA_DNI
INNER JOIN CARRERAS_DEPTO ON s_cambio_car.CAR_DISPONIBLE_ID = CARRERAS_DEPTO.CARRERA_ID
WHERE ESTUDIANTE.N_CUENTA =  p_N_CUENTA

UNION

SELECT PERSONA.PRIMERNOMBRE || ' ' || PERSONA.PRIMERAPELLIDO AS NOMBRE,s_cancel_exc.ESTUDIANTE_N_CUENTA, s_cancel_exc.fecha_solicitud, 'SOLICITUD DE CANCELACION EXCEPCIONAL ' AS TIPO ,s_cancel_exc.estado  
FROM s_cancel_exc
INNER JOIN ESTUDIANTE ON ESTUDIANTE.N_CUENTA = s_cancel_exc.ESTUDIANTE_N_CUENTA
INNER JOIN PERSONA ON PERSONA.DNI  = ESTUDIANTE.PERSONA_DNI
WHERE s_cancel_exc.estudiante_n_cuenta = p_N_CUENTA;
 


END;

/
--------------------------------------------------------
--  DDL for Procedure PERFIL_DOCENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."PERFIL_DOCENTE" (c_PERFIL OUT SYS_REFCURSOR , p_SECCION VARCHAR2)IS
BEGIN 

OPEN c_PERFIL FOR SELECT PERSONA.PRIMERNOMBRE ||' '||PERSONA.SEGUNDONOMBRE|| ' ' || PERSONA.PRIMERAPELLIDO || ' ' || PERSONA.SEGUNDOAPELLIDO AS NOMBRE_DOCENTE, persona.correoelectronico, docente.fotoempleado, depto.nombre,seccion.nombre,ASIGNATURA.NOMBRE,seccion.asignatura_cod AS DEPARTAMENTO,seccion.video
FROM DOCENTE
INNER JOIN PERSONA ON DOCENTE.PERSONA_DNI = PERSONA.DNI
INNER JOIN DEPTO_CENTRO ON docente.dept_centro_id = depto_centro.id
INNER JOIN DEPTO ON depto_centro.depto_id =  depto.id
INNER JOIN SECCION ON seccion.docente_n_empleado= docente.n_empleado
INNER JOIN ASIGNATURA ON seccion.asignatura_cod = ASIGNATURA.COD
WHERE SECCION.ID = p_SECCION;
 
END;

/
--------------------------------------------------------
--  DDL for Procedure PERFIL_ESTUDIANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."PERFIL_ESTUDIANTE" (c_PERFIL OUT SYS_REFCURSOR , V_CUENTA VARCHAR2)IS
BEGIN 

OPEN c_PERFIL FOR SELECT PERSONA.PRIMERNOMBRE ||' '||PERSONA.SEGUNDONOMBRE|| ' ' || PERSONA.PRIMERAPELLIDO || ' ' || PERSONA.SEGUNDOAPELLIDO AS NOMBRE_ALUMNO,ESTUDIANTE.N_CUENTA ,  CARRERA.NOM_CARRERA, CENTRO.NOMBRE,PERSONA.CORREOELECTRONICO,estudiante.descripcion
FROM ESTUDIANTE 
INNER JOIN PERSONA ON ESTUDIANTE.PERSONA_DNI = PERSONA.DNI
INNER JOIN CAR_DISPONIBLE ON estudiante.car_disponible_id=car_disponible.ID
INNER JOIN CARRERA ON carrera.id = car_disponible.carrera_id
INNER JOIN CENTRO ON CAR_DISPONIBLE.CENTRO_ID = centro.id
WHERE estudiante.n_cuenta = V_CUENTA;

END;

/
--------------------------------------------------------
--  DDL for Procedure PERFIL_ESTUDIANTE2
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."PERFIL_ESTUDIANTE2" (c_PERFIL OUT SYS_REFCURSOR)IS
BEGIN 

OPEN c_PERFIL FOR SELECT PERSONA.PRIMERNOMBRE ||' '||PERSONA.SEGUNDONOMBRE|| ' ' || PERSONA.PRIMERAPELLIDO || ' ' || PERSONA.SEGUNDOAPELLIDO AS NOMBRE_ALUMNO,ESTUDIANTE.N_CUENTA ,  CARRERA.NOM_CARRERA, CENTRO.NOMBRE,PERSONA.CORREOELECTRONICO,estudiante.descripcion,persona.dni
FROM ESTUDIANTE 
INNER JOIN PERSONA ON ESTUDIANTE.PERSONA_DNI = PERSONA.DNI
INNER JOIN CAR_DISPONIBLE ON estudiante.car_disponible_id=car_disponible.ID
INNER JOIN CARRERA ON carrera.id = car_disponible.carrera_id
INNER JOIN CENTRO ON CAR_DISPONIBLE.CENTRO_ID = centro.id;

END;

/
--------------------------------------------------------
--  DDL for Procedure PERFIL_MATRICULA_ESTUDIANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."PERFIL_MATRICULA_ESTUDIANTE" (RESULTADO OUT SYS_REFCURSOR, pN_CUENTA VARCHAR2)
IS
vUV number:=25;
tUV number;
vDURACION VARCHAR2(10);
vN_CUENTA VARChAR2(20);
vPERSONA VARCHAR2(200);
vPERIODO VARCHAR2(50);
vAÑO VARCHAR2(10);

 
BEGIN
--Obtener datos  del estudiante
SELECT N_CUENTA,persona.primernombre || ' ' || persona.SEGUNDOnombre || ' ' ||persona.primerapellido || ' ' ||persona.segundoapellido as nombre
INTO vN_CUENTA,vPERSONA FROM Estudiante
INNER JOIN PERSONA ON ESTUDIANTE.PERSONA_DNI=PERSONA.DNI
WHERE ESTUDIANTE.N_CUENTA=pN_CUENTA;

--Obtener Duracion del periodo

select DURACION_ID into vDURACION from car_disponible
INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID=CARRERA.ID
INNER JOIN ESTUDIANTE ON ESTUDIANTE.CAR_DISPONIBLE_ID=CAR_DISPONIBLE.ID
WHERE ESTUDIANTE.N_CUENTA=pN_CUENTA;

--Obtener periodo
select PERIODO.PERIODO, PERIODO.AÑO INTO vPERIODO, vAÑO from periodo 
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (SYSDATE BETWEEN FEC_PERIODO_INI AND FEC_PERIODO_FIN) AND PERIODO.DURACION_ID=vDURACION;

DECLARE
CURSOR UNIDADESVALORATIVAS IS select ASIGNATURA.UV from seccion
INNER JOIN MATRICULA ON SECCION.ID=MATRICULA.SECCION_ID
INNER JOIN ASIGNATURA ON SECCION.ASIGNATURA_COD=ASIGNATURA.COD
where periodo_id=vPERIODO and año_id=vAÑO and duracion_id=vDURACION and MATRICULA.ESTUDIANTE_N_CUENTA=pN_CUENTA and matricula.estado_mat_id='1' and seccion.estado!=0;
BEGIN

open UNIDADESVALORATIVAS;
LOOP
FETCH UNIDADESVALORATIVAS INTO tUV;
DBMS_OUTPUT.PUT_LINE(vUV);
DBMS_OUTPUT.PUT_LINE(tUV);

EXIT WHEN UNIDADESVALORATIVAS%NOtFOUND;
vUV:=vUV-tuv;
END LOOP;

 OPEN RESULTADO FOR
    SELECT vN_CUENTA, vPERSONA, vPERIODO, vAÑO, vUV
    FROM DUAL;
END;
END;

/
--------------------------------------------------------
--  DDL for Procedure PERIODO_ACTUAL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."PERIODO_ACTUAL" (c_PERIODO OUT SYS_REFCURSOR)IS
BEGIN 

OPEN c_PERIODO FOR SELECT periodo.periodo,periodo.año FROM PERIODO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (SYSDATE BETWEEN FEC_INI_PLAN AND FEC_FINAL_PLAN);


END;

/
--------------------------------------------------------
--  DDL for Procedure RESULTADOS_ASPIRANTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."RESULTADOS_ASPIRANTE" (
    RResultado OUT SYS_REFCURSOR,
    RDNI VARCHAR2
    
)
IS
    TYPE REGISTRO IS RECORD (
        PRIMERA_CARRERA VARCHAR2(80),
        MENS_APROBATORIO VARCHAR2(60),
        SEGUNDA_CARRERA VARCHAR2(80),
        MENS_APROBATORIO2 VARCHAR2(60),
        PAA number,
        EXAMEN_EXTRA1 VARCHAR2(10),
        PUNT NUMBER,
        EXAMEN_EXTRA2 VARCHAR2(10),
        PUNT2 NUMBER
    );

    resultado REGISTRO;

    cursor Carreras  is select carrera.Nom_carrera,carrera.nota_apr,aspirante.prioridad from carrera inner join car_disponible on car_disponible.carrera_id=carrera.id inner join aspirante
    on aspirante.car_disponible_id=car_disponible.id  where aspirante.persona_dni=RDNI;

    cursor extras is select distinct tipo_exam.nombre,PUNTUACION from  examen_admision inner join tipo_exam on examen_admision.tipo_exam_id=tipo_exam.id inner join aspirante
    on aspirante.persona_dni=examen_admision.aspirante_persona_dni where aspirante.persona_dni=RDNI; 

    vCarrera varchar2(80);
    vNota number;
    vExtra varchar2(10);
    vPrioridad varchar2(5);
    CONTADOR NUMBER;
    vpuntuacion number;
BEGIN


    CONTADOR:=1;

    open extras;

    LOOP
    FETCH extras INTO vextra,VPUNTUACION;
    EXIT WHEN EXTRAS%NOTFOUND;

    if contador=1 then
        resultado.PAA:=VPUNTUACION; 

    elsif contador=2 then
             resultado.EXAMEN_EXTRA1:=vextra;    
             resultado.punt:=VPUNTUACION;  

    elsif contador=3  then

    resultado.EXAMEN_EXTRA2:=vextra;   
    resultado.punt2:=VPUNTUACION;  
    end if;
    contador:=contador + 1;
    -- Realiza las operaciones que desees con los valores obtenidos
    -- Puedes usar las variables "variable_nombre_carrera" y "variable_nota_apr" aquí
     -- Sal del bucle cuando no haya más filas
END LOOP;


    CLOSE EXTRAS;


    open carreras;

    LOOP
    FETCH Carreras INTO vCarrera, vNota,vPrioridad;

            if vPrioridad='1' then
            resultado.PRIMERA_CARRERA:=vCarrera;

            if vnota>resultado.PAA then

                   resultado.MENS_APROBATORIO:='NO APROBO A SU CARRERA PRINCIPAL';
            ELSE
            resultado.MENS_APROBATORIO:='APROBO A SU CARRERA PRINCIPAL';
            END IF;
            end if;
            if vPrioridad='2' then

            resultado.SEGUNDA_CARRERA:=vCarrera;
                  if vnota>resultado.PAA  then

                   resultado.MENS_APROBATORIO2:='NO APROBO A SU CARRERA SECUNDARIA';
            ELSE
            resultado.MENS_APROBATORIO2:='APROBO A SU CARRERA SECUNDARIA';
            END IF;                  
            end if;

    EXIT WHEN Carreras%NOTFOUND; -- Sal del bucle cuando no haya más filas
END LOOP;


    CLOSE Carreras;



IF (resultado.PAA IS NULL) or (resultado.punt IS NULL) then
resultado.PRIMERA_CARRERA:='UNAH22';
END IF;
OPEN RResultado FOR
    SELECT

           resultado.PRIMERA_CARRERA,
           resultado.MENS_APROBATORIO,
           resultado.SEGUNDA_CARRERA,
           resultado.MENS_APROBATORIO2,
           resultado.PAA,
           resultado.EXAMEN_EXTRA1,
           resultado.punt,
           resultado.EXAMEN_extra2,
           resultado.punt2
    FROM DUAL; -- Utiliza DUAL si no tienes una tabla RESULTADO
EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones

dbms_Output.put_line(sqlerrm);
    ROLLBACK;





end;

/
--------------------------------------------------------
--  DDL for Procedure SECCION_DOCENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."SECCION_DOCENTE" (SECCIONES OUT SYS_REFCURSOR, p_N_EMPLEADO VARCHAR2)IS
fechaActual Date;
BEGIN
    SELECT SYSDATE INTO fechaActual from dual;

    OPEN SECCIONES FOR SELECT  seccion.id,SECCION.NOMBRE, ASIGNATURA.NOMBRE,SECCION.VIDEO FROM SECCION
    INNER JOIN ASIGNATURA ON SECCION.ASIGNATURA_COD = ASIGNATURA.COD
    INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID 
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
    WHERE (fechaActual between FEC_PERIODO_INI AND FEC_PERIODO_FIN) AND
    SECCION.DOCENTE_N_EMPLEADO = p_N_EMPLEADO;
 
  
    EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones

      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;
 
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_CAMBIO_CAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."SP_CAMBIO_CAR" (CONFIRMACION OUT VARCHAR2,p_N_CUENTA VARCHAR2, p_CARRERA VARCHAR2, p_JUSTIFICACION VARCHAR2)IS
v_CAR_ANT VARCHAR2(8);
CONTADOR NUMBER;
BEGIN 

select COUNT(*) INTO CONTADOR from matricula 
inner join seccion on matricula.seccion_id = seccion.id
INNER JOIN PERIODO ON SECCION.PERIODO_ID=PERIODO.PERIODO
                        AND SECCION.DURACION_ID=PERIODO.DURACION_ID
                        AND SECCION.AÑO_ID=PERIODO.AÑO
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
                       AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
INNER JOIN ESTUDIANTE ON matricula.estudiante_n_cuenta = ESTUDIANTE.N_CUENTA
                       WHERE (sysdate BETWEEN FEC_INI_PLAN AND FEC_FINAL_PLAN) AND estudiante.N_CUENTA = p_N_CUENTA AND matricula.estado_mat_id !=2;

SELECT car_disponible_id INTO v_CAR_ANT FROM ESTUDIANTE 
WHERE N_CUENTA = p_N_CUENTA;

 
IF CONTADOR=0 THEN
INSERT INTO s_cambio_car VALUES (SQ_CAMBIO_CAR.NEXTVAL, P_N_CUENTA,p_CARRERA,NULL,v_CAR_ANT,SYSDATE,p_JUSTIFICACION);
CONFIRMACION:='SOLICITUD REALIZADA';
 
ELSE
CONFIRMACION:= 'USTED ESTA MATRICULADO EN EL PERIODO ACTUAL, POR LO TANTO NO PUEDE HACER CAMBIO DE CARRERA';
commit;
END IF;


  EXCEPTION
  
  
  WHEN OTHERS THEN 
    -- Manejo de excepciones
    confirmacion:= NULL;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;


END;

/
--------------------------------------------------------
--  DDL for Procedure SP_CAMBIO_CENTRO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."SP_CAMBIO_CENTRO" (CONFIRMACION OUT VARCHAR2,p_N_CUENTA VARCHAR2, p_DOCUMENTO VARCHAR2, p_CENTRO VARCHAR2)IS
BEGIN 

INSERT INTO s_cambio_CENTRO VALUES (SQ_CAMBIO_CENTRO.NEXTVAL, p_DOCUMENTO,p_N_CUENTA,p_CENTRO,NULL,SYSDATE);
CONFIRMACION:='SOLICITUD REALIZADA';
commit;
 EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones
    confirmacion:= NULL;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;


END;

/
--------------------------------------------------------
--  DDL for Procedure SP_CANCELACION_EX
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."SP_CANCELACION_EX" (CONFIRMACION OUT VARCHAR2,p_N_CUENTA VARCHAR2, p_DOCUMENTO VARCHAR2,p_JUSTIFICACION VARCHAR2)IS
VALOR varchar2(20);
BEGIN 

VALOR:=SQ_CANCEL_EX.NEXTVAL;

INSERT INTO S_CANCEL_EXC VALUES (VALOR, p_DOCUMENTO,p_justificacion,P_N_CUENTA,NULL,SYSDATE);
CONFIRMACION:=VALOR;
commit;
 EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones
    confirmacion:= NULL;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure SP_CANCELAR_SEC_EXC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."SP_CANCELAR_SEC_EXC" (CONFIRMACION OUT varchar2, id_seccion varchar2,  id_cancel_exc varchar2)is
begin

insert into CANCELACIONES_SECCION_EXC values (SQ_CANCEL_EXC_SEC.NEXTVAL, id_seccion,id_cancel_exc);
COMMIT; 

 EXCEPTION
  WHEN OTHERS THEN
    -- Manejo de excepciones
    confirmacion:= NULL;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK;

end;

/
--------------------------------------------------------
--  DDL for Procedure SP_REPO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."SP_REPO" (CONFIRMACION OUT VARCHAR2, p_N_CUENTA VARCHAR2, JUSTIFICACION VARCHAR2)IS
CONTADOR NUMBER;
vperiodo varchar2(20);
vaño varchar2(20);
BEGIN 


select distinct periodo_periodo,periodo_año into vperiodo,vaño from estudiante inner join car_disponible on car_disponible.id=car_disponible_id
inner join carrera on carrera.id=carrera_id
inner join periodo on periodo.duracion_id=carrera.duracion_id
INNER JOIN CONFIG_PERIOD ON PERIODO.PERIODO = PERIODO_PERIODO
                       AND PERIODO.AÑO = PERIODO_AÑO
               AND PERIODO.DURACION_ID = PERIODO_DURACION_ID
WHERE (sysdate between FEC_PERIODO_INI AND FEC_PERIODO_FIN) AND estudiante.n_cuenta = p_N_CUENTA;



INSERT INTO S_REPO VALUES (SQ_REPO.NEXTVAL,0,p_N_CUENTA,SYSDATE,JUSTIFICACION,vperiodo || ' ' ||vaño);
CONFIRMACION:='SOLICITUD REALIZADA';
commit;



 EXCEPTION
 WHEN DUP_VAL_ON_INDEX then
 
CONFIRMACION:='USTED YA REALIZO UNA SOLICITUD DE PAGO DE REPOSICION ESTE PERIODO';

  WHEN OTHERS THEN
    -- Manejo de excepciones
    confirmacion:= NULL;
      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    ROLLBACK; 

END;

/
--------------------------------------------------------
--  DDL for Procedure SP_SIGUIENTE_PERIODO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."SP_SIGUIENTE_PERIODO" (
  p_CURSOR OUT SYS_REFCURSOR,
    p_DURACION_ID IN varchar2
  
) AS
    p_PERIODO NUMBER;
    p_AÑO  VARCHAR2(4);
    v_next_period NUMBER;
    v_next_year VARCHAR2(4);

    CURSOR PERIODO_ACTUAL IS SELECT MAX(periodo) AS max_periodo, año
    FROM periodo
    WHERE duracion_id = p_DURACION_ID
    GROUP BY año
    ORDER BY año desc;
BEGIN
    -- Calcular el siguiente período

    OPEN PERIODO_ACTUAL;

    FETCH PERIODO_ACTUAL INTO p_PERIODO,p_AÑO;

    IF p_DURACION_ID = 1 THEN
        IF p_PERIODO = 3 THEN
            v_next_period := 1;
            v_next_year := TO_CHAR(TO_NUMBER(p_AÑO) + 1);
        ELSE
            v_next_period := p_PERIODO + 1;
            v_next_year := p_AÑO;
        END IF;
    ELSIF p_DURACION_ID = 2 THEN
        IF p_PERIODO = 2 THEN
            v_next_period := 1;
            v_next_year := TO_CHAR(TO_NUMBER(p_AÑO) + 1);
        ELSE
            v_next_period := p_PERIODO + 1;
            v_next_year := p_AÑO;
        END IF;
    ELSE
        v_next_period := p_PERIODO + 1;
        v_next_year := p_AÑO;
    END IF;
    CLOSE PERIODO_ACTUAL;
    -- Abrir un cursor para el siguiente período
    OPEN p_CURSOR FOR
    SELECT v_next_period AS PERIODO, v_next_year AS ANIO FROM DUAL;
END;

/
--------------------------------------------------------
--  DDL for Procedure TITULO_SECCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."TITULO_SECCION" (PSECCION OUT VARCHAR2,VSECCION VARCHAR2)
IS 
BEGIN

SELECT SECCION.NOMBRE | | '-' || ASIGNATURA.NOMBRE INTO PSECCION FROM SECCION INNER JOIN ASIGNATURA ON SECCION.ASIGNATURA_COD=ASIGNATURA.COD 
WHERE SECCION.ID=VSECCION;

END;

/
--------------------------------------------------------
--  DDL for Procedure VERIFICAR_CAMBIO_CAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."VERIFICAR_CAMBIO_CAR" (confirmacion out varchar2, id_solicitud number, verificacion varchar2)is
v_CUENTA VARCHAR2(20);
v_CAR_DISPONIBLE VARCHAR(20);
v_CARRERA VARCHAR(20);
v_CENTRO VARCHAR2(20);
CONTADOR NUMBER;
begin

SELECT ESTUDIANTE_N_CUENTA, CAR_DISPONIBLE_ID INTO v_CUENTA,v_CARRERA FROM S_CAMBIO_CAR 
WHERE ID = ID_SOLICITUD;

SELECT CENTRO.ID INTO v_CENTRO FROM ESTUDIANTE 
INNER JOIN CAR_DISPONIBLE ON estudiante.car_disponible_id =  CAR_DISPONIBLE.ID
INNER JOIN CENTRO ON car_disponible.centro_id = CENTRO.ID
WHERE ESTUDIANTE.N_CUENTA = v_CUENTA;

SELECT COUNT(*) INTO CONTADOR FROM CAR_DISPONIBLE
WHERE CARRERA_ID = v_CARRERA AND CENTRO_ID = v_CENTRO;



IF VERIFICACION =1 THEN

IF CONTADOR !=0 THEN

SELECT CAR_DISPONIBLE.ID INTO v_CAR_DISPONIBLE FROM CAR_DISPONIBLE
WHERE CARRERA_ID = v_CARRERA AND CENTRO_ID = v_CENTRO;


UPDATE S_CAMBIO_CAR
SET ESTADO = VERIFICACION
WHERE id = id_solicitud;


UPDATE ESTUDIANTE 
SET CAR_DISPONIBLE_ID = v_CAR_DISPONIBLE
WHERE ESTUDIANTE.N_CUENTA = v_CUENTA;
COMMIT;
confirmacion:='SOLICITUD ACEPTADA';


ELSE
UPDATE S_CAMBIO_CAR
SET ESTADO = 0
WHERE id = id_solicitud;
COMMIT;
confirmacion:='SOLICITUD DENEGADA YA QUE NO EXISTE ESTA CARRERA DENTRO DEL CENTRO';


END IF;

ELSE 

confirmacion:='SOLICITUD DENEGADA';

END IF;


EXCEPTION
    WHEN OTHERS THEN
    confirmacion:= SQLERRM;
       DBMS_OUTPUT.PUT_LINE(SQLERRM);

END;

/
--------------------------------------------------------
--  DDL for Procedure VERIFICAR_CAMBIO_CENTRO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."VERIFICAR_CAMBIO_CENTRO" (confirmacion out varchar2, id_solicitud number, verificacion varchar2)is

v_CUENTA VARCHAR2(20);
v_CENTRO VARCHAR(20);
v_CARRERA VARCHAR(20);
v_CAR_DIPONIBLE VARCHAR(20);
v_NUEVA_CAR_DISPONBIBLE VARCHAR(20);
CONTADOR NUMBER;

begin
 

SELECT ESTUDIANTE_N_CUENTA, CENTRO_ID INTO v_CUENTA,v_CENTRO FROM S_CAMBIO_CENTRO 
WHERE ID = ID_SOLICITUD;


SELECT CARRERA.ID INTO v_CARRERA FROM  ESTUDIANTE
INNER JOIN CAR_DISPONIBLE ON CAR_DISPONIBLE.ID = estudiante.car_disponible_id
INNER JOIN CARRERA ON CAR_DISPONIBLE.CARRERA_ID = CARRERA.ID
WHERE ESTUDIANTE.N_CUENTA = v_CUENTA;

SELECT COUNT(*) INTO CONTADOR FROM CAR_DISPONIBLE
WHERE CARRERA_ID = v_CARRERA AND CENTRO_ID = v_CENTRO;


IF verificacion = 1 THEN



IF CONTADOR != 0  THEN
SELECT CAR_DISPONIBLE.ID INTO v_NUEVA_CAR_DISPONBIBLE FROM CAR_DISPONIBLE
WHERE CARRERA_ID = v_CARRERA AND CENTRO_ID = v_CENTRO;

UPDATE S_CAMBIO_CENTRO
SET ESTADO = VERIFICACION
WHERE id = id_solicitud;

UPDATE ESTUDIANTE 
SET CAR_DISPONIBLE_ID = v_NUEVA_CAR_DISPONBIBLE
WHERE ESTUDIANTE.N_CUENTA = v_CUENTA;
COMMIT;

confirmacion:='SOLICITUD ACEPTADA'; 

ELSE 

confirmacion:='SOLICITUD DENEGADA YA QUE NO EXISTE ESA CARRERA EN EL CENTRO INGRESADO';

UPDATE S_CAMBIO_CENTRO
SET ESTADO = 0
WHERE id = id_solicitud;

commit;
END IF;
ELSE 


UPDATE S_CAMBIO_CENTRO
SET ESTADO = 0
WHERE id = id_solicitud;

commit;
confirmacion:='SOLICITUD DENEGADA';

END IF;



EXCEPTION
    WHEN OTHERS THEN
    confirmacion:= NULL;
       DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
--------------------------------------------------------
--  DDL for Procedure VERIFICAR_S_CANCEL_EXC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##DBAUNAH"."VERIFICAR_S_CANCEL_EXC" (confirmacion out varchar2, id_solicitud varchar2, verificacion varchar2)is
v_CUENTA VARCHAR2(100);
v_SECCION VARCHAR2(100);
v_RESULT VARCHAR2(100);
cursor c_CANCELACION_SECCION IS select id_seccion from CANCELACIONES_SECCION_EXC
where cancelaciones_seccion_exc.id_s_can_exc = ID_SOLICITUD;
begin



SELECT ESTUDIANTE_N_CUENTA INTO v_CUENTA FROM S_CANCEL_EXC 
WHERE ID = id_solicitud;


IF VERIFICACION = 1 THEN


OPEN  c_CANCELACION_SECCION;

LOOP


FETCH  c_CANCELACION_SECCION INTO v_SECCION;

CANCELAR_ASIGNATURA_ESTUDIANTE(v_RESULT, v_CUENTA,v_SECCION );


EXIT WHEN c_CANCELACION_SECCION%NOTFOUND;
COMMIT;

END LOOP;

CLOSE  c_CANCELACION_SECCION;
UPDATE S_CANCEL_EXC
SET ESTADO = VERIFICACION
WHERE id = id_solicitud;
COMMIT;

confirmacion:='SOLICITUD ACEPTADA';
ELSE 

UPDATE S_CANCEL_EXC
SET ESTADO = 0
WHERE id = id_solicitud;
COMMIT;

confirmacion:='SOLICITUD DENEGADA';

END IF;


EXCEPTION
    WHEN OTHERS THEN
    confirmacion:= NULL;
       DBMS_OUTPUT.PUT_LINE(SQLERRM);



END;

/
--------------------------------------------------------
--  Constraints for Table ADMIN
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ADMIN" MODIFY ("USUARIO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ADMIN" MODIFY ("CONTRASEÑA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ADMIN" MODIFY ("PERSONA_DNI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ADMIN" ADD CONSTRAINT "ADMIN_PK" PRIMARY KEY ("USUARIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ASPIRANTE
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ASPIRANTE" MODIFY ("PERSONA_DNI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ASPIRANTE" MODIFY ("FOTOCERTIFICADO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ASPIRANTE" MODIFY ("CENTRO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ASPIRANTE" MODIFY ("CAR_DISPONIBLE_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ASPIRANTE" ADD CONSTRAINT "ASPIRANTE_PK" PRIMARY KEY ("PERSONA_DNI", "CAR_DISPONIBLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REQUISITOS
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."REQUISITOS" ADD PRIMARY KEY ("ID_ASIGNATURA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SECCION
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."SECCION" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."SECCION" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."SECCION" MODIFY ("HORAINCIO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."SECCION" MODIFY ("HORAFINAL" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."SECCION" MODIFY ("CUPOS" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."SECCION" MODIFY ("ASIGNATURA_COD" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."SECCION" MODIFY ("AULA_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."SECCION" MODIFY ("ESTADO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."SECCION" ADD CONSTRAINT "SECCION_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DURACION
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."DURACION" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DURACION" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DURACION" ADD CONSTRAINT "DURACION_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table S_CAMBIO_CAR
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CAR" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CAR" MODIFY ("ESTUDIANTE_N_CUENTA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CAR" MODIFY ("CAR_DISPONIBLE_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CAR" ADD CONSTRAINT "S_CAMBIO_CAR_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CAR" ADD CHECK (ESTADO IN (0, 1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table S_REPO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."S_REPO" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_REPO" MODIFY ("ES_PAGADP" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_REPO" MODIFY ("ESTUDIANTE_N_CUENTA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_REPO" ADD CONSTRAINT "S_REPO_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."S_REPO" ADD CONSTRAINT "R_PERIODO" UNIQUE ("PERIODO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TIPO_EXAM
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."TIPO_EXAM" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."TIPO_EXAM" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."TIPO_EXAM" ADD CONSTRAINT "TIPO_EXAM_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EDIFICIO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."EDIFICIO" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."EDIFICIO" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."EDIFICIO" MODIFY ("CENTRO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."EDIFICIO" ADD CONSTRAINT "EDIFICIO_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ESTADO_MAT
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ESTADO_MAT" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ESTADO_MAT" ADD CONSTRAINT "ESTADO_MAT_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PERSONA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."PERSONA" ADD CONSTRAINT "CORREO_UK" UNIQUE ("CORREOELECTRONICO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."PERSONA" MODIFY ("DNI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERSONA" MODIFY ("PRIMERNOMBRE" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERSONA" MODIFY ("PRIMERAPELLIDO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERSONA" MODIFY ("DIRECCION" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERSONA" MODIFY ("CORREOELECTRONICO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERSONA" MODIFY ("TELEFONO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERSONA" ADD CONSTRAINT "PERSONA_PK" PRIMARY KEY ("DNI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ASIGNATURA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ASIGNATURA" MODIFY ("COD" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ASIGNATURA" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ASIGNATURA" MODIFY ("UV" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ASIGNATURA" MODIFY ("DEPTO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ASIGNATURA" ADD CONSTRAINT "ASIGNATURA_PK" PRIMARY KEY ("COD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EVALUACION
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."EVALUACION" ADD PRIMARY KEY ("ID_EVALUACION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."EVALUACION" ADD CHECK (AREA_PERSONAL BETWEEN 1 AND 5) ENABLE;
  ALTER TABLE "C##DBAUNAH"."EVALUACION" ADD CHECK (AREA_PROFESIONAL BETWEEN 1 AND 5) ENABLE;
  ALTER TABLE "C##DBAUNAH"."EVALUACION" ADD CHECK (AREA_ACADEMICA BETWEEN 1 AND 5) ENABLE;
--------------------------------------------------------
--  Constraints for Table FOTOS
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."FOTOS" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."FOTOS" MODIFY ("URL" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."FOTOS" MODIFY ("ESTUDIANTE_N_CUENTA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."FOTOS" ADD CONSTRAINT "FOTOS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table S_CAMBIO_CENTRO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CENTRO" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CENTRO" MODIFY ("ESTUDIANTE_N_CUENTA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CENTRO" MODIFY ("CENTRO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CENTRO" ADD CONSTRAINT "S_CAMBIO_CENTRO_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CENTRO" ADD CHECK (ESTADO IN (0, 1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table FACULTAD
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."FACULTAD" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."FACULTAD" MODIFY ("NOM_FACULTAD" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."FACULTAD" ADD CONSTRAINT "FACULTAD_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CARRERAS_DEPTO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CARRERAS_DEPTO" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEPTO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."DEPTO" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DEPTO" ADD CONSTRAINT "DEPTO_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ESTUDIANTE
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ESTUDIANTE" MODIFY ("N_CUENTA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ESTUDIANTE" MODIFY ("PERSONA_DNI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ESTUDIANTE" MODIFY ("CAR_DISPONIBLE_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ESTUDIANTE" ADD CONSTRAINT "ESTUDIANTE_PK" PRIMARY KEY ("N_CUENTA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."ESTUDIANTE" ADD CONSTRAINT "ESTUDIANTE_UK" UNIQUE ("PERSONA_DNI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CAR_DISPONIBLE
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CAR_DISPONIBLE" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CAR_DISPONIBLE" MODIFY ("CENTRO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CAR_DISPONIBLE" MODIFY ("CARRERA_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CAR_DISPONIBLE" ADD CONSTRAINT "CAR_DISPONIBLE_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MATRICULA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."MATRICULA" MODIFY ("ESTUDIANTE_N_CUENTA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."MATRICULA" MODIFY ("SECCION_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."MATRICULA" MODIFY ("ESTADO_MAT_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."MATRICULA" ADD CONSTRAINT "MATRICULA_PK" PRIMARY KEY ("ESTUDIANTE_N_CUENTA", "SECCION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ROL
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ROL" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ROL" MODIFY ("ROL" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."ROL" ADD CONSTRAINT "ROL_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CANCELACIONES_SECCION_EXC
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CANCELACIONES_SECCION_EXC" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CARRERA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CARRERA" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CARRERA" MODIFY ("NOM_CARRERA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CARRERA" MODIFY ("GRADO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CARRERA" MODIFY ("FACULTAD_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CARRERA" MODIFY ("NOTA_APR" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CARRERA" ADD CONSTRAINT "CARRERA_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CENTRO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CENTRO" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CENTRO" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CENTRO" MODIFY ("ACRONIMO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CENTRO" ADD CONSTRAINT "CENTRO_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCENTE
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."DOCENTE" MODIFY ("N_EMPLEADO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DOCENTE" MODIFY ("CONTRASEÑA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DOCENTE" MODIFY ("FOTOEMPLEADO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DOCENTE" MODIFY ("PERSONA_DNI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DOCENTE" MODIFY ("ROL_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DOCENTE" MODIFY ("CAR_DISPONIBLE_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DOCENTE" ADD CONSTRAINT "DOCENTE_PK" PRIMARY KEY ("N_EMPLEADO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."DOCENTE" MODIFY ("DEPT_CENTRO_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GRADO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."GRADO" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."GRADO" MODIFY ("TIPO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."GRADO" ADD CONSTRAINT "GRADO_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PENSUM
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."PENSUM" MODIFY ("CARRERA_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PENSUM" MODIFY ("ASIGNATURA_COD" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PENSUM" ADD CONSTRAINT "PENSUM_PK" PRIMARY KEY ("CARRERA_ID", "ASIGNATURA_COD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table S_CANCEL_EXC
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."S_CANCEL_EXC" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CANCEL_EXC" MODIFY ("DOCUMENTO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CANCEL_EXC" MODIFY ("ESTUDIANTE_N_CUENTA" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."S_CANCEL_EXC" ADD CONSTRAINT "S_CANCEL_EXC_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."S_CANCEL_EXC" ADD CHECK (ESTADO IN (0, 1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table AULA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."AULA" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."AULA" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."AULA" MODIFY ("EDIFICIO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."AULA" ADD CONSTRAINT "AULA_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEPTO_CENTRO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."DEPTO_CENTRO" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DEPTO_CENTRO" MODIFY ("DEPTO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DEPTO_CENTRO" MODIFY ("CENTRO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."DEPTO_CENTRO" ADD CONSTRAINT "DEPTO_CENTRO_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FOTO_PERFIL
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."FOTO_PERFIL" MODIFY ("N_CUENTA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AULA_ASIG
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."AULA_ASIG" MODIFY ("DEPT_CENTRO_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."AULA_ASIG" MODIFY ("AULA_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."AULA_ASIG" ADD CONSTRAINT "AULA_ASIG_PK" PRIMARY KEY ("DEPT_CENTRO_ID", "AULA_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONFIG_PERIOD
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("FEC_INI_PLAN" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("FEC_FINAL_PLAN" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("PERIODO_PERIODO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("PERIODO_AÑO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("PERIODO_DURACION_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" ADD CONSTRAINT "CONFIG_PERIOD_PK" PRIMARY KEY ("PERIODO_PERIODO", "PERIODO_AÑO", "PERIODO_DURACION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("FEC_PERIODO_INI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("FEC_PERIODO_FIN" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("FEC_NOTA_INI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("FEC_NOTA_FIN" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("FEC_CAN_EXP_INI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" MODIFY ("FEC_CAN_EXP_FIN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EXAMEN_ADMISION
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."EXAMEN_ADMISION" MODIFY ("ID_EXAM" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."EXAMEN_ADMISION" MODIFY ("TIPO_EXAM_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."EXAMEN_ADMISION" MODIFY ("ASPIRANTE_PERSONA_DNI" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."EXAMEN_ADMISION" ADD CONSTRAINT "EXAMEN_ADMISION_PK" PRIMARY KEY ("ID_EXAM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PERIODO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."PERIODO" MODIFY ("PERIODO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERIODO" MODIFY ("AÑO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERIODO" MODIFY ("ACTIVO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERIODO" MODIFY ("DURACION_ID" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."PERIODO" ADD CONSTRAINT "PERIODO_PK" PRIMARY KEY ("PERIODO", "AÑO", "DURACION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONF_MATRICULA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CONF_MATRICULA" MODIFY ("INDICE_INICIO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONF_MATRICULA" MODIFY ("INDICE_FINAL" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONF_MATRICULA" MODIFY ("FECHA_INICIO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONF_MATRICULA" MODIFY ("FECHA_FINAL" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONF_MATRICULA" MODIFY ("PERIODO_PERIODO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONF_MATRICULA" MODIFY ("PERIODO_AÑO" NOT NULL ENABLE);
  ALTER TABLE "C##DBAUNAH"."CONF_MATRICULA" MODIFY ("PERIODO_DURACION_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table ADMIN
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ADMIN" ADD CONSTRAINT "ADMIN_PERSONA_FK" FOREIGN KEY ("PERSONA_DNI")
	  REFERENCES "C##DBAUNAH"."PERSONA" ("DNI") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ASIGNATURA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ASIGNATURA" ADD CONSTRAINT "FK_DEPTO_ASIG" FOREIGN KEY ("DEPTO_ID")
	  REFERENCES "C##DBAUNAH"."DEPTO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ASPIRANTE
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ASPIRANTE" ADD CONSTRAINT "ASPIRANTE_CAR_DISPONIBLE_FK" FOREIGN KEY ("CAR_DISPONIBLE_ID")
	  REFERENCES "C##DBAUNAH"."CAR_DISPONIBLE" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."ASPIRANTE" ADD CONSTRAINT "ASPIRANTE_CENTRO_FK" FOREIGN KEY ("CENTRO_ID")
	  REFERENCES "C##DBAUNAH"."CENTRO" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."ASPIRANTE" ADD CONSTRAINT "ASPIRANTE_PERSONA_FK" FOREIGN KEY ("PERSONA_DNI")
	  REFERENCES "C##DBAUNAH"."PERSONA" ("DNI") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AULA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."AULA" ADD CONSTRAINT "AULA_EDIFICIO_FK" FOREIGN KEY ("EDIFICIO_ID")
	  REFERENCES "C##DBAUNAH"."EDIFICIO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AULA_ASIG
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."AULA_ASIG" ADD CONSTRAINT "AULA_ASIG_AULA_FK" FOREIGN KEY ("AULA_ID")
	  REFERENCES "C##DBAUNAH"."AULA" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."AULA_ASIG" ADD CONSTRAINT "DEPTO_CENTRO_FK" FOREIGN KEY ("DEPT_CENTRO_ID")
	  REFERENCES "C##DBAUNAH"."DEPTO_CENTRO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CANCELACIONES_SECCION_EXC
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CANCELACIONES_SECCION_EXC" ADD CONSTRAINT "FK_ID_SECCION" FOREIGN KEY ("ID_SECCION")
	  REFERENCES "C##DBAUNAH"."SECCION" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."CANCELACIONES_SECCION_EXC" ADD CONSTRAINT "FK_S_CAN_EXC" FOREIGN KEY ("ID_S_CAN_EXC")
	  REFERENCES "C##DBAUNAH"."S_CANCEL_EXC" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CARRERA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CARRERA" ADD CONSTRAINT "CARRERA_DURACION_FK" FOREIGN KEY ("DURACION_ID")
	  REFERENCES "C##DBAUNAH"."DURACION" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."CARRERA" ADD CONSTRAINT "CARRERA_FACULTAD_FK" FOREIGN KEY ("FACULTAD_ID")
	  REFERENCES "C##DBAUNAH"."FACULTAD" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."CARRERA" ADD CONSTRAINT "CARRERA_GRADO_FK" FOREIGN KEY ("GRADO_ID")
	  REFERENCES "C##DBAUNAH"."GRADO" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."CARRERA" ADD CONSTRAINT "CARRERA_TIPO_EXAM_FK" FOREIGN KEY ("EX_EXTRA")
	  REFERENCES "C##DBAUNAH"."TIPO_EXAM" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CARRERAS_DEPTO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CARRERAS_DEPTO" ADD CONSTRAINT "FK_DEPTO_CARRERA" FOREIGN KEY ("DEPTO_ID")
	  REFERENCES "C##DBAUNAH"."DEPTO_CENTRO" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."CARRERAS_DEPTO" ADD CONSTRAINT "FK_CARRERA_DEPTO" FOREIGN KEY ("CARRERA_ID")
	  REFERENCES "C##DBAUNAH"."CAR_DISPONIBLE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CAR_DISPONIBLE
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CAR_DISPONIBLE" ADD CONSTRAINT "CAR_DISPONIBLE_CARRERA_FK" FOREIGN KEY ("CARRERA_ID")
	  REFERENCES "C##DBAUNAH"."CARRERA" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."CAR_DISPONIBLE" ADD CONSTRAINT "CAR_DISPONIBLE_CENTRO_FK" FOREIGN KEY ("CENTRO_ID")
	  REFERENCES "C##DBAUNAH"."CENTRO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONFIG_PERIOD
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CONFIG_PERIOD" ADD CONSTRAINT "CONFIG_PERIOD_PERIODO_FK" FOREIGN KEY ("PERIODO_PERIODO", "PERIODO_AÑO", "PERIODO_DURACION_ID")
	  REFERENCES "C##DBAUNAH"."PERIODO" ("PERIODO", "AÑO", "DURACION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONF_MATRICULA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."CONF_MATRICULA" ADD CONSTRAINT "CONF_MATRICULA_PERIODO_FK" FOREIGN KEY ("PERIODO_PERIODO", "PERIODO_AÑO", "PERIODO_DURACION_ID")
	  REFERENCES "C##DBAUNAH"."PERIODO" ("PERIODO", "AÑO", "DURACION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEPTO_CENTRO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."DEPTO_CENTRO" ADD CONSTRAINT "FK_DEPTO" FOREIGN KEY ("DEPTO_ID")
	  REFERENCES "C##DBAUNAH"."DEPTO" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."DEPTO_CENTRO" ADD CONSTRAINT "FK_CENTRO" FOREIGN KEY ("CENTRO_ID")
	  REFERENCES "C##DBAUNAH"."CENTRO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCENTE
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."DOCENTE" ADD CONSTRAINT "DOCENTE_CAR_DISPONIBLE_FK" FOREIGN KEY ("CAR_DISPONIBLE_ID")
	  REFERENCES "C##DBAUNAH"."CAR_DISPONIBLE" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."DOCENTE" ADD CONSTRAINT "DOCENTE_PERSONA_FK" FOREIGN KEY ("PERSONA_DNI")
	  REFERENCES "C##DBAUNAH"."PERSONA" ("DNI") ENABLE;
  ALTER TABLE "C##DBAUNAH"."DOCENTE" ADD CONSTRAINT "DOCENTE_ROL_FK" FOREIGN KEY ("ROL_ID")
	  REFERENCES "C##DBAUNAH"."ROL" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."DOCENTE" ADD CONSTRAINT "FK_DEPT_DOCENTE" FOREIGN KEY ("DEPT_CENTRO_ID")
	  REFERENCES "C##DBAUNAH"."DEPTO_CENTRO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EDIFICIO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."EDIFICIO" ADD CONSTRAINT "EDIFICIO_CENTRO_FK" FOREIGN KEY ("CENTRO_ID")
	  REFERENCES "C##DBAUNAH"."CENTRO" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ESTUDIANTE
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."ESTUDIANTE" ADD CONSTRAINT "ESTUDIANTE_CAR_DISPONIBLE_FK" FOREIGN KEY ("CAR_DISPONIBLE_ID")
	  REFERENCES "C##DBAUNAH"."CAR_DISPONIBLE" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."ESTUDIANTE" ADD CONSTRAINT "ESTUDIANTE_PERSONA_FK" FOREIGN KEY ("PERSONA_DNI")
	  REFERENCES "C##DBAUNAH"."PERSONA" ("DNI") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EVALUACION
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."EVALUACION" ADD CONSTRAINT "FK_SECCION_ID" FOREIGN KEY ("FK_SECCION_ID")
	  REFERENCES "C##DBAUNAH"."SECCION" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."EVALUACION" ADD CONSTRAINT "FK_N_CUENTA" FOREIGN KEY ("N_CUENTA")
	  REFERENCES "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EXAMEN_ADMISION
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."EXAMEN_ADMISION" ADD CONSTRAINT "EXAMEN_ADMISION_ASPIRANTE_FK" FOREIGN KEY ("ASPIRANTE_PERSONA_DNI", "ASPIRANTE_CAR_DISPONIBLE_ID")
	  REFERENCES "C##DBAUNAH"."ASPIRANTE" ("PERSONA_DNI", "CAR_DISPONIBLE_ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."EXAMEN_ADMISION" ADD CONSTRAINT "EXAMEN_ADMISION_TIPO_EXAM_FK" FOREIGN KEY ("TIPO_EXAM_ID")
	  REFERENCES "C##DBAUNAH"."TIPO_EXAM" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FOTOS
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."FOTOS" ADD CONSTRAINT "FOTOS_ESTUDIANTE_FK" FOREIGN KEY ("ESTUDIANTE_N_CUENTA")
	  REFERENCES "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FOTO_PERFIL
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."FOTO_PERFIL" ADD CONSTRAINT "FK_ESTUDIANTE" FOREIGN KEY ("N_CUENTA")
	  REFERENCES "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MATRICULA
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."MATRICULA" ADD CONSTRAINT "MATRICULA_ESTADO_MAT_FK" FOREIGN KEY ("ESTADO_MAT_ID")
	  REFERENCES "C##DBAUNAH"."ESTADO_MAT" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."MATRICULA" ADD CONSTRAINT "MATRICULA_ESTUDIANTE_FK" FOREIGN KEY ("ESTUDIANTE_N_CUENTA")
	  REFERENCES "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") ENABLE;
  ALTER TABLE "C##DBAUNAH"."MATRICULA" ADD CONSTRAINT "MATRICULA_SECCION_FK" FOREIGN KEY ("SECCION_ID")
	  REFERENCES "C##DBAUNAH"."SECCION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PENSUM
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."PENSUM" ADD CONSTRAINT "PENSUM_ASIGNATURA_FK" FOREIGN KEY ("ASIGNATURA_COD")
	  REFERENCES "C##DBAUNAH"."ASIGNATURA" ("COD") ENABLE;
  ALTER TABLE "C##DBAUNAH"."PENSUM" ADD CONSTRAINT "PENSUM_CARRERA_FK" FOREIGN KEY ("CARRERA_ID")
	  REFERENCES "C##DBAUNAH"."CARRERA" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PERIODO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."PERIODO" ADD CONSTRAINT "PERIODO_DURACION_FK" FOREIGN KEY ("DURACION_ID")
	  REFERENCES "C##DBAUNAH"."DURACION" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REQUISITOS
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."REQUISITOS" ADD CONSTRAINT "FK_ASIGNATURA" FOREIGN KEY ("ID_ASIGNATURA")
	  REFERENCES "C##DBAUNAH"."ASIGNATURA" ("COD") ENABLE;
  ALTER TABLE "C##DBAUNAH"."REQUISITOS" ADD CONSTRAINT "FK_REQUISITO" FOREIGN KEY ("ID_REQUISITO")
	  REFERENCES "C##DBAUNAH"."ASIGNATURA" ("COD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SECCION
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."SECCION" ADD CONSTRAINT "FK_SECCION_PERIODO" FOREIGN KEY ("PERIODO_ID", "AÑO_ID", "DURACION_ID")
	  REFERENCES "C##DBAUNAH"."PERIODO" ("PERIODO", "AÑO", "DURACION_ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."SECCION" ADD CONSTRAINT "SECCION_ASIGNATURA_FK" FOREIGN KEY ("ASIGNATURA_COD")
	  REFERENCES "C##DBAUNAH"."ASIGNATURA" ("COD") ENABLE;
  ALTER TABLE "C##DBAUNAH"."SECCION" ADD CONSTRAINT "SECCION_AULA_FK" FOREIGN KEY ("AULA_ID")
	  REFERENCES "C##DBAUNAH"."AULA" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."SECCION" ADD CONSTRAINT "SECCION_DOCENTE_FK" FOREIGN KEY ("DOCENTE_N_EMPLEADO")
	  REFERENCES "C##DBAUNAH"."DOCENTE" ("N_EMPLEADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table S_CAMBIO_CAR
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CAR" ADD CONSTRAINT "S_CAMBIO_CAR_CAR_DISPONIBLE_FK" FOREIGN KEY ("CAR_DISPONIBLE_ID")
	  REFERENCES "C##DBAUNAH"."CAR_DISPONIBLE" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CAR" ADD CONSTRAINT "S_CAMBIO_CAR_ESTUDIANTE_FK" FOREIGN KEY ("ESTUDIANTE_N_CUENTA")
	  REFERENCES "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table S_CAMBIO_CENTRO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CENTRO" ADD CONSTRAINT "S_CAMBIO_CENTRO_CENTRO_FK" FOREIGN KEY ("CENTRO_ID")
	  REFERENCES "C##DBAUNAH"."CENTRO" ("ID") ENABLE;
  ALTER TABLE "C##DBAUNAH"."S_CAMBIO_CENTRO" ADD CONSTRAINT "S_CAMBIO_CENTRO_ESTUDIANTE_FK" FOREIGN KEY ("ESTUDIANTE_N_CUENTA")
	  REFERENCES "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table S_CANCEL_EXC
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."S_CANCEL_EXC" ADD CONSTRAINT "S_CANCEL_EXC_ESTUDIANTE_FK" FOREIGN KEY ("ESTUDIANTE_N_CUENTA")
	  REFERENCES "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table S_REPO
--------------------------------------------------------

  ALTER TABLE "C##DBAUNAH"."S_REPO" ADD CONSTRAINT "S_REPO_ESTUDIANTE_FK" FOREIGN KEY ("ESTUDIANTE_N_CUENTA")
	  REFERENCES "C##DBAUNAH"."ESTUDIANTE" ("N_CUENTA") ENABLE;
